/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("BrowserImageResizer", [], factory);
	else if(typeof exports === 'object')
		exports["BrowserImageResizer"] = factory();
	else
		root["BrowserImageResizer"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/exifreader/src/byte-order.js":
/*!***************************************************!*\
  !*** ./node_modules/exifreader/src/byte-order.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\nvar LITTLE_ENDIAN = 0x4949;\nvar BIG_ENDIAN = 0x4d4d;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  BIG_ENDIAN: BIG_ENDIAN,\n  LITTLE_ENDIAN: LITTLE_ENDIAN,\n  getByteOrder: getByteOrder\n});\n\nfunction getByteOrder(dataView, tiffHeaderOffset) {\n  if (dataView.getUint16(tiffHeaderOffset) === LITTLE_ENDIAN) {\n    return LITTLE_ENDIAN;\n  } else if (dataView.getUint16(tiffHeaderOffset) === BIG_ENDIAN) {\n    return BIG_ENDIAN;\n  }\n\n  throw new Error('Illegal byte order value. Faulty image.');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvYnl0ZS1vcmRlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7OztBQUlBLElBQU1BLGFBQWEsR0FBRyxNQUF0QjtBQUNBLElBQU1DLFVBQVUsR0FBRyxNQUFuQjtBQUVBLGlFQUFlO0FBQ1hBLEVBQUFBLFVBQVUsRUFBVkEsVUFEVztBQUVYRCxFQUFBQSxhQUFhLEVBQWJBLGFBRlc7QUFHWEUsRUFBQUEsWUFBWSxFQUFaQTtBQUhXLENBQWY7O0FBTUEsU0FBU0EsWUFBVCxDQUFzQkMsUUFBdEIsRUFBZ0NDLGdCQUFoQyxFQUFrRDtBQUM5QyxNQUFJRCxRQUFRLENBQUNFLFNBQVQsQ0FBbUJELGdCQUFuQixNQUF5Q0osYUFBN0MsRUFBNEQ7QUFDeEQsV0FBT0EsYUFBUDtBQUNILEdBRkQsTUFFTyxJQUFJRyxRQUFRLENBQUNFLFNBQVQsQ0FBbUJELGdCQUFuQixNQUF5Q0gsVUFBN0MsRUFBeUQ7QUFDNUQsV0FBT0EsVUFBUDtBQUNIOztBQUNELFFBQU0sSUFBSUssS0FBSixDQUFVLHlDQUFWLENBQU47QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL0Jyb3dzZXJJbWFnZVJlc2l6ZXIvLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvYnl0ZS1vcmRlci5qcz9hM2Y1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIFRoaXMgU291cmNlIENvZGUgRm9ybSBpcyBzdWJqZWN0IHRvIHRoZSB0ZXJtcyBvZiB0aGUgTW96aWxsYSBQdWJsaWNcbiAqIExpY2Vuc2UsIHYuIDIuMC4gSWYgYSBjb3B5IG9mIHRoZSBNUEwgd2FzIG5vdCBkaXN0cmlidXRlZCB3aXRoIHRoaXNcbiAqIGZpbGUsIFlvdSBjYW4gb2J0YWluIG9uZSBhdCBodHRwczovL21vemlsbGEub3JnL01QTC8yLjAvLiAqL1xuXG5jb25zdCBMSVRUTEVfRU5ESUFOID0gMHg0OTQ5O1xuY29uc3QgQklHX0VORElBTiA9IDB4NGQ0ZDtcblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIEJJR19FTkRJQU4sXG4gICAgTElUVExFX0VORElBTixcbiAgICBnZXRCeXRlT3JkZXJcbn07XG5cbmZ1bmN0aW9uIGdldEJ5dGVPcmRlcihkYXRhVmlldywgdGlmZkhlYWRlck9mZnNldCkge1xuICAgIGlmIChkYXRhVmlldy5nZXRVaW50MTYodGlmZkhlYWRlck9mZnNldCkgPT09IExJVFRMRV9FTkRJQU4pIHtcbiAgICAgICAgcmV0dXJuIExJVFRMRV9FTkRJQU47XG4gICAgfSBlbHNlIGlmIChkYXRhVmlldy5nZXRVaW50MTYodGlmZkhlYWRlck9mZnNldCkgPT09IEJJR19FTkRJQU4pIHtcbiAgICAgICAgcmV0dXJuIEJJR19FTkRJQU47XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcignSWxsZWdhbCBieXRlIG9yZGVyIHZhbHVlLiBGYXVsdHkgaW1hZ2UuJyk7XG59XG4iXSwibmFtZXMiOlsiTElUVExFX0VORElBTiIsIkJJR19FTkRJQU4iLCJnZXRCeXRlT3JkZXIiLCJkYXRhVmlldyIsInRpZmZIZWFkZXJPZmZzZXQiLCJnZXRVaW50MTYiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/byte-order.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/constants.js":
/*!**************************************************!*\
  !*** ./node_modules/exifreader/src/constants.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  USE_FILE: true,\n  USE_JFIF: true,\n  USE_PNG_FILE: true,\n  USE_EXIF: true,\n  USE_IPTC: true,\n  USE_XMP: true,\n  USE_ICC: true,\n  USE_MPF: true,\n  USE_THUMBNAIL: true,\n  USE_TIFF: true,\n  USE_JPEG: true,\n  USE_PNG: true,\n  USE_HEIC: true,\n  USE_WEBP: true\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvY29uc3RhbnRzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7O0FBSUEsaUVBQWU7QUFDWEEsRUFBQUEsUUFBUSxFQUFFLElBREM7QUFFWEMsRUFBQUEsUUFBUSxFQUFFLElBRkM7QUFHWEMsRUFBQUEsWUFBWSxFQUFFLElBSEg7QUFJWEMsRUFBQUEsUUFBUSxFQUFFLElBSkM7QUFLWEMsRUFBQUEsUUFBUSxFQUFFLElBTEM7QUFNWEMsRUFBQUEsT0FBTyxFQUFFLElBTkU7QUFPWEMsRUFBQUEsT0FBTyxFQUFFLElBUEU7QUFRWEMsRUFBQUEsT0FBTyxFQUFFLElBUkU7QUFTWEMsRUFBQUEsYUFBYSxFQUFFLElBVEo7QUFVWEMsRUFBQUEsUUFBUSxFQUFFLElBVkM7QUFXWEMsRUFBQUEsUUFBUSxFQUFFLElBWEM7QUFZWEMsRUFBQUEsT0FBTyxFQUFFLElBWkU7QUFhWEMsRUFBQUEsUUFBUSxFQUFFLElBYkM7QUFjWEMsRUFBQUEsUUFBUSxFQUFFO0FBZEMsQ0FBZiIsInNvdXJjZXMiOlsid2VicGFjazovL0Jyb3dzZXJJbWFnZVJlc2l6ZXIvLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvY29uc3RhbnRzLmpzPzE4MjQiXSwic291cmNlc0NvbnRlbnQiOlsiLyogVGhpcyBTb3VyY2UgQ29kZSBGb3JtIGlzIHN1YmplY3QgdG8gdGhlIHRlcm1zIG9mIHRoZSBNb3ppbGxhIFB1YmxpY1xuICogTGljZW5zZSwgdi4gMi4wLiBJZiBhIGNvcHkgb2YgdGhlIE1QTCB3YXMgbm90IGRpc3RyaWJ1dGVkIHdpdGggdGhpc1xuICogZmlsZSwgWW91IGNhbiBvYnRhaW4gb25lIGF0IGh0dHBzOi8vbW96aWxsYS5vcmcvTVBMLzIuMC8uICovXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBVU0VfRklMRTogdHJ1ZSxcbiAgICBVU0VfSkZJRjogdHJ1ZSxcbiAgICBVU0VfUE5HX0ZJTEU6IHRydWUsXG4gICAgVVNFX0VYSUY6IHRydWUsXG4gICAgVVNFX0lQVEM6IHRydWUsXG4gICAgVVNFX1hNUDogdHJ1ZSxcbiAgICBVU0VfSUNDOiB0cnVlLFxuICAgIFVTRV9NUEY6IHRydWUsXG4gICAgVVNFX1RIVU1CTkFJTDogdHJ1ZSxcbiAgICBVU0VfVElGRjogdHJ1ZSxcbiAgICBVU0VfSlBFRzogdHJ1ZSxcbiAgICBVU0VfUE5HOiB0cnVlLFxuICAgIFVTRV9IRUlDOiB0cnVlLFxuICAgIFVTRV9XRUJQOiB0cnVlXG59O1xuIl0sIm5hbWVzIjpbIlVTRV9GSUxFIiwiVVNFX0pGSUYiLCJVU0VfUE5HX0ZJTEUiLCJVU0VfRVhJRiIsIlVTRV9JUFRDIiwiVVNFX1hNUCIsIlVTRV9JQ0MiLCJVU0VfTVBGIiwiVVNFX1RIVU1CTkFJTCIsIlVTRV9USUZGIiwiVVNFX0pQRUciLCJVU0VfUE5HIiwiVVNFX0hFSUMiLCJVU0VfV0VCUCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/constants.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/dataview.js":
/*!*************************************************!*\
  !*** ./node_modules/exifreader/src/dataview.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DataView)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar DataView = /*#__PURE__*/function () {\n  function DataView(buffer) {\n    _classCallCheck(this, DataView);\n\n    if (bufferTypeIsUnsupported(buffer)) {\n      throw new Error('DataView: Passed buffer type is unsupported.');\n    }\n\n    this.buffer = buffer;\n    this.byteLength = this.buffer.length;\n  }\n\n  _createClass(DataView, [{\n    key: \"getUint8\",\n    value: function getUint8(offset) {\n      return this.buffer.readUInt8(offset);\n    }\n  }, {\n    key: \"getUint16\",\n    value: function getUint16(offset, littleEndian) {\n      if (littleEndian) {\n        return this.buffer.readUInt16LE(offset);\n      }\n\n      return this.buffer.readUInt16BE(offset);\n    }\n  }, {\n    key: \"getUint32\",\n    value: function getUint32(offset, littleEndian) {\n      if (littleEndian) {\n        return this.buffer.readUInt32LE(offset);\n      }\n\n      return this.buffer.readUInt32BE(offset);\n    }\n  }, {\n    key: \"getInt32\",\n    value: function getInt32(offset, littleEndian) {\n      if (littleEndian) {\n        return this.buffer.readInt32LE(offset);\n      }\n\n      return this.buffer.readInt32BE(offset);\n    }\n  }]);\n\n  return DataView;\n}();\n\n\n\nfunction bufferTypeIsUnsupported(buffer) {\n  return _typeof(buffer) !== 'object' || buffer.length === undefined || buffer.readUInt8 === undefined || buffer.readUInt16LE === undefined || buffer.readUInt16BE === undefined || buffer.readUInt32LE === undefined || buffer.readUInt32BE === undefined || buffer.readInt32LE === undefined || buffer.readInt32BE === undefined;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvZGF0YXZpZXcuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0lBQXFCQTtBQUNqQixvQkFBWUMsTUFBWixFQUFvQjtBQUFBOztBQUNoQixRQUFJQyx1QkFBdUIsQ0FBQ0QsTUFBRCxDQUEzQixFQUFxQztBQUNqQyxZQUFNLElBQUlFLEtBQUosQ0FBVSw4Q0FBVixDQUFOO0FBQ0g7O0FBRUQsU0FBS0YsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsU0FBS0csVUFBTCxHQUFrQixLQUFLSCxNQUFMLENBQVlJLE1BQTlCO0FBQ0g7Ozs7NkJBRVFDLFFBQVE7QUFDYixhQUFPLEtBQUtMLE1BQUwsQ0FBWU0sU0FBWixDQUFzQkQsTUFBdEIsQ0FBUDtBQUNIOzs7OEJBRVNBLFFBQVFFLGNBQWM7QUFDNUIsVUFBSUEsWUFBSixFQUFrQjtBQUNkLGVBQU8sS0FBS1AsTUFBTCxDQUFZUSxZQUFaLENBQXlCSCxNQUF6QixDQUFQO0FBQ0g7O0FBQ0QsYUFBTyxLQUFLTCxNQUFMLENBQVlTLFlBQVosQ0FBeUJKLE1BQXpCLENBQVA7QUFDSDs7OzhCQUVTQSxRQUFRRSxjQUFjO0FBQzVCLFVBQUlBLFlBQUosRUFBa0I7QUFDZCxlQUFPLEtBQUtQLE1BQUwsQ0FBWVUsWUFBWixDQUF5QkwsTUFBekIsQ0FBUDtBQUNIOztBQUNELGFBQU8sS0FBS0wsTUFBTCxDQUFZVyxZQUFaLENBQXlCTixNQUF6QixDQUFQO0FBQ0g7Ozs2QkFFUUEsUUFBUUUsY0FBYztBQUMzQixVQUFJQSxZQUFKLEVBQWtCO0FBQ2QsZUFBTyxLQUFLUCxNQUFMLENBQVlZLFdBQVosQ0FBd0JQLE1BQXhCLENBQVA7QUFDSDs7QUFDRCxhQUFPLEtBQUtMLE1BQUwsQ0FBWWEsV0FBWixDQUF3QlIsTUFBeEIsQ0FBUDtBQUNIOzs7Ozs7OztBQUdMLFNBQVNKLHVCQUFULENBQWlDRCxNQUFqQyxFQUF5QztBQUNyQyxTQUFPLFFBQU9BLE1BQVAsTUFBa0IsUUFBbEIsSUFDQUEsTUFBTSxDQUFDSSxNQUFQLEtBQWtCVSxTQURsQixJQUVBZCxNQUFNLENBQUNNLFNBQVAsS0FBcUJRLFNBRnJCLElBR0FkLE1BQU0sQ0FBQ1EsWUFBUCxLQUF3Qk0sU0FIeEIsSUFJQWQsTUFBTSxDQUFDUyxZQUFQLEtBQXdCSyxTQUp4QixJQUtBZCxNQUFNLENBQUNVLFlBQVAsS0FBd0JJLFNBTHhCLElBTUFkLE1BQU0sQ0FBQ1csWUFBUCxLQUF3QkcsU0FOeEIsSUFPQWQsTUFBTSxDQUFDWSxXQUFQLEtBQXVCRSxTQVB2QixJQVFBZCxNQUFNLENBQUNhLFdBQVAsS0FBdUJDLFNBUjlCO0FBU0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ccm93c2VySW1hZ2VSZXNpemVyLy4vbm9kZV9tb2R1bGVzL2V4aWZyZWFkZXIvc3JjL2RhdGF2aWV3LmpzPzczNzMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGF0YVZpZXcge1xuICAgIGNvbnN0cnVjdG9yKGJ1ZmZlcikge1xuICAgICAgICBpZiAoYnVmZmVyVHlwZUlzVW5zdXBwb3J0ZWQoYnVmZmVyKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdEYXRhVmlldzogUGFzc2VkIGJ1ZmZlciB0eXBlIGlzIHVuc3VwcG9ydGVkLicpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5idWZmZXIgPSBidWZmZXI7XG4gICAgICAgIHRoaXMuYnl0ZUxlbmd0aCA9IHRoaXMuYnVmZmVyLmxlbmd0aDtcbiAgICB9XG5cbiAgICBnZXRVaW50OChvZmZzZXQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYnVmZmVyLnJlYWRVSW50OChvZmZzZXQpO1xuICAgIH1cblxuICAgIGdldFVpbnQxNihvZmZzZXQsIGxpdHRsZUVuZGlhbikge1xuICAgICAgICBpZiAobGl0dGxlRW5kaWFuKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5idWZmZXIucmVhZFVJbnQxNkxFKG9mZnNldCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuYnVmZmVyLnJlYWRVSW50MTZCRShvZmZzZXQpO1xuICAgIH1cblxuICAgIGdldFVpbnQzMihvZmZzZXQsIGxpdHRsZUVuZGlhbikge1xuICAgICAgICBpZiAobGl0dGxlRW5kaWFuKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5idWZmZXIucmVhZFVJbnQzMkxFKG9mZnNldCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuYnVmZmVyLnJlYWRVSW50MzJCRShvZmZzZXQpO1xuICAgIH1cblxuICAgIGdldEludDMyKG9mZnNldCwgbGl0dGxlRW5kaWFuKSB7XG4gICAgICAgIGlmIChsaXR0bGVFbmRpYW4pIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmJ1ZmZlci5yZWFkSW50MzJMRShvZmZzZXQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmJ1ZmZlci5yZWFkSW50MzJCRShvZmZzZXQpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gYnVmZmVyVHlwZUlzVW5zdXBwb3J0ZWQoYnVmZmVyKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBidWZmZXIgIT09ICdvYmplY3QnXG4gICAgICAgIHx8IGJ1ZmZlci5sZW5ndGggPT09IHVuZGVmaW5lZFxuICAgICAgICB8fCBidWZmZXIucmVhZFVJbnQ4ID09PSB1bmRlZmluZWRcbiAgICAgICAgfHwgYnVmZmVyLnJlYWRVSW50MTZMRSA9PT0gdW5kZWZpbmVkXG4gICAgICAgIHx8IGJ1ZmZlci5yZWFkVUludDE2QkUgPT09IHVuZGVmaW5lZFxuICAgICAgICB8fCBidWZmZXIucmVhZFVJbnQzMkxFID09PSB1bmRlZmluZWRcbiAgICAgICAgfHwgYnVmZmVyLnJlYWRVSW50MzJCRSA9PT0gdW5kZWZpbmVkXG4gICAgICAgIHx8IGJ1ZmZlci5yZWFkSW50MzJMRSA9PT0gdW5kZWZpbmVkXG4gICAgICAgIHx8IGJ1ZmZlci5yZWFkSW50MzJCRSA9PT0gdW5kZWZpbmVkO1xufVxuIl0sIm5hbWVzIjpbIkRhdGFWaWV3IiwiYnVmZmVyIiwiYnVmZmVyVHlwZUlzVW5zdXBwb3J0ZWQiLCJFcnJvciIsImJ5dGVMZW5ndGgiLCJsZW5ndGgiLCJvZmZzZXQiLCJyZWFkVUludDgiLCJsaXR0bGVFbmRpYW4iLCJyZWFkVUludDE2TEUiLCJyZWFkVUludDE2QkUiLCJyZWFkVUludDMyTEUiLCJyZWFkVUludDMyQkUiLCJyZWFkSW50MzJMRSIsInJlYWRJbnQzMkJFIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/dataview.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/dom-parser.js":
/*!***************************************************!*\
  !*** ./node_modules/exifreader/src/dom-parser.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  get: get\n});\n\nfunction get() {\n  if (typeof DOMParser !== 'undefined') {\n    return DOMParser;\n  }\n\n  try {\n    return require('@xmldom/xmldom').DOMParser; // eslint-disable-line no-undef\n  } catch (error) {\n    return undefined;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvZG9tLXBhcnNlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7OztBQUlBLGlFQUFlO0FBQ1hBLEVBQUFBLEdBQUcsRUFBSEE7QUFEVyxDQUFmOztBQUlBLFNBQVNBLEdBQVQsR0FBZTtBQUNYLE1BQUksT0FBT0MsU0FBUCxLQUFxQixXQUF6QixFQUFzQztBQUNsQyxXQUFPQSxTQUFQO0FBQ0g7O0FBQ0QsTUFBSTtBQUNBLFdBQU9DLE9BQXVCLENBQUMsZ0JBQUQsQ0FBdkIsQ0FBMENELFNBQWpELENBREEsQ0FDNEQ7QUFDL0QsR0FGRCxDQUVFLE9BQU9FLEtBQVAsRUFBYztBQUNaLFdBQU9DLFNBQVA7QUFDSDtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQnJvd3NlckltYWdlUmVzaXplci8uL25vZGVfbW9kdWxlcy9leGlmcmVhZGVyL3NyYy9kb20tcGFyc2VyLmpzPzZmMzciXSwic291cmNlc0NvbnRlbnQiOlsiLyogVGhpcyBTb3VyY2UgQ29kZSBGb3JtIGlzIHN1YmplY3QgdG8gdGhlIHRlcm1zIG9mIHRoZSBNb3ppbGxhIFB1YmxpY1xuICogTGljZW5zZSwgdi4gMi4wLiBJZiBhIGNvcHkgb2YgdGhlIE1QTCB3YXMgbm90IGRpc3RyaWJ1dGVkIHdpdGggdGhpc1xuICogZmlsZSwgWW91IGNhbiBvYnRhaW4gb25lIGF0IGh0dHBzOi8vbW96aWxsYS5vcmcvTVBMLzIuMC8uICovXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBnZXRcbn07XG5cbmZ1bmN0aW9uIGdldCgpIHtcbiAgICBpZiAodHlwZW9mIERPTVBhcnNlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIERPTVBhcnNlcjtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIF9fbm9uX3dlYnBhY2tfcmVxdWlyZV9fKCdAeG1sZG9tL3htbGRvbScpLkRPTVBhcnNlcjsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbImdldCIsIkRPTVBhcnNlciIsIl9fbm9uX3dlYnBhY2tfcmVxdWlyZV9fIiwiZXJyb3IiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/dom-parser.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/errors.js":
/*!***********************************************!*\
  !*** ./node_modules/exifreader/src/errors.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/**\n * Thrown when no Exif metadata was found for the given image.\n *\n * @param {string} message The error message.\n */\nfunction MetadataMissingError(message) {\n  this.name = 'MetadataMissingError';\n  this.message = message || 'No Exif data';\n  this.stack = new Error().stack;\n}\n\nMetadataMissingError.prototype = new Error();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  MetadataMissingError: MetadataMissingError\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvZXJyb3JzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7OztBQUlBOzs7OztBQUtBLFNBQVNBLG9CQUFULENBQThCQyxPQUE5QixFQUF1QztBQUNuQyxPQUFLQyxJQUFMLEdBQVksc0JBQVo7QUFDQSxPQUFLRCxPQUFMLEdBQWVBLE9BQU8sSUFBSSxjQUExQjtBQUNBLE9BQUtFLEtBQUwsR0FBYyxJQUFJQyxLQUFKLEVBQUQsQ0FBY0QsS0FBM0I7QUFDSDs7QUFFREgsb0JBQW9CLENBQUNLLFNBQXJCLEdBQWlDLElBQUlELEtBQUosRUFBakM7QUFFQSxpRUFBZTtBQUNYSixFQUFBQSxvQkFBb0IsRUFBcEJBO0FBRFcsQ0FBZiIsInNvdXJjZXMiOlsid2VicGFjazovL0Jyb3dzZXJJbWFnZVJlc2l6ZXIvLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvZXJyb3JzLmpzPzg5MzUiXSwic291cmNlc0NvbnRlbnQiOlsiLyogVGhpcyBTb3VyY2UgQ29kZSBGb3JtIGlzIHN1YmplY3QgdG8gdGhlIHRlcm1zIG9mIHRoZSBNb3ppbGxhIFB1YmxpY1xuICogTGljZW5zZSwgdi4gMi4wLiBJZiBhIGNvcHkgb2YgdGhlIE1QTCB3YXMgbm90IGRpc3RyaWJ1dGVkIHdpdGggdGhpc1xuICogZmlsZSwgWW91IGNhbiBvYnRhaW4gb25lIGF0IGh0dHBzOi8vbW96aWxsYS5vcmcvTVBMLzIuMC8uICovXG5cbi8qKlxuICogVGhyb3duIHdoZW4gbm8gRXhpZiBtZXRhZGF0YSB3YXMgZm91bmQgZm9yIHRoZSBnaXZlbiBpbWFnZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSBUaGUgZXJyb3IgbWVzc2FnZS5cbiAqL1xuZnVuY3Rpb24gTWV0YWRhdGFNaXNzaW5nRXJyb3IobWVzc2FnZSkge1xuICAgIHRoaXMubmFtZSA9ICdNZXRhZGF0YU1pc3NpbmdFcnJvcic7XG4gICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZSB8fCAnTm8gRXhpZiBkYXRhJztcbiAgICB0aGlzLnN0YWNrID0gKG5ldyBFcnJvcigpKS5zdGFjaztcbn1cblxuTWV0YWRhdGFNaXNzaW5nRXJyb3IucHJvdG90eXBlID0gbmV3IEVycm9yO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgTWV0YWRhdGFNaXNzaW5nRXJyb3IsXG59O1xuIl0sIm5hbWVzIjpbIk1ldGFkYXRhTWlzc2luZ0Vycm9yIiwibWVzc2FnZSIsIm5hbWUiLCJzdGFjayIsIkVycm9yIiwicHJvdG90eXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/errors.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/exif-reader.js":
/*!****************************************************!*\
  !*** ./node_modules/exifreader/src/exif-reader.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"errors\": () => (/* binding */ errors),\n/* harmony export */   \"load\": () => (/* binding */ load),\n/* harmony export */   \"loadView\": () => (/* binding */ loadView)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/exifreader/src/utils.js\");\n/* harmony import */ var _dataview_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dataview.js */ \"./node_modules/exifreader/src/dataview.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/exifreader/src/constants.js\");\n/* harmony import */ var _tag_names_utils_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./tag-names-utils.js */ \"./node_modules/exifreader/src/tag-names-utils.js\");\n/* harmony import */ var _image_header_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./image-header.js */ \"./node_modules/exifreader/src/image-header.js\");\n/* harmony import */ var _tags_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tags.js */ \"./node_modules/exifreader/src/tags.js\");\n/* harmony import */ var _file_tags_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./file-tags.js */ \"./node_modules/exifreader/src/file-tags.js\");\n/* harmony import */ var _jfif_tags_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./jfif-tags.js */ \"./node_modules/exifreader/src/jfif-tags.js\");\n/* harmony import */ var _iptc_tags_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./iptc-tags.js */ \"./node_modules/exifreader/src/iptc-tags.js\");\n/* harmony import */ var _xmp_tags_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./xmp-tags.js */ \"./node_modules/exifreader/src/xmp-tags.js\");\n/* harmony import */ var _icc_tags_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./icc-tags.js */ \"./node_modules/exifreader/src/icc-tags.js\");\n/* harmony import */ var _png_file_tags_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./png-file-tags.js */ \"./node_modules/exifreader/src/png-file-tags.js\");\n/* harmony import */ var _thumbnail_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./thumbnail.js */ \"./node_modules/exifreader/src/thumbnail.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/exifreader/src/errors.js\");\n/**\n * ExifReader\n * http://github.com/mattiasw/exifreader\n * Copyright (C) 2011-2021  Mattias Wallander <mattias@wallander.eu>\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\n/* global Buffer, __non_webpack_require__ */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  load: load,\n  loadView: loadView,\n  errors: _errors_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n});\nvar errors = _errors_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\nfunction load(data, options) {\n  if (isFilePathOrURL(data)) {\n    return loadFile(data).then(function (fileContents) {\n      return loadFromData(fileContents, options);\n    });\n  }\n\n  if (isBrowserFileObject(data)) {\n    return loadFileObject(data).then(function (fileContents) {\n      return loadFromData(fileContents, options);\n    });\n  }\n\n  return loadFromData(data, options);\n}\n\nfunction isFilePathOrURL(data) {\n  return typeof data === 'string';\n}\n\nfunction loadFile(filename) {\n  if (typeof fetch !== 'undefined') {\n    return browserFetchRemoteFile(filename);\n  }\n\n  if (/^https?:\\/\\//.test(filename)) {\n    return nodeFetchRemoteFile(filename);\n  }\n\n  return loadLocalFile(filename);\n}\n\nfunction browserFetchRemoteFile(url) {\n  return fetch(url).then(function (response) {\n    return response.arrayBuffer();\n  });\n}\n\nfunction nodeFetchRemoteFile(url) {\n  return new Promise(function (resolve, reject) {\n    var get = requireNodeGet(url);\n    get(url, function (response) {\n      if (response.statusCode >= 200 && response.statusCode <= 299) {\n        var data = [];\n        response.on('data', function (chunk) {\n          return data.push(Buffer.from(chunk));\n        });\n        response.on('error', function (error) {\n          return reject(error);\n        });\n        response.on('end', function () {\n          return resolve(Buffer.concat(data));\n        });\n      } else {\n        reject(\"Could not fetch file: \".concat(response.statusCode, \" \").concat(response.statusMessage));\n        response.resume();\n      }\n    }).on('error', function (error) {\n      return reject(error);\n    });\n  });\n}\n\nfunction requireNodeGet(url) {\n  if (/^https:\\/\\//.test(url)) {\n    return require('https').get;\n  }\n\n  return require('http').get;\n}\n\nfunction loadLocalFile(filename) {\n  return new Promise(function (resolve, reject) {\n    var fs = requireNodeFs();\n    fs.open(filename, function (error, fd) {\n      if (error) {\n        reject(error);\n      } else {\n        fs.stat(filename, function (error, stat) {\n          if (error) {\n            reject(error);\n          } else {\n            var buffer = Buffer.alloc(stat.size);\n            fs.read(fd, {\n              buffer: buffer\n            }, function (error) {\n              if (error) {\n                reject(error);\n              } else {\n                fs.close(fd, function (error) {\n                  if (error) {\n                    console.warn(\"Could not close file \".concat(filename, \":\"), error); // eslint-disable-line no-console\n                  }\n\n                  resolve(buffer);\n                });\n              }\n            });\n          }\n        });\n      }\n    });\n  });\n}\n\nfunction requireNodeFs() {\n  try {\n    return require('fs');\n  } catch (error) {\n    return undefined;\n  }\n}\n\nfunction isBrowserFileObject(data) {\n  return typeof window !== 'undefined' && typeof File !== 'undefined' && data instanceof File;\n}\n\nfunction loadFileObject(file) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n\n    reader.onload = function (readerEvent) {\n      return resolve(readerEvent.target.result);\n    };\n\n    reader.onerror = function () {\n      return reject(reader.error);\n    };\n\n    reader.readAsArrayBuffer(file);\n  });\n}\n\nfunction loadFromData(data, options) {\n  if (isNodeBuffer(data)) {\n    // File data read in Node can share the underlying buffer with other\n    // data. Therefore it's safest to get a new one to avoid weird bugs.\n    data = new Uint8Array(data).buffer;\n  }\n\n  return loadView(getDataView(data), options);\n}\n\nfunction isNodeBuffer(data) {\n  try {\n    return Buffer.isBuffer(data);\n  } catch (error) {\n    return false;\n  }\n}\n\nfunction getDataView(data) {\n  try {\n    return new DataView(data);\n  } catch (error) {\n    return new _dataview_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](data);\n  }\n}\n\nfunction loadView(dataView) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    expanded: false,\n    includeUnknown: false\n  },\n      _ref$expanded = _ref.expanded,\n      expanded = _ref$expanded === void 0 ? false : _ref$expanded,\n      _ref$includeUnknown = _ref.includeUnknown,\n      includeUnknown = _ref$includeUnknown === void 0 ? false : _ref$includeUnknown;\n\n  var foundMetaData = false;\n  var tags = {};\n\n  var _ImageHeader$parseApp = _image_header_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].parseAppMarkers(dataView),\n      fileDataOffset = _ImageHeader$parseApp.fileDataOffset,\n      jfifDataOffset = _ImageHeader$parseApp.jfifDataOffset,\n      tiffHeaderOffset = _ImageHeader$parseApp.tiffHeaderOffset,\n      iptcDataOffset = _ImageHeader$parseApp.iptcDataOffset,\n      xmpChunks = _ImageHeader$parseApp.xmpChunks,\n      iccChunks = _ImageHeader$parseApp.iccChunks,\n      mpfDataOffset = _ImageHeader$parseApp.mpfDataOffset,\n      pngHeaderOffset = _ImageHeader$parseApp.pngHeaderOffset;\n\n  if (_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_JPEG && _constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_FILE && hasFileData(fileDataOffset)) {\n    foundMetaData = true;\n    var readTags = _file_tags_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].read(dataView, fileDataOffset);\n\n    if (expanded) {\n      tags.file = readTags;\n    } else {\n      tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.objectAssign)({}, tags, readTags);\n    }\n  }\n\n  if (_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_JPEG && _constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_JFIF && hasJfifData(jfifDataOffset)) {\n    foundMetaData = true;\n\n    var _readTags = _jfif_tags_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].read(dataView, jfifDataOffset);\n\n    if (expanded) {\n      tags.jfif = _readTags;\n    } else {\n      tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.objectAssign)({}, tags, _readTags);\n    }\n  }\n\n  if (_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_EXIF && hasExifData(tiffHeaderOffset)) {\n    foundMetaData = true;\n\n    var _readTags2 = _tags_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].read(dataView, tiffHeaderOffset, includeUnknown);\n\n    if (_readTags2.Thumbnail) {\n      tags.Thumbnail = _readTags2.Thumbnail;\n      delete _readTags2.Thumbnail;\n    }\n\n    if (expanded) {\n      tags.exif = _readTags2;\n      addGpsGroup(tags);\n    } else {\n      tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.objectAssign)({}, tags, _readTags2);\n    }\n\n    if (_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_TIFF && _constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_IPTC && _readTags2['IPTC-NAA'] && !hasIptcData(iptcDataOffset)) {\n      var readIptcTags = _iptc_tags_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].read(_readTags2['IPTC-NAA'].value, 0, includeUnknown);\n\n      if (expanded) {\n        tags.iptc = readIptcTags;\n      } else {\n        tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.objectAssign)({}, tags, readIptcTags);\n      }\n    }\n\n    if (_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_TIFF && _constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_XMP && _readTags2['ApplicationNotes'] && !hasXmpData(xmpChunks)) {\n      var readXmpTags = _xmp_tags_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].read((0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.getStringValueFromArray)(_readTags2['ApplicationNotes'].value));\n\n      if (expanded) {\n        tags.xmp = readXmpTags;\n      } else {\n        delete readXmpTags._raw;\n        tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.objectAssign)({}, tags, readXmpTags);\n      }\n    }\n\n    if (_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_TIFF && _constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_ICC && _readTags2['ICC_Profile'] && !hasIccData(iccChunks)) {\n      var readIccTags = _icc_tags_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"].read(_readTags2['ICC_Profile'].value, [{\n        offset: 0,\n        length: _readTags2['ICC_Profile'].value.length,\n        chunkNumber: 1,\n        chunksTotal: 1\n      }]);\n\n      if (expanded) {\n        tags.icc = readIccTags;\n      } else {\n        tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.objectAssign)({}, tags, readIccTags);\n      }\n    }\n  }\n\n  if (_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_JPEG && _constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_IPTC && hasIptcData(iptcDataOffset)) {\n    foundMetaData = true;\n\n    var _readTags3 = _iptc_tags_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].read(dataView, iptcDataOffset, includeUnknown);\n\n    if (expanded) {\n      tags.iptc = _readTags3;\n    } else {\n      tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.objectAssign)({}, tags, _readTags3);\n    }\n  }\n\n  if (_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_XMP && hasXmpData(xmpChunks)) {\n    foundMetaData = true;\n\n    var _readTags4 = _xmp_tags_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].read(dataView, xmpChunks);\n\n    if (expanded) {\n      tags.xmp = _readTags4;\n    } else {\n      delete _readTags4._raw;\n      tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.objectAssign)({}, tags, _readTags4);\n    }\n  }\n\n  if ((_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_JPEG || _constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_WEBP) && _constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_ICC && hasIccData(iccChunks)) {\n    foundMetaData = true;\n\n    var _readTags5 = _icc_tags_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"].read(dataView, iccChunks);\n\n    if (expanded) {\n      tags.icc = _readTags5;\n    } else {\n      tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.objectAssign)({}, tags, _readTags5);\n    }\n  }\n\n  if (_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_MPF && hasMpfData(mpfDataOffset)) {\n    foundMetaData = true;\n    var readMpfTags = _tags_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].readMpf(dataView, mpfDataOffset, includeUnknown);\n\n    if (expanded) {\n      tags.mpf = readMpfTags;\n    } else {\n      tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.objectAssign)({}, tags, readMpfTags);\n    }\n  }\n\n  if (_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_PNG && _constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_PNG_FILE && hasPngFileData(pngHeaderOffset)) {\n    foundMetaData = true;\n\n    var _readTags6 = _png_file_tags_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"].read(dataView, pngHeaderOffset);\n\n    if (expanded) {\n      tags.pngFile = _readTags6;\n    } else {\n      tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.objectAssign)({}, tags, _readTags6);\n    }\n  }\n\n  var thumbnail = (_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_JPEG || _constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_WEBP) && _constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_EXIF && _constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_THUMBNAIL && _thumbnail_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"].get(dataView, tags.Thumbnail, tiffHeaderOffset);\n\n  if (thumbnail) {\n    foundMetaData = true;\n    tags.Thumbnail = thumbnail;\n  } else {\n    delete tags.Thumbnail;\n  }\n\n  if (!foundMetaData) {\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].MetadataMissingError();\n  }\n\n  return tags;\n}\n\nfunction hasFileData(fileDataOffset) {\n  return fileDataOffset !== undefined;\n}\n\nfunction hasJfifData(jfifDataOffset) {\n  return jfifDataOffset !== undefined;\n}\n\nfunction hasExifData(tiffHeaderOffset) {\n  return tiffHeaderOffset !== undefined;\n}\n\nfunction addGpsGroup(tags) {\n  if (tags.exif) {\n    if (tags.exif.GPSLatitude && tags.exif.GPSLatitudeRef) {\n      try {\n        tags.gps = tags.gps || {};\n        tags.gps.Latitude = (0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_13__.getCalculatedGpsValue)(tags.exif.GPSLatitude.value);\n\n        if (tags.exif.GPSLatitudeRef.value.join('') === 'S') {\n          tags.gps.Latitude = -tags.gps.Latitude;\n        }\n      } catch (error) {// Ignore.\n      }\n    }\n\n    if (tags.exif.GPSLongitude && tags.exif.GPSLongitudeRef) {\n      try {\n        tags.gps = tags.gps || {};\n        tags.gps.Longitude = (0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_13__.getCalculatedGpsValue)(tags.exif.GPSLongitude.value);\n\n        if (tags.exif.GPSLongitudeRef.value.join('') === 'W') {\n          tags.gps.Longitude = -tags.gps.Longitude;\n        }\n      } catch (error) {// Ignore.\n      }\n    }\n\n    if (tags.exif.GPSAltitude && tags.exif.GPSAltitudeRef) {\n      try {\n        tags.gps = tags.gps || {};\n        tags.gps.Altitude = tags.exif.GPSAltitude.value[0] / tags.exif.GPSAltitude.value[1];\n\n        if (tags.exif.GPSAltitudeRef.value === 1) {\n          tags.gps.Altitude = -tags.gps.Altitude;\n        }\n      } catch (error) {// Ignore.\n      }\n    }\n  }\n}\n\nfunction hasIptcData(iptcDataOffset) {\n  return iptcDataOffset !== undefined;\n}\n\nfunction hasXmpData(xmpChunks) {\n  return Array.isArray(xmpChunks) && xmpChunks.length > 0;\n}\n\nfunction hasIccData(iccDataOffsets) {\n  return Array.isArray(iccDataOffsets) && iccDataOffsets.length > 0;\n}\n\nfunction hasMpfData(mpfDataOffset) {\n  return mpfDataOffset !== undefined;\n}\n\nfunction hasPngFileData(pngFileDataOffset) {\n  return pngFileDataOffset !== undefined;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/exif-reader.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/file-tags.js":
/*!**************************************************!*\
  !*** ./node_modules/exifreader/src/file-tags.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"./node_modules/exifreader/src/types.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  read: read\n});\n\nfunction read(dataView, fileDataOffset) {\n  var length = getLength(dataView, fileDataOffset);\n  var numberOfColorComponents = getNumberOfColorComponents(dataView, fileDataOffset, length);\n  return {\n    'Bits Per Sample': getDataPrecision(dataView, fileDataOffset, length),\n    'Image Height': getImageHeight(dataView, fileDataOffset, length),\n    'Image Width': getImageWidth(dataView, fileDataOffset, length),\n    'Color Components': numberOfColorComponents,\n    'Subsampling': numberOfColorComponents && getSubsampling(dataView, fileDataOffset, numberOfColorComponents.value, length)\n  };\n}\n\nfunction getLength(dataView, fileDataOffset) {\n  return _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getShortAt(dataView, fileDataOffset);\n}\n\nfunction getDataPrecision(dataView, fileDataOffset, length) {\n  var OFFSET = 2;\n  var SIZE = 1;\n\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n\n  var value = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByteAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value: value,\n    description: '' + value\n  };\n}\n\nfunction getImageHeight(dataView, fileDataOffset, length) {\n  var OFFSET = 3;\n  var SIZE = 2;\n\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n\n  var value = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getShortAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value: value,\n    description: \"\".concat(value, \"px\")\n  };\n}\n\nfunction getImageWidth(dataView, fileDataOffset, length) {\n  var OFFSET = 5;\n  var SIZE = 2;\n\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n\n  var value = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getShortAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value: value,\n    description: \"\".concat(value, \"px\")\n  };\n}\n\nfunction getNumberOfColorComponents(dataView, fileDataOffset, length) {\n  var OFFSET = 7;\n  var SIZE = 1;\n\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n\n  var value = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByteAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value: value,\n    description: '' + value\n  };\n}\n\nfunction getSubsampling(dataView, fileDataOffset, numberOfColorComponents, length) {\n  var OFFSET = 8;\n  var SIZE = 3 * numberOfColorComponents;\n\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n\n  var components = [];\n\n  for (var i = 0; i < numberOfColorComponents; i++) {\n    var componentOffset = fileDataOffset + OFFSET + i * 3;\n    components.push([_types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByteAt(dataView, componentOffset), _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByteAt(dataView, componentOffset + 1), _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByteAt(dataView, componentOffset + 2)]);\n  }\n\n  return {\n    value: components,\n    description: components.length > 1 ? getComponentIds(components) + getSamplingType(components) : ''\n  };\n}\n\nfunction getComponentIds(components) {\n  var ids = {\n    0x01: 'Y',\n    0x02: 'Cb',\n    0x03: 'Cr',\n    0x04: 'I',\n    0x05: 'Q'\n  };\n  return components.map(function (compontent) {\n    return ids[compontent[0]];\n  }).join('');\n}\n\nfunction getSamplingType(components) {\n  var types = {\n    0x11: '4:4:4 (1 1)',\n    0x12: '4:4:0 (1 2)',\n    0x14: '4:4:1 (1 4)',\n    0x21: '4:2:2 (2 1)',\n    0x22: '4:2:0 (2 2)',\n    0x24: '4:2:1 (2 4)',\n    0x41: '4:1:1 (4 1)',\n    0x42: '4:1:0 (4 2)'\n  };\n\n  if (components.length === 0 || components[0][1] === undefined || types[components[0][1]] === undefined) {\n    return '';\n  }\n\n  return types[components[0][1]];\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/file-tags.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/icc-tag-names.js":
/*!******************************************************!*\
  !*** ./node_modules/exifreader/src/icc-tag-names.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"iccProfile\": () => (/* binding */ iccProfile),\n/* harmony export */   \"iccTags\": () => (/* binding */ iccTags)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/exifreader/src/utils.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nvar iccTags = {\n  'desc': {\n    'name': 'ICC Description'\n  },\n  'cprt': {\n    'name': 'ICC Copyright'\n  },\n  'dmdd': {\n    'name': 'ICC Device Model Description'\n  },\n  'vued': {\n    'name': 'ICC Viewing Conditions Description'\n  },\n  'dmnd': {\n    'name': 'ICC Device Manufacturer for Display'\n  },\n  'tech': {\n    'name': 'Technology'\n  }\n};\nvar iccProfile = {\n  4: {\n    'name': 'Preferred CMM type',\n    'value': function value(dataView, offset) {\n      return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, offset, 4);\n    },\n    'description': function description(value) {\n      return value !== null ? toCompany(value) : '';\n    }\n  },\n  8: {\n    'name': 'Profile Version',\n    'value': function value(dataView, offset) {\n      return dataView.getUint8(offset).toString(10) + '.' + (dataView.getUint8(offset + 1) >> 4).toString(10) + '.' + (dataView.getUint8(offset + 1) % 16).toString(10);\n    }\n  },\n  12: {\n    'name': 'Profile/Device class',\n    'value': function value(dataView, offset) {\n      return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, offset, 4);\n    },\n    'description': function description(value) {\n      switch (value.toLowerCase()) {\n        case 'scnr':\n          return 'Input Device profile';\n\n        case 'mntr':\n          return 'Display Device profile';\n\n        case 'prtr':\n          return 'Output Device profile';\n\n        case 'link':\n          return 'DeviceLink profile';\n\n        case 'abst':\n          return 'Abstract profile';\n\n        case 'spac':\n          return 'ColorSpace profile';\n\n        case 'nmcl':\n          return 'NamedColor profile';\n\n        case 'cenc':\n          return 'ColorEncodingSpace profile';\n\n        case 'mid ':\n          return 'MultiplexIdentification profile';\n\n        case 'mlnk':\n          return 'MultiplexLink profile';\n\n        case 'mvis':\n          return 'MultiplexVisualization profile';\n\n        default:\n          return value;\n      }\n    }\n  },\n  16: {\n    'name': 'Color Space',\n    'value': function value(dataView, offset) {\n      return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, offset, 4);\n    }\n  },\n  20: {\n    'name': 'Connection Space',\n    'value': function value(dataView, offset) {\n      return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, offset, 4);\n    }\n  },\n  24: {\n    'name': 'ICC Profile Date',\n    'value': function value(dataView, offset) {\n      return parseDate(dataView, offset).toISOString();\n    }\n  },\n  36: {\n    'name': 'ICC Signature',\n    'value': function value(dataView, offset) {\n      return sliceToString(dataView.buffer.slice(offset, offset + 4));\n    }\n  },\n  40: {\n    'name': 'Primary Platform',\n    'value': function value(dataView, offset) {\n      return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, offset, 4);\n    },\n    'description': function description(value) {\n      return toCompany(value);\n    }\n  },\n  48: {\n    'name': 'Device Manufacturer',\n    'value': function value(dataView, offset) {\n      return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, offset, 4);\n    },\n    'description': function description(value) {\n      return toCompany(value);\n    }\n  },\n  52: {\n    'name': 'Device Model Number',\n    'value': function value(dataView, offset) {\n      return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, offset, 4);\n    }\n  },\n  64: {\n    'name': 'Rendering Intent',\n    'value': function value(dataView, offset) {\n      return dataView.getUint32(offset);\n    },\n    'description': function description(value) {\n      switch (value) {\n        case 0:\n          return 'Perceptual';\n\n        case 1:\n          return 'Relative Colorimetric';\n\n        case 2:\n          return 'Saturation';\n\n        case 3:\n          return 'Absolute Colorimetric';\n\n        default:\n          return value;\n      }\n    }\n  },\n  80: {\n    'name': 'Profile Creator',\n    'value': function value(dataView, offset) {\n      return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, offset, 4);\n    }\n  }\n};\n\nfunction parseDate(dataView, offset) {\n  var year = dataView.getUint16(offset);\n  var month = dataView.getUint16(offset + 2) - 1;\n  var day = dataView.getUint16(offset + 4);\n  var hours = dataView.getUint16(offset + 6);\n  var minutes = dataView.getUint16(offset + 8);\n  var seconds = dataView.getUint16(offset + 10);\n  return new Date(Date.UTC(year, month, day, hours, minutes, seconds));\n}\n\nfunction sliceToString(slice) {\n  return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction toCompany(value) {\n  switch (value.toLowerCase()) {\n    case 'appl':\n      return 'Apple';\n\n    case 'adbe':\n      return 'Adobe';\n\n    case 'msft':\n      return 'Microsoft';\n\n    case 'sunw':\n      return 'Sun Microsystems';\n\n    case 'sgi':\n      return 'Silicon Graphics';\n\n    case 'tgnt':\n      return 'Taligent';\n\n    default:\n      return value;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/icc-tag-names.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/icc-tags.js":
/*!*************************************************!*\
  !*** ./node_modules/exifreader/src/icc-tags.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"parseTags\": () => (/* binding */ parseTags)\n/* harmony export */ });\n/* harmony import */ var _icc_tag_names_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icc-tag-names.js */ \"./node_modules/exifreader/src/icc-tag-names.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/exifreader/src/utils.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  read: read\n});\nvar PROFILE_HEADER_LENGTH = 84;\nvar ICC_TAG_COUNT_OFFSET = 128;\nvar ICC_SIGNATURE = 'acsp';\nvar TAG_TYPE_DESC = 'desc';\nvar TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE = 'mluc';\nvar TAG_TYPE_TEXT = 'text';\nvar TAG_TYPE_SIGNATURE = 'sig ';\nvar TAG_TABLE_SINGLE_TAG_DATA = 12; // ICC profile data can be longer than application segment max length of ~64k.\n// so it can be split into multiple APP2 segments. Each segment includes\n// total chunk count and chunk number.\n// Here we read all chunks into single continious array of bytes.\n\nfunction read(dataView, iccData) {\n  try {\n    var totalIccProfileLength = iccData.reduce(function (sum, icc) {\n      return sum + icc.length;\n    }, 0);\n    var iccBinaryData = new Uint8Array(totalIccProfileLength);\n    var offset = 0;\n    var buffer = getBuffer(dataView);\n\n    var _loop = function _loop(chunkNumber) {\n      var iccDataChunk = iccData.find(function (x) {\n        return x.chunkNumber === chunkNumber;\n      });\n\n      if (!iccDataChunk) {\n        throw new Error(\"ICC chunk \".concat(chunkNumber, \" not found\"));\n      }\n\n      var data = buffer.slice(iccDataChunk.offset, iccDataChunk.offset + iccDataChunk.length);\n      var chunkData = new Uint8Array(data);\n      iccBinaryData.set(chunkData, offset);\n      offset += chunkData.length;\n    };\n\n    for (var chunkNumber = 1; chunkNumber <= iccData.length; chunkNumber++) {\n      _loop(chunkNumber);\n    }\n\n    return parseTags(new DataView(iccBinaryData.buffer));\n  } catch (error) {\n    return {};\n  }\n}\n\nfunction getBuffer(dataView) {\n  if (Array.isArray(dataView)) {\n    return new DataView(Uint8Array.from(dataView).buffer).buffer;\n  }\n\n  return dataView.buffer;\n}\n\nfunction iccDoesNotHaveTagCount(buffer) {\n  return buffer.length < ICC_TAG_COUNT_OFFSET + 4;\n}\n\nfunction hasTagsData(buffer, tagHeaderOffset) {\n  return buffer.length < tagHeaderOffset + TAG_TABLE_SINGLE_TAG_DATA;\n}\n\nfunction parseTags(dataView) {\n  var buffer = dataView.buffer;\n  var length = dataView.getUint32();\n\n  if (dataView.byteLength !== length) {\n    throw new Error('ICC profile length not matching');\n  }\n\n  if (dataView.length < PROFILE_HEADER_LENGTH) {\n    throw new Error('ICC profile too short');\n  }\n\n  var tags = {};\n  var iccProfileKeys = Object.keys(_icc_tag_names_js__WEBPACK_IMPORTED_MODULE_0__.iccProfile);\n\n  for (var i = 0; i < iccProfileKeys.length; i++) {\n    var offset = iccProfileKeys[i];\n    var profileEntry = _icc_tag_names_js__WEBPACK_IMPORTED_MODULE_0__.iccProfile[offset];\n    var value = profileEntry.value(dataView, parseInt(offset, 10));\n    var description = value;\n\n    if (profileEntry.description) {\n      description = profileEntry.description(value);\n    }\n\n    tags[profileEntry.name] = {\n      value: value,\n      description: description\n    };\n  }\n\n  var signature = sliceToString(buffer.slice(36, 40));\n\n  if (signature !== ICC_SIGNATURE) {\n    throw new Error('ICC profile: missing signature');\n  }\n  /* ICC data is incomplete but we have header parsed so lets return it */\n\n\n  if (iccDoesNotHaveTagCount(buffer)) {\n    return tags;\n  }\n\n  var tagCount = dataView.getUint32(128);\n  var tagHeaderOffset = 132;\n\n  for (var _i = 0; _i < tagCount; _i++) {\n    if (hasTagsData(buffer, tagHeaderOffset)) {\n      // Tags are corrupted (offset too far), return what we parsed until now\n      return tags;\n    }\n\n    var tagSignature = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getStringFromDataView)(dataView, tagHeaderOffset, 4);\n    var tagOffset = dataView.getUint32(tagHeaderOffset + 4);\n    var tagSize = dataView.getUint32(tagHeaderOffset + 8);\n\n    if (tagOffset > buffer.length) {\n      // Tag data is invalid, lets return what we managed to parse\n      return tags;\n    }\n\n    var tagType = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getStringFromDataView)(dataView, tagOffset, 4);\n\n    if (tagType === TAG_TYPE_DESC) {\n      var tagValueSize = dataView.getUint32(tagOffset + 8);\n\n      if (tagValueSize > tagSize) {\n        // Tag data is invalid, lets return what we managed to parse\n        return tags;\n      }\n\n      var val = sliceToString(buffer.slice(tagOffset + 12, tagOffset + tagValueSize + 11));\n      addTag(tags, tagSignature, val);\n    } else if (tagType === TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE) {\n      var numRecords = dataView.getUint32(tagOffset + 8);\n      var recordSize = dataView.getUint32(tagOffset + 12);\n\n      var _offset = tagOffset + 16;\n\n      var _val = [];\n\n      for (var recordNum = 0; recordNum < numRecords; recordNum++) {\n        var languageCode = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getStringFromDataView)(dataView, _offset + 0, 2);\n        var countryCode = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getStringFromDataView)(dataView, _offset + 2, 2);\n        var textLength = dataView.getUint32(_offset + 4);\n        var textOffset = dataView.getUint32(_offset + 8);\n        var text = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getUnicodeStringFromDataView)(dataView, tagOffset + textOffset, textLength);\n\n        _val.push({\n          languageCode: languageCode,\n          countryCode: countryCode,\n          text: text\n        });\n\n        _offset += recordSize;\n      }\n\n      if (numRecords === 1) {\n        addTag(tags, tagSignature, _val[0].text);\n      } else {\n        var valObj = {};\n\n        for (var valIndex = 0; valIndex < _val.length; valIndex++) {\n          valObj[\"\".concat(_val[valIndex].languageCode, \"-\").concat(_val[valIndex].countryCode)] = _val[valIndex].text;\n        }\n\n        addTag(tags, tagSignature, valObj);\n      }\n    } else if (tagType === TAG_TYPE_TEXT) {\n      var _val2 = sliceToString(buffer.slice(tagOffset + 8, tagOffset + tagSize - 7));\n\n      addTag(tags, tagSignature, _val2);\n    } else if (tagType === TAG_TYPE_SIGNATURE) {\n      var _val3 = sliceToString(buffer.slice(tagOffset + 8, tagOffset + 12));\n\n      addTag(tags, tagSignature, _val3);\n    }\n\n    tagHeaderOffset = tagHeaderOffset + 12;\n  }\n\n  return tags;\n}\n\nfunction sliceToString(slice) {\n  return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction addTag(tags, tagSignature, value) {\n  if (_icc_tag_names_js__WEBPACK_IMPORTED_MODULE_0__.iccTags[tagSignature]) {\n    tags[_icc_tag_names_js__WEBPACK_IMPORTED_MODULE_0__.iccTags[tagSignature].name] = {\n      value: value,\n      description: value\n    };\n  } else {\n    tags[tagSignature] = {\n      value: value,\n      description: value\n    };\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/icc-tags.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/image-header-heic.js":
/*!**********************************************************!*\
  !*** ./node_modules/exifreader/src/image-header-heic.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/exifreader/src/utils.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/exifreader/src/constants.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  isHeicFile: isHeicFile,\n  findHeicOffsets: findHeicOffsets\n});\n\nfunction isHeicFile(dataView) {\n  if (!dataView) {\n    return false;\n  }\n\n  var HEIC_ID = 'ftyp';\n  var HEIC_ID_OFFSET = 4;\n  var HEIC_MAJOR_BRANDS = ['heic', 'heix', 'hevc', 'hevx', 'heim', 'heis', 'hevm', 'hevs', 'mif1'];\n  var HEIC_MAJOR_BRAND_LENGTH = 4;\n  var heicMajorBrand = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, HEIC_ID_OFFSET + HEIC_ID.length, HEIC_MAJOR_BRAND_LENGTH);\n  return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, HEIC_ID_OFFSET, HEIC_ID.length) === HEIC_ID && HEIC_MAJOR_BRANDS.indexOf(heicMajorBrand) !== -1;\n}\n\nfunction findHeicOffsets(dataView) {\n  if (_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].USE_EXIF || _constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].USE_ICC) {\n    var _findMetaAtom = findMetaAtom(dataView),\n        metaOffset = _findMetaAtom.offset,\n        metaLength = _findMetaAtom.length;\n\n    if (metaOffset === undefined) {\n      return {\n        hasAppMarkers: false\n      };\n    }\n\n    var metaEndOffset = Math.min(metaOffset + metaLength, dataView.byteLength);\n\n    var _findMetaItems = findMetaItems(dataView, metaOffset, metaEndOffset),\n        exifItemOffset = _findMetaItems.exifItemOffset,\n        ilocOffset = _findMetaItems.ilocOffset,\n        colrOffset = _findMetaItems.colrOffset;\n\n    var exifOffset = findExifOffset(dataView, exifItemOffset, ilocOffset, metaEndOffset);\n    var iccChunks = findIccChunks(dataView, colrOffset, metaEndOffset);\n    return {\n      hasAppMarkers: exifOffset !== undefined || iccChunks !== undefined,\n      tiffHeaderOffset: exifOffset,\n      iccChunks: iccChunks\n    };\n  }\n\n  return {\n    hasAppMarkers: false\n  };\n}\n\nfunction findMetaAtom(dataView) {\n  var ATOM_LENGTH_SIZE = 4;\n  var ATOM_TYPE_SIZE = 4;\n  var ATOM_MIN_LENGTH = 8;\n  var ATOM_TYPE_OFFSET = 4;\n  var offset = 0;\n\n  while (offset + ATOM_LENGTH_SIZE + ATOM_TYPE_SIZE <= dataView.byteLength) {\n    var atomLength = getAtomLength(dataView, offset);\n\n    if (atomLength >= ATOM_MIN_LENGTH) {\n      var atomType = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, offset + ATOM_TYPE_OFFSET, ATOM_TYPE_SIZE);\n\n      if (atomType === 'meta') {\n        return {\n          offset: offset,\n          length: atomLength\n        };\n      }\n    }\n\n    offset += atomLength;\n  }\n\n  return {\n    offset: undefined,\n    length: 0\n  };\n}\n\nfunction getAtomLength(dataView, offset) {\n  var ATOM_EXTENDED_SIZE_LOW_OFFSET = 12;\n  var atomLength = dataView.getUint32(offset);\n\n  if (extendsToEndOfFile(atomLength)) {\n    return dataView.byteLength - offset;\n  }\n\n  if (hasExtendedSize(atomLength)) {\n    if (hasEmptyHighBits(dataView, offset)) {\n      // It's a bit tricky to handle 64 bit numbers in JavaScript. Let's\n      // wait until there are real-world examples where it is necessary.\n      return dataView.getUint32(offset + ATOM_EXTENDED_SIZE_LOW_OFFSET);\n    }\n  }\n\n  return atomLength;\n}\n\nfunction extendsToEndOfFile(atomLength) {\n  return atomLength === 0;\n}\n\nfunction hasExtendedSize(atomLength) {\n  return atomLength === 1;\n}\n\nfunction hasEmptyHighBits(dataView, offset) {\n  var ATOM_EXTENDED_SIZE_OFFSET = 8;\n  return dataView.getUint32(offset + ATOM_EXTENDED_SIZE_OFFSET) === 0;\n}\n\nfunction findMetaItems(dataView, offset, metaEndOffset) {\n  var STRING_SIZE = 4;\n  var ITEM_INDEX_REL_OFFSET = -4;\n  var offsets = {\n    ilocOffset: undefined,\n    exifItemOffset: undefined,\n    colrOffset: undefined\n  };\n\n  while (offset + STRING_SIZE <= metaEndOffset && (!offsets.ilocOffset || !offsets.exifItemOffset || !offsets.colrOffset)) {\n    var itemName = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, offset, STRING_SIZE);\n\n    if (_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].USE_EXIF && itemName === 'iloc') {\n      offsets.ilocOffset = offset;\n    } else if (_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].USE_EXIF && itemName === 'Exif') {\n      offsets.exifItemOffset = offset + ITEM_INDEX_REL_OFFSET;\n    } else if (_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].USE_ICC && itemName === 'colr') {\n      offsets.colrOffset = offset + ITEM_INDEX_REL_OFFSET;\n    }\n\n    offset++;\n  }\n\n  return offsets;\n}\n\nfunction findExifOffset(dataView, exifItemOffset, offset, metaEndOffset) {\n  var EXIF_ITEM_OFFSET_SIZE = 2;\n  var ILOC_DATA_OFFSET = 12;\n  var EXIF_POINTER_OFFSET = 8;\n  var EXIF_POINTER_SIZE = 4;\n  var EXIF_PREFIX_LENGTH_OFFSET = 4;\n  var ILOC_ITEM_SIZE = 16;\n\n  if (!offset || !exifItemOffset || exifItemOffset + EXIF_ITEM_OFFSET_SIZE > metaEndOffset) {\n    return undefined;\n  }\n\n  var exifItemIndex = dataView.getUint16(exifItemOffset);\n  offset += ILOC_DATA_OFFSET;\n\n  while (offset + ILOC_ITEM_SIZE <= metaEndOffset) {\n    var itemIndex = dataView.getUint16(offset);\n\n    if (itemIndex === exifItemIndex) {\n      var exifPointer = dataView.getUint32(offset + EXIF_POINTER_OFFSET);\n\n      if (exifPointer + EXIF_POINTER_SIZE <= dataView.byteLength) {\n        var exifOffset = dataView.getUint32(exifPointer);\n        var prefixLength = exifOffset + EXIF_PREFIX_LENGTH_OFFSET;\n        return exifPointer + prefixLength;\n      }\n    }\n\n    offset += ILOC_ITEM_SIZE;\n  }\n\n  return undefined;\n}\n\nfunction findIccChunks(dataView, offset, metaEndOffset) {\n  var ITEM_TYPE_OFFSET = 8;\n  var ITEM_TYPE_SIZE = 4;\n  var ITEM_CONTENT_OFFSET = 12;\n\n  if (!offset || offset + ITEM_CONTENT_OFFSET > metaEndOffset) {\n    return undefined;\n  }\n\n  var colorType = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, offset + ITEM_TYPE_OFFSET, ITEM_TYPE_SIZE);\n\n  if (colorType !== 'prof' && colorType !== 'rICC') {\n    return undefined;\n  }\n\n  return [{\n    offset: offset + ITEM_CONTENT_OFFSET,\n    length: getAtomLength(dataView, offset) - ITEM_CONTENT_OFFSET,\n    chunkNumber: 1,\n    chunksTotal: 1\n  }];\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/image-header-heic.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/image-header-jpeg.js":
/*!**********************************************************!*\
  !*** ./node_modules/exifreader/src/image-header-jpeg.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/exifreader/src/utils.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/exifreader/src/constants.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  isJpegFile: isJpegFile,\n  findJpegOffsets: findJpegOffsets\n});\nvar MIN_JPEG_DATA_BUFFER_LENGTH = 2;\nvar JPEG_ID = 0xffd8;\nvar JPEG_ID_SIZE = 2;\nvar APP_ID_OFFSET = 4;\nvar APP_MARKER_SIZE = 2;\nvar JFIF_DATA_OFFSET = 2; // From start of APP0 marker.\n\nvar TIFF_HEADER_OFFSET = 10; // From start of APP1 marker.\n\nvar IPTC_DATA_OFFSET = 18; // From start of APP13 marker.\n\nvar XMP_DATA_OFFSET = 33; // From start of APP1 marker.\n\nvar XMP_EXTENDED_DATA_OFFSET = 79; // From start of APP1 marker including GUID, total length, and offset.\n\nvar APP2_ICC_DATA_OFFSET = 18; // From start of APP2 marker including marker and chunk/chunk total numbers.\n\nvar MPF_DATA_OFFSET = 8;\nvar APP2_ICC_IDENTIFIER = 'ICC_PROFILE\\0';\nvar ICC_CHUNK_NUMBER_OFFSET = APP_ID_OFFSET + APP2_ICC_IDENTIFIER.length;\nvar ICC_TOTAL_CHUNKS_OFFSET = ICC_CHUNK_NUMBER_OFFSET + 1;\nvar APP2_MPF_IDENTIFIER = 'MPF\\0';\nvar SOF0_MARKER = 0xffc0;\nvar SOF2_MARKER = 0xffc2;\nvar DHT_MARKER = 0xffc4;\nvar DQT_MARKER = 0xffdb;\nvar DRI_MARKER = 0xffdd;\nvar SOS_MARKER = 0xffda;\nvar APP0_MARKER = 0xffe0;\nvar APP1_MARKER = 0xffe1;\nvar APP2_MARKER = 0xffe2;\nvar APP13_MARKER = 0xffed;\nvar APP15_MARKER = 0xffef;\nvar COMMENT_MARKER = 0xfffe;\nvar APP0_JFIF_IDENTIFIER = 'JFIF';\nvar APP1_EXIF_IDENTIFIER = 'Exif';\nvar APP1_XMP_IDENTIFIER = 'http://ns.adobe.com/xap/1.0/\\x00';\nvar APP1_XMP_EXTENDED_IDENTIFIER = 'http://ns.adobe.com/xmp/extension/\\x00';\nvar APP13_IPTC_IDENTIFIER = 'Photoshop 3.0';\n\nfunction isJpegFile(dataView) {\n  return !!dataView && dataView.byteLength >= MIN_JPEG_DATA_BUFFER_LENGTH && dataView.getUint16(0) === JPEG_ID;\n}\n\nfunction findJpegOffsets(dataView) {\n  var appMarkerPosition = JPEG_ID_SIZE;\n  var fieldLength;\n  var sof0DataOffset;\n  var sof2DataOffset;\n  var jfifDataOffset;\n  var tiffHeaderOffset;\n  var iptcDataOffset;\n  var xmpChunks;\n  var iccChunks;\n  var mpfDataOffset;\n\n  while (appMarkerPosition + APP_ID_OFFSET + 5 <= dataView.byteLength) {\n    if (_constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].USE_FILE && isSOF0Marker(dataView, appMarkerPosition)) {\n      sof0DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n    } else if (_constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].USE_FILE && isSOF2Marker(dataView, appMarkerPosition)) {\n      sof2DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n    } else if (_constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].USE_JFIF && isApp0JfifMarker(dataView, appMarkerPosition)) {\n      fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n      jfifDataOffset = appMarkerPosition + JFIF_DATA_OFFSET;\n    } else if (_constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].USE_EXIF && isApp1ExifMarker(dataView, appMarkerPosition)) {\n      fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n      tiffHeaderOffset = appMarkerPosition + TIFF_HEADER_OFFSET;\n    } else if (_constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].USE_XMP && isApp1XmpMarker(dataView, appMarkerPosition)) {\n      if (!xmpChunks) {\n        xmpChunks = [];\n      }\n\n      fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n      xmpChunks.push(getXmpChunkDetails(appMarkerPosition, fieldLength));\n    } else if (_constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].USE_XMP && isApp1ExtendedXmpMarker(dataView, appMarkerPosition)) {\n      if (!xmpChunks) {\n        xmpChunks = [];\n      }\n\n      fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n      xmpChunks.push(getExtendedXmpChunkDetails(appMarkerPosition, fieldLength));\n    } else if (_constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].USE_IPTC && isApp13PhotoshopMarker(dataView, appMarkerPosition)) {\n      fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n      iptcDataOffset = appMarkerPosition + IPTC_DATA_OFFSET;\n    } else if (_constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].USE_ICC && isApp2ICCMarker(dataView, appMarkerPosition)) {\n      fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n      var iccDataOffset = appMarkerPosition + APP2_ICC_DATA_OFFSET;\n      var iccDataLength = fieldLength - (APP2_ICC_DATA_OFFSET - APP_MARKER_SIZE);\n      var iccChunkNumber = dataView.getUint8(appMarkerPosition + ICC_CHUNK_NUMBER_OFFSET);\n      var iccChunksTotal = dataView.getUint8(appMarkerPosition + ICC_TOTAL_CHUNKS_OFFSET);\n\n      if (!iccChunks) {\n        iccChunks = [];\n      }\n\n      iccChunks.push({\n        offset: iccDataOffset,\n        length: iccDataLength,\n        chunkNumber: iccChunkNumber,\n        chunksTotal: iccChunksTotal\n      });\n    } else if (_constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].USE_MPF && isApp2MPFMarker(dataView, appMarkerPosition)) {\n      fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n      mpfDataOffset = appMarkerPosition + MPF_DATA_OFFSET;\n    } else if (isAppMarker(dataView, appMarkerPosition)) {\n      fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n    } else {\n      break;\n    }\n\n    appMarkerPosition += APP_MARKER_SIZE + fieldLength;\n  }\n\n  return {\n    hasAppMarkers: appMarkerPosition > JPEG_ID_SIZE,\n    fileDataOffset: sof0DataOffset || sof2DataOffset,\n    jfifDataOffset: jfifDataOffset,\n    tiffHeaderOffset: tiffHeaderOffset,\n    iptcDataOffset: iptcDataOffset,\n    xmpChunks: xmpChunks,\n    iccChunks: iccChunks,\n    mpfDataOffset: mpfDataOffset\n  };\n}\n\nfunction isSOF0Marker(dataView, appMarkerPosition) {\n  return dataView.getUint16(appMarkerPosition) === SOF0_MARKER;\n}\n\nfunction isSOF2Marker(dataView, appMarkerPosition) {\n  return dataView.getUint16(appMarkerPosition) === SOF2_MARKER;\n}\n\nfunction isApp2ICCMarker(dataView, appMarkerPosition) {\n  var markerIdLength = APP2_ICC_IDENTIFIER.length;\n  return dataView.getUint16(appMarkerPosition) === APP2_MARKER && (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getStringFromDataView)(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_ICC_IDENTIFIER;\n}\n\nfunction isApp2MPFMarker(dataView, appMarkerPosition) {\n  var markerIdLength = APP2_MPF_IDENTIFIER.length;\n  return dataView.getUint16(appMarkerPosition) === APP2_MARKER && (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getStringFromDataView)(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_MPF_IDENTIFIER;\n}\n\nfunction isApp0JfifMarker(dataView, appMarkerPosition) {\n  var markerIdLength = APP1_EXIF_IDENTIFIER.length;\n  return dataView.getUint16(appMarkerPosition) === APP0_MARKER && (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getStringFromDataView)(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP0_JFIF_IDENTIFIER && dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00;\n}\n\nfunction isApp1ExifMarker(dataView, appMarkerPosition) {\n  var markerIdLength = APP1_EXIF_IDENTIFIER.length;\n  return dataView.getUint16(appMarkerPosition) === APP1_MARKER && (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getStringFromDataView)(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_EXIF_IDENTIFIER && dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00;\n}\n\nfunction isApp1XmpMarker(dataView, appMarkerPosition) {\n  return dataView.getUint16(appMarkerPosition) === APP1_MARKER && isXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isXmpIdentifier(dataView, appMarkerPosition) {\n  var markerIdLength = APP1_XMP_IDENTIFIER.length;\n  return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getStringFromDataView)(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_IDENTIFIER;\n}\n\nfunction isApp1ExtendedXmpMarker(dataView, appMarkerPosition) {\n  return dataView.getUint16(appMarkerPosition) === APP1_MARKER && isExtendedXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isExtendedXmpIdentifier(dataView, appMarkerPosition) {\n  var markerIdLength = APP1_XMP_EXTENDED_IDENTIFIER.length;\n  return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getStringFromDataView)(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_EXTENDED_IDENTIFIER;\n}\n\nfunction getXmpChunkDetails(appMarkerPosition, fieldLength) {\n  return {\n    dataOffset: appMarkerPosition + XMP_DATA_OFFSET,\n    length: fieldLength - (XMP_DATA_OFFSET - APP_MARKER_SIZE)\n  };\n}\n\nfunction getExtendedXmpChunkDetails(appMarkerPosition, fieldLength) {\n  return {\n    dataOffset: appMarkerPosition + XMP_EXTENDED_DATA_OFFSET,\n    length: fieldLength - (XMP_EXTENDED_DATA_OFFSET - APP_MARKER_SIZE)\n  };\n}\n\nfunction isApp13PhotoshopMarker(dataView, appMarkerPosition) {\n  var markerIdLength = APP13_IPTC_IDENTIFIER.length;\n  return dataView.getUint16(appMarkerPosition) === APP13_MARKER && (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getStringFromDataView)(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP13_IPTC_IDENTIFIER && dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00;\n}\n\nfunction isAppMarker(dataView, appMarkerPosition) {\n  var appMarker = dataView.getUint16(appMarkerPosition);\n  return appMarker >= APP0_MARKER && appMarker <= APP15_MARKER || appMarker === COMMENT_MARKER || appMarker === SOF0_MARKER || appMarker === SOF2_MARKER || appMarker === DHT_MARKER || appMarker === DQT_MARKER || appMarker === DRI_MARKER || appMarker === SOS_MARKER;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvaW1hZ2UtaGVhZGVyLWpwZWcuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7OztBQUlBO0FBQ0E7QUFFQSxpRUFBZTtBQUNYRSxFQUFBQSxVQUFVLEVBQVZBLFVBRFc7QUFFWEMsRUFBQUEsZUFBZSxFQUFmQTtBQUZXLENBQWY7QUFLQSxJQUFNQywyQkFBMkIsR0FBRyxDQUFwQztBQUNBLElBQU1DLE9BQU8sR0FBRyxNQUFoQjtBQUNBLElBQU1DLFlBQVksR0FBRyxDQUFyQjtBQUNBLElBQU1DLGFBQWEsR0FBRyxDQUF0QjtBQUNBLElBQU1DLGVBQWUsR0FBRyxDQUF4QjtBQUNBLElBQU1DLGdCQUFnQixHQUFHLENBQXpCLEVBQTRCOztBQUM1QixJQUFNQyxrQkFBa0IsR0FBRyxFQUEzQixFQUErQjs7QUFDL0IsSUFBTUMsZ0JBQWdCLEdBQUcsRUFBekIsRUFBNkI7O0FBQzdCLElBQU1DLGVBQWUsR0FBRyxFQUF4QixFQUE0Qjs7QUFDNUIsSUFBTUMsd0JBQXdCLEdBQUcsRUFBakMsRUFBcUM7O0FBQ3JDLElBQU1DLG9CQUFvQixHQUFHLEVBQTdCLEVBQWlDOztBQUNqQyxJQUFNQyxlQUFlLEdBQUcsQ0FBeEI7QUFFQSxJQUFNQyxtQkFBbUIsR0FBRyxlQUE1QjtBQUNBLElBQU1DLHVCQUF1QixHQUFHVixhQUFhLEdBQUdTLG1CQUFtQixDQUFDRSxNQUFwRTtBQUNBLElBQU1DLHVCQUF1QixHQUFHRix1QkFBdUIsR0FBRyxDQUExRDtBQUVBLElBQU1HLG1CQUFtQixHQUFHLE9BQTVCO0FBRUEsSUFBTUMsV0FBVyxHQUFHLE1BQXBCO0FBQ0EsSUFBTUMsV0FBVyxHQUFHLE1BQXBCO0FBQ0EsSUFBTUMsVUFBVSxHQUFHLE1BQW5CO0FBQ0EsSUFBTUMsVUFBVSxHQUFHLE1BQW5CO0FBQ0EsSUFBTUMsVUFBVSxHQUFHLE1BQW5CO0FBQ0EsSUFBTUMsVUFBVSxHQUFHLE1BQW5CO0FBRUEsSUFBTUMsV0FBVyxH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MUQsV0FBZCxJQUErQjBELFNBQVMsSUFBSXRELFlBQTdDLElBQ0NzRCxTQUFTLEtBQUtyRCxjQURmLElBRUNxRCxTQUFTLEtBQUtoRSxXQUZmLElBR0NnRSxTQUFTLEtBQUsvRCxXQUhmLElBSUMrRCxTQUFTLEtBQUs5RCxVQUpmLElBS0M4RCxTQUFTLEtBQUs3RCxVQUxmLElBTUM2RCxTQUFTLEtBQUs1RCxVQU5mLElBT0M0RCxTQUFTLEtBQUszRCxVQVB0QjtBQVFIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQnJvd3NlckltYWdlUmVzaXplci8uL25vZGVfbW9kdWxlcy9leGlmcmVhZGVyL3NyYy9pbWFnZS1oZWFkZXItanBlZy5qcz9lNmU0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIFRoaXMgU291cmNlIENvZGUgRm9ybSBpcyBzdWJqZWN0IHRvIHRoZSB0ZXJtcyBvZiB0aGUgTW96aWxsYSBQdWJsaWNcbiAqIExpY2Vuc2UsIHYuIDIuMC4gSWYgYSBjb3B5IG9mIHRoZSBNUEwgd2FzIG5vdCBkaXN0cmlidXRlZCB3aXRoIHRoaXNcbiAqIGZpbGUsIFlvdSBjYW4gb2J0YWluIG9uZSBhdCBodHRwczovL21vemlsbGEub3JnL01QTC8yLjAvLiAqL1xuXG5pbXBvcnQge2dldFN0cmluZ0Zyb21EYXRhVmlld30gZnJvbSAnLi91dGlscy5qcyc7XG5pbXBvcnQgQ29uc3RhbnRzIGZyb20gJy4vY29uc3RhbnRzLmpzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIGlzSnBlZ0ZpbGUsXG4gICAgZmluZEpwZWdPZmZzZXRzXG59O1xuXG5jb25zdCBNSU5fSlBFR19EQVRBX0JVRkZFUl9MRU5HVEggPSAyO1xuY29uc3QgSlBFR19JRCA9IDB4ZmZkODtcbmNvbnN0IEpQRUdfSURfU0laRSA9IDI7XG5jb25zdCBBUFBfSURfT0ZGU0VUID0gNDtcbmNvbnN0IEFQUF9NQVJLRVJfU0laRSA9IDI7XG5jb25zdCBKRklGX0RBVEFfT0ZGU0VUID0gMjsgLy8gRnJvbSBzdGFydCBvZiBBUFAwIG1hcmtlci5cbmNvbnN0IFRJRkZfSEVBREVSX09GRlNFVCA9IDEwOyAvLyBGcm9tIHN0YXJ0IG9mIEFQUDEgbWFya2VyLlxuY29uc3QgSVBUQ19EQVRBX09GRlNFVCA9IDE4OyAvLyBGcm9tIHN0YXJ0IG9mIEFQUDEzIG1hcmtlci5cbmNvbnN0IFhNUF9EQVRBX09GRlNFVCA9IDMzOyAvLyBGcm9tIHN0YXJ0IG9mIEFQUDEgbWFya2VyLlxuY29uc3QgWE1QX0VYVEVOREVEX0RBVEFfT0ZGU0VUID0gNzk7IC8vIEZyb20gc3RhcnQgb2YgQVBQMSBtYXJrZXIgaW5jbHVkaW5nIEdVSUQsIHRvdGFsIGxlbmd0aCwgYW5kIG9mZnNldC5cbmNvbnN0IEFQUDJfSUNDX0RBVEFfT0ZGU0VUID0gMTg7IC8vIEZyb20gc3RhcnQgb2YgQVBQMiBtYXJrZXIgaW5jbHVkaW5nIG1hcmtlciBhbmQgY2h1bmsvY2h1bmsgdG90YWwgbnVtYmVycy5cbmNvbnN0IE1QRl9EQVRBX09GRlNFVCA9IDg7XG5cbmNvbnN0IEFQUDJfSUNDX0lERU5USUZJRVIgPSAnSUNDX1BST0ZJTEVcXDAnO1xuY29uc3QgSUNDX0NIVU5LX05VTUJFUl9PRkZTRVQgPSBBUFBfSURfT0ZGU0VUICsgQVBQMl9JQ0NfSURFTlRJRklFUi5sZW5ndGg7XG5jb25zdCBJQ0NfVE9UQUxfQ0hVTktTX09GRlNFVCA9IElDQ19DSFVOS19OVU1CRVJfT0ZGU0VUICsgMTtcblxuY29uc3QgQVBQMl9NUEZfSURFTlRJRklFUiA9ICdNUEZcXDAnO1xuXG5jb25zdCBTT0YwX01BUktFUiA9IDB4ZmZjMDtcbmNvbnN0IFNPRjJfTUFSS0VSID0gMHhmZmMyO1xuY29uc3QgREhUX01BUktFUiA9IDB4ZmZjNDtcbmNvbnN0IERRVF9NQVJLRVIgPSAweGZmZGI7XG5jb25zdCBEUklfTUFSS0VSID0gMHhmZmRkO1xuY29uc3QgU09TX01BUktFUiA9IDB4ZmZkYTtcblxuY29uc3QgQVBQMF9NQVJLRVIgPSAweGZmZTA7XG5jb25zdCBBUFAxX01BUktFUiA9IDB4ZmZlMTtcbmNvbnN0IEFQUDJfTUFSS0VSID0gMHhmZmUyO1xuY29uc3QgQVBQMTNfTUFSS0VSID0gMHhmZmVkO1xuY29uc3QgQVBQMTVfTUFSS0VSID0gMHhmZmVmO1xuY29uc3QgQ09NTUVOVF9NQVJLRVIgPSAweGZmZmU7XG5cbmNvbnN0IEFQUDBfSkZJRl9JREVOVElGSUVSID0gJ0pGSUYnO1xuY29uc3QgQVBQMV9FWElGX0lERU5USUZJRVIgPSAnRXhpZic7XG5jb25zdCBBUFAxX1hNUF9JREVOVElGSUVSID0gJ2h0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9cXHgwMCc7XG5jb25zdCBBUFAxX1hNUF9FWFRFTkRFRF9JREVOVElGSUVSID0gJ2h0dHA6Ly9ucy5hZG9iZS5jb20veG1wL2V4dGVuc2lvbi9cXHgwMCc7XG5jb25zdCBBUFAxM19JUFRDX0lERU5USUZJRVIgPSAnUGhvdG9zaG9wIDMuMCc7XG5cbmZ1bmN0aW9uIGlzSnBlZ0ZpbGUoZGF0YVZpZXcpIHtcbiAgICByZXR1cm4gISFkYXRhVmlldyAmJiAoZGF0YVZpZXcuYnl0ZUxlbmd0aCA+PSBNSU5fSlBFR19EQVRBX0JVRkZFUl9MRU5HVEgpICYmIChkYXRhVmlldy5nZXRVaW50MTYoMCkgPT09IEpQRUdfSUQpO1xufVxuXG5mdW5jdGlvbiBmaW5kSnBlZ09mZnNldHMoZGF0YVZpZXcpIHtcbiAgICBsZXQgYXBwTWFya2VyUG9zaXRpb24gPSBKUEVHX0lEX1NJWkU7XG4gICAgbGV0IGZpZWxkTGVuZ3RoO1xuICAgIGxldCBzb2YwRGF0YU9mZnNldDtcbiAgICBsZXQgc29mMkRhdGFPZmZzZXQ7XG4gICAgbGV0IGpmaWZEYXRhT2Zmc2V0O1xuICAgIGxldCB0aWZmSGVhZGVyT2Zmc2V0O1xuICAgIGxldCBpcHRjRGF0YU9mZnNldDtcbiAgICBsZXQgeG1wQ2h1bmtzO1xuICAgIGxldCBpY2NDaHVua3M7XG4gICAgbGV0IG1wZkRhdGFPZmZzZXQ7XG5cbiAgICB3aGlsZSAoYXBwTWFya2VyUG9zaXRpb24gKyBBUFBfSURfT0ZGU0VUICsgNSA8PSBkYXRhVmlldy5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIGlmIChDb25zdGFudHMuVVNFX0ZJTEUgJiYgaXNTT0YwTWFya2VyKGRhdGFWaWV3LCBhcHBNYXJrZXJQb3NpdGlvbikpIHtcbiAgICAgICAgICAgIHNvZjBEYXRhT2Zmc2V0ID0gYXBwTWFya2VyUG9zaXRpb24gKyBBUFBfTUFSS0VSX1NJWkU7XG4gICAgICAgIH0gZWxzZSBpZiAoQ29uc3RhbnRzLlVTRV9GSUxFICYmIGlzU09GMk1hcmtlcihkYXRhVmlldywgYXBwTWFya2VyUG9zaXRpb24pKSB7XG4gICAgICAgICAgICBzb2YyRGF0YU9mZnNldCA9IGFwcE1hcmtlclBvc2l0aW9uICsgQVBQX01BUktFUl9TSVpFO1xuICAgICAgICB9IGVsc2UgaWYgKENvbnN0YW50cy5VU0VfSkZJRiAmJiBpc0FwcDBKZmlmTWFya2VyKGRhdGFWaWV3LCBhcHBNYXJrZXJQb3NpdGlvbikpIHtcbiAgICAgICAgICAgIGZpZWxkTGVuZ3RoID0gZGF0YVZpZXcuZ2V0VWludDE2KGFwcE1hcmtlclBvc2l0aW9uICsgQVBQX01BUktFUl9TSVpFKTtcbiAgICAgICAgICAgIGpmaWZEYXRhT2Zmc2V0ID0gYXBwTWFya2VyUG9zaXRpb24gKyBKRklGX0RBVEFfT0ZGU0VUO1xuICAgICAgICB9IGVsc2UgaWYgKENvbnN0YW50cy5VU0VfRVhJRiAmJiBpc0FwcDFFeGlmTWFya2VyKGRhdGFWaWV3LCBhcHBNYXJrZXJQb3NpdGlvbikpIHtcbiAgICAgICAgICAgIGZpZWxkTGVuZ3RoID0gZGF0YVZpZXcuZ2V0VWludDE2KGFwcE1hcmtlclBvc2l0aW9uICsgQVBQX01BUktFUl9TSVpFKTtcbiAgICAgICAgICAgIHRpZmZIZWFkZXJPZmZzZXQgPSBhcHBNYXJrZXJQb3NpdGlvbiArIFRJRkZfSEVBREVSX09GRlNFVDtcbiAgICAgICAgfSBlbHNlIGlmIChDb25zdGFudHMuVVNFX1hNUCAmJiBpc0FwcDFYbXBNYXJrZXIoZGF0YVZpZXcsIGFwcE1hcmtlclBvc2l0aW9uKSkge1xuICAgICAgICAgICAgaWYgKCF4bXBDaHVua3MpIHtcbiAgICAgICAgICAgICAgICB4bXBDaHVua3MgPSBbXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpZWxkTGVuZ3RoID0gZGF0YVZpZXcuZ2V0VWludDE2KGFwcE1hcmtlclBvc2l0aW9uICsgQVBQX01BUktFUl9TSVpFKTtcbiAgICAgICAgICAgIHhtcENodW5rcy5wdXNoKGdldFhtcENodW5rRGV0YWlscyhhcHBNYXJrZXJQb3NpdGlvbiwgZmllbGRMZW5ndGgpKTtcbiAgICAgICAgfSBlbHNlIGlmIChDb25zdGFudHMuVVNFX1hNUCAmJiBpc0FwcDFFeHRlbmRlZFhtcE1hcmtlcihkYXRhVmlldywgYXBwTWFya2VyUG9zaXRpb24pKSB7XG4gICAgICAgICAgICBpZiAoIXhtcENodW5rcykge1xuICAgICAgICAgICAgICAgIHhtcENodW5rcyA9IFtdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZmllbGRMZW5ndGggPSBkYXRhVmlldy5nZXRVaW50MTYoYXBwTWFya2VyUG9zaXRpb24gKyBBUFBfTUFSS0VSX1NJWkUpO1xuICAgICAgICAgICAgeG1wQ2h1bmtzLnB1c2goZ2V0RXh0ZW5kZWRYbXBDaHVua0RldGFpbHMoYXBwTWFya2VyUG9zaXRpb24sIGZpZWxkTGVuZ3RoKSk7XG4gICAgICAgIH0gZWxzZSBpZiAoQ29uc3RhbnRzLlVTRV9JUFRDICYmIGlzQXBwMTNQaG90b3Nob3BNYXJrZXIoZGF0YVZpZXcsIGFwcE1hcmtlclBvc2l0aW9uKSkge1xuICAgICAgICAgICAgZmllbGRMZW5ndGggPSBkYXRhVmlldy5nZXRVaW50MTYoYXBwTWFya2VyUG9zaXRpb24gKyBBUFBfTUFSS0VSX1NJWkUpO1xuICAgICAgICAgICAgaXB0Y0RhdGFPZmZzZXQgPSBhcHBNYXJrZXJQb3NpdGlvbiArIElQVENfREFUQV9PRkZTRVQ7XG4gICAgICAgIH0gZWxzZSBpZiAoQ29uc3RhbnRzLlVTRV9JQ0MgJiYgaXNBcHAySUNDTWFya2VyKGRhdGFWaWV3LCBhcHBNYXJrZXJQb3NpdGlvbikpIHtcbiAgICAgICAgICAgIGZpZWxkTGVuZ3RoID0gZGF0YVZpZXcuZ2V0VWludDE2KGFwcE1hcmtlclBvc2l0aW9uICsgQVBQX01BUktFUl9TSVpFKTtcbiAgICAgICAgICAgIGNvbnN0IGljY0RhdGFPZmZzZXQgPSBhcHBNYXJrZXJQb3NpdGlvbiArIEFQUDJfSUNDX0RBVEFfT0ZGU0VUO1xuICAgICAgICAgICAgY29uc3QgaWNjRGF0YUxlbmd0aCA9IGZpZWxkTGVuZ3RoIC0gKEFQUDJfSUNDX0RBVEFfT0ZGU0VUIC0gQVBQX01BUktFUl9TSVpFKTtcblxuICAgICAgICAgICAgY29uc3QgaWNjQ2h1bmtOdW1iZXIgPSBkYXRhVmlldy5nZXRVaW50OChhcHBNYXJrZXJQb3NpdGlvbiArIElDQ19DSFVOS19OVU1CRVJfT0ZGU0VUKTtcbiAgICAgICAgICAgIGNvbnN0IGljY0NodW5rc1RvdGFsID0gZGF0YVZpZXcuZ2V0VWludDgoYXBwTWFya2VyUG9zaXRpb24gKyBJQ0NfVE9UQUxfQ0hVTktTX09GRlNFVCk7XG4gICAgICAgICAgICBpZiAoIWljY0NodW5rcykge1xuICAgICAgICAgICAgICAgIGljY0NodW5rcyA9IFtdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWNjQ2h1bmtzLnB1c2goe29mZnNldDogaWNjRGF0YU9mZnNldCwgbGVuZ3RoOiBpY2NEYXRhTGVuZ3RoLCBjaHVua051bWJlcjogaWNjQ2h1bmtOdW1iZXIsIGNodW5rc1RvdGFsOiBpY2NDaHVua3NUb3RhbH0pO1xuICAgICAgICB9IGVsc2UgaWYgKENvbnN0YW50cy5VU0VfTVBGICYmIGlzQXBwMk1QRk1hcmtlcihkYXRhVmlldywgYXBwTWFya2VyUG9zaXRpb24pKSB7XG4gICAgICAgICAgICBmaWVsZExlbmd0aCA9IGRhdGFWaWV3LmdldFVpbnQxNihhcHBNYXJrZXJQb3NpdGlvbiArIEFQUF9NQVJLRVJfU0laRSk7XG4gICAgICAgICAgICBtcGZEYXRhT2Zmc2V0ID0gYXBwTWFya2VyUG9zaXRpb24gKyBNUEZfREFUQV9PRkZTRVQ7XG4gICAgICAgIH0gZWxzZSBpZiAoaXNBcHBNYXJrZXIoZGF0YVZpZXcsIGFwcE1hcmtlclBvc2l0aW9uKSkge1xuICAgICAgICAgICAgZmllbGRMZW5ndGggPSBkYXRhVmlldy5nZXRVaW50MTYoYXBwTWFya2VyUG9zaXRpb24gKyBBUFBfTUFSS0VSX1NJWkUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgYXBwTWFya2VyUG9zaXRpb24gKz0gQVBQX01BUktFUl9TSVpFICsgZmllbGRMZW5ndGg7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgaGFzQXBwTWFya2VyczogYXBwTWFya2VyUG9zaXRpb24gPiBKUEVHX0lEX1NJWkUsXG4gICAgICAgIGZpbGVEYXRhT2Zmc2V0OiBzb2YwRGF0YU9mZnNldCB8fCBzb2YyRGF0YU9mZnNldCxcbiAgICAgICAgamZpZkRhdGFPZmZzZXQsXG4gICAgICAgIHRpZmZIZWFkZXJPZmZzZXQsXG4gICAgICAgIGlwdGNEYXRhT2Zmc2V0LFxuICAgICAgICB4bXBDaHVua3MsXG4gICAgICAgIGljY0NodW5rcyxcbiAgICAgICAgbXBmRGF0YU9mZnNldFxuICAgIH07XG59XG5cbmZ1bmN0aW9uIGlzU09GME1hcmtlcihkYXRhVmlldywgYXBwTWFya2VyUG9zaXRpb24pIHtcbiAgICByZXR1cm4gKGRhdGFWaWV3LmdldFVpbnQxNihhcHBNYXJrZXJQb3NpdGlvbikgPT09IFNPRjBfTUFSS0VSKTtcbn1cblxuZnVuY3Rpb24gaXNTT0YyTWFya2VyKGRhdGFWaWV3LCBhcHBNYXJrZXJQb3NpdGlvbikge1xuICAgIHJldHVybiAoZGF0YVZpZXcuZ2V0VWludDE2KGFwcE1hcmtlclBvc2l0aW9uKSA9PT0gU09GMl9NQVJLRVIpO1xufVxuXG5mdW5jdGlvbiBpc0FwcDJJQ0NNYXJrZXIoZGF0YVZpZXcsIGFwcE1hcmtlclBvc2l0aW9uKSB7XG4gICAgY29uc3QgbWFya2VySWRMZW5ndGggPSBBUFAyX0lDQ19JREVOVElGSUVSLmxlbmd0aDtcblxuICAgIHJldHVybiAoZGF0YVZpZXcuZ2V0VWludDE2KGFwcE1hcmtlclBvc2l0aW9uKSA9PT0gQVBQMl9NQVJLRVIpXG4gICAgICAgICYmIChnZXRTdHJpbmdGcm9tRGF0YVZpZXcoZGF0YVZpZXcsIGFwcE1hcmtlclBvc2l0aW9uICsgQVBQX0lEX09GRlNFVCwgbWFya2VySWRMZW5ndGgpID09PSBBUFAyX0lDQ19JREVOVElGSUVSKTtcbn1cblxuZnVuY3Rpb24gaXNBcHAyTVBGTWFya2VyKGRhdGFWaWV3LCBhcHBNYXJrZXJQb3NpdGlvbikge1xuICAgIGNvbnN0IG1hcmtlcklkTGVuZ3RoID0gQVBQMl9NUEZfSURFTlRJRklFUi5sZW5ndGg7XG5cbiAgICByZXR1cm4gKGRhdGFWaWV3LmdldFVpbnQxNihhcHBNYXJrZXJQb3NpdGlvbikgPT09IEFQUDJfTUFSS0VSKVxuICAgICAgICAmJiAoZ2V0U3RyaW5nRnJvbURhdGFWaWV3KGRhdGFWaWV3LCBhcHBNYXJrZXJQb3NpdGlvbiArIEFQUF9JRF9PRkZTRVQsIG1hcmtlcklkTGVuZ3RoKSA9PT0gQVBQMl9NUEZfSURFTlRJRklFUik7XG59XG5cbmZ1bmN0aW9uIGlzQXBwMEpmaWZNYXJrZXIoZGF0YVZpZXcsIGFwcE1hcmtlclBvc2l0aW9uKSB7XG4gICAgY29uc3QgbWFya2VySWRMZW5ndGggPSBBUFAxX0VYSUZfSURFTlRJRklFUi5sZW5ndGg7XG5cbiAgICByZXR1cm4gKGRhdGFWaWV3LmdldFVpbnQxNihhcHBNYXJrZXJQb3NpdGlvbikgPT09IEFQUDBfTUFSS0VSKVxuICAgICAgICAmJiAoZ2V0U3RyaW5nRnJvbURhdGFWaWV3KGRhdGFWaWV3LCBhcHBNYXJrZXJQb3NpdGlvbiArIEFQUF9JRF9PRkZTRVQsIG1hcmtlcklkTGVuZ3RoKSA9PT0gQVBQMF9KRklGX0lERU5USUZJRVIpXG4gICAgICAgICYmIChkYXRhVmlldy5nZXRVaW50OChhcHBNYXJrZXJQb3NpdGlvbiArIEFQUF9JRF9PRkZTRVQgKyBtYXJrZXJJZExlbmd0aCkgPT09IDB4MDApO1xufVxuXG5mdW5jdGlvbiBpc0FwcDFFeGlmTWFya2VyKGRhdGFWaWV3LCBhcHBNYXJrZXJQb3NpdGlvbikge1xuICAgIGNvbnN0IG1hcmtlcklkTGVuZ3RoID0gQVBQMV9FWElGX0lERU5USUZJRVIubGVuZ3RoO1xuXG4gICAgcmV0dXJuIChkYXRhVmlldy5nZXRVaW50MTYoYXBwTWFya2VyUG9zaXRpb24pID09PSBBUFAxX01BUktFUilcbiAgICAgICAgJiYgKGdldFN0cmluZ0Zyb21EYXRhVmlldyhkYXRhVmlldywgYXBwTWFya2VyUG9zaXRpb24gKyBBUFBfSURfT0ZGU0VULCBtYXJrZXJJZExlbmd0aCkgPT09IEFQUDFfRVhJRl9JREVOVElGSUVSKVxuICAgICAgICAmJiAoZGF0YVZpZXcuZ2V0VWludDgoYXBwTWFya2VyUG9zaXRpb24gKyBBUFBfSURfT0ZGU0VUICsgbWFya2VySWRMZW5ndGgpID09PSAweDAwKTtcbn1cblxuZnVuY3Rpb24gaXNBcHAxWG1wTWFya2VyKGRhdGFWaWV3LCBhcHBNYXJrZXJQb3NpdGlvbikge1xuICAgIHJldHVybiAoZGF0YVZpZXcuZ2V0VWludDE2KGFwcE1hcmtlclBvc2l0aW9uKSA9PT0gQVBQMV9NQVJLRVIpXG4gICAgICAgICYmIGlzWG1wSWRlbnRpZmllcihkYXRhVmlldywgYXBwTWFya2VyUG9zaXRpb24pO1xufVxuXG5mdW5jdGlvbiBpc1htcElkZW50aWZpZXIoZGF0YVZpZXcsIGFwcE1hcmtlclBvc2l0aW9uKSB7XG4gICAgY29uc3QgbWFya2VySWRMZW5ndGggPSBBUFAxX1hNUF9JREVOVElGSUVSLmxlbmd0aDtcbiAgICByZXR1cm4gZ2V0U3RyaW5nRnJvbURhdGFWaWV3KGRhdGFWaWV3LCBhcHBNYXJrZXJQb3NpdGlvbiArIEFQUF9JRF9PRkZTRVQsIG1hcmtlcklkTGVuZ3RoKSA9PT0gQVBQMV9YTVBfSURFTlRJRklFUjtcbn1cblxuZnVuY3Rpb24gaXNBcHAxRXh0ZW5kZWRYbXBNYXJrZXIoZGF0YVZpZXcsIGFwcE1hcmtlclBvc2l0aW9uKSB7XG4gICAgcmV0dXJuIChkYXRhVmlldy5nZXRVaW50MTYoYXBwTWFya2VyUG9zaXRpb24pID09PSBBUFAxX01BUktFUilcbiAgICAgICAgJiYgaXNFeHRlbmRlZFhtcElkZW50aWZpZXIoZGF0YVZpZXcsIGFwcE1hcmtlclBvc2l0aW9uKTtcbn1cblxuZnVuY3Rpb24gaXNFeHRlbmRlZFhtcElkZW50aWZpZXIoZGF0YVZpZXcsIGFwcE1hcmtlclBvc2l0aW9uKSB7XG4gICAgY29uc3QgbWFya2VySWRMZW5ndGggPSBBUFAxX1hNUF9FWFRFTkRFRF9JREVOVElGSUVSLmxlbmd0aDtcbiAgICByZXR1cm4gZ2V0U3RyaW5nRnJvbURhdGFWaWV3KGRhdGFWaWV3LCBhcHBNYXJrZXJQb3NpdGlvbiArIEFQUF9JRF9PRkZTRVQsIG1hcmtlcklkTGVuZ3RoKSA9PT0gQVBQMV9YTVBfRVhURU5ERURfSURFTlRJRklFUjtcbn1cblxuZnVuY3Rpb24gZ2V0WG1wQ2h1bmtEZXRhaWxzKGFwcE1hcmtlclBvc2l0aW9uLCBmaWVsZExlbmd0aCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGRhdGFPZmZzZXQ6IGFwcE1hcmtlclBvc2l0aW9uICsgWE1QX0RBVEFfT0ZGU0VULFxuICAgICAgICBsZW5ndGg6IGZpZWxkTGVuZ3RoIC0gKFhNUF9EQVRBX09GRlNFVCAtIEFQUF9NQVJLRVJfU0laRSlcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBnZXRFeHRlbmRlZFhtcENodW5rRGV0YWlscyhhcHBNYXJrZXJQb3NpdGlvbiwgZmllbGRMZW5ndGgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBkYXRhT2Zmc2V0OiBhcHBNYXJrZXJQb3NpdGlvbiArIFhNUF9FWFRFTkRFRF9EQVRBX09GRlNFVCxcbiAgICAgICAgbGVuZ3RoOiBmaWVsZExlbmd0aCAtIChYTVBfRVhURU5ERURfREFUQV9PRkZTRVQgLSBBUFBfTUFSS0VSX1NJWkUpXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gaXNBcHAxM1Bob3Rvc2hvcE1hcmtlcihkYXRhVmlldywgYXBwTWFya2VyUG9zaXRpb24pIHtcbiAgICBjb25zdCBtYXJrZXJJZExlbmd0aCA9IEFQUDEzX0lQVENfSURFTlRJRklFUi5sZW5ndGg7XG5cbiAgICByZXR1cm4gKGRhdGFWaWV3LmdldFVpbnQxNihhcHBNYXJrZXJQb3NpdGlvbikgPT09IEFQUDEzX01BUktFUilcbiAgICAgICAgJiYgKGdldFN0cmluZ0Zyb21EYXRhVmlldyhkYXRhVmlldywgYXBwTWFya2VyUG9zaXRpb24gKyBBUFBfSURfT0ZGU0VULCBtYXJrZXJJZExlbmd0aCkgPT09IEFQUDEzX0lQVENfSURFTlRJRklFUilcbiAgICAgICAgJiYgKGRhdGFWaWV3LmdldFVpbnQ4KGFwcE1hcmtlclBvc2l0aW9uICsgQVBQX0lEX09GRlNFVCArIG1hcmtlcklkTGVuZ3RoKSA9PT0gMHgwMCk7XG59XG5cbmZ1bmN0aW9uIGlzQXBwTWFya2VyKGRhdGFWaWV3LCBhcHBNYXJrZXJQb3NpdGlvbikge1xuICAgIGNvbnN0IGFwcE1hcmtlciA9IGRhdGFWaWV3LmdldFVpbnQxNihhcHBNYXJrZXJQb3NpdGlvbik7XG4gICAgcmV0dXJuICgoYXBwTWFya2VyID49IEFQUDBfTUFSS0VSKSAmJiAoYXBwTWFya2VyIDw9IEFQUDE1X01BUktFUikpXG4gICAgICAgIHx8IChhcHBNYXJrZXIgPT09IENPTU1FTlRfTUFSS0VSKVxuICAgICAgICB8fCAoYXBwTWFya2VyID09PSBTT0YwX01BUktFUilcbiAgICAgICAgfHwgKGFwcE1hcmtlciA9PT0gU09GMl9NQVJLRVIpXG4gICAgICAgIHx8IChhcHBNYXJrZXIgPT09IERIVF9NQVJLRVIpXG4gICAgICAgIHx8IChhcHBNYXJrZXIgPT09IERRVF9NQVJLRVIpXG4gICAgICAgIHx8IChhcHBNYXJrZXIgPT09IERSSV9NQVJLRVIpXG4gICAgICAgIHx8IChhcHBNYXJrZXIgPT09IFNPU19NQVJLRVIpO1xufVxuIl0sIm5hbWVzIjpbImdldFN0cmluZ0Zyb21EYXRhVmlldyIsIkNvbnN0YW50cyIsImlzSnBlZ0ZpbGUiLCJmaW5kSnBlZ09mZnNldHMiLCJNSU5fSlBFR19EQVRBX0JVRkZFUl9MRU5HVEgiLCJKUEVHX0lEIiwiSlBFR19JRF9TSVpFIiwiQVBQX0lEX09GRlNFVCIsIkFQUF9NQVJLRVJfU0laRSIsIkpGSUZfREFUQV9PRkZTRVQiLCJUSUZGX0hFQURFUl9PRkZTRVQiLCJJUFRDX0RBVEFfT0ZGU0VUIiwiWE1QX0RBVEFfT0ZGU0VUIiwiWE1QX0VYVEVOREVEX0RBVEFfT0ZGU0VUIiwiQVBQMl9JQ0NfREFUQV9PRkZTRVQiLCJNUEZfREFUQV9PRkZTRVQiLCJBUFAyX0lDQ19JREVOVElGSUVSIiwiSUNDX0NIVU5LX05VTUJFUl9PRkZTRVQiLCJsZW5ndGgiLCJJQ0NfVE9UQUxfQ0hVTktTX09GRlNFVCIsIkFQUDJfTVBGX0lERU5USUZJRVIiLCJTT0YwX01BUktFUiIsIlNPRjJfTUFSS0VSIiwiREhUX01BUktFUiIsIkRRVF9NQVJLRVIiLCJEUklfTUFSS0VSIiwiU09TX01BUktFUiIsIkFQUDBfTUFSS0VSIiwiQVBQMV9NQVJLRVIiLCJBUFAyX01BUktFUiIsIkFQUDEzX01BUktFUiIsIkFQUDE1X01BUktFUiIsIkNPTU1FTlRfTUFSS0VSIiwiQVBQMF9KRklGX0lERU5USUZJRVIiLCJBUFAxX0VYSUZfSURFTlRJRklFUiIsIkFQUDFfWE1QX0lERU5USUZJRVIiLCJBUFAxX1hNUF9FWFRFTkRFRF9JREVOVElGSUVSIiwiQVBQMTNfSVBUQ19JREVOVElGSUVSIiwiZGF0YVZpZXciLCJieXRlTGVuZ3RoIiwiZ2V0VWludDE2IiwiYXBwTWFya2VyUG9zaXRpb24iLCJmaWVsZExlbmd0aCIsInNvZjBEYXRhT2Zmc2V0Iiwic29mMkRhdGFPZmZzZXQiLCJqZmlmRGF0YU9mZnNldCIsInRpZmZIZWFkZXJPZmZzZXQiLCJpcHRjRGF0YU9mZnNldCIsInhtcENodW5rcyIsImljY0NodW5rcyIsIm1wZkRhdGFPZmZzZXQiLCJVU0VfRklMRSIsImlzU09GME1hcmtlciIsImlzU09GMk1hcmtlciIsIlVTRV9KRklGIiwiaXNBcHAwSmZpZk1hcmtlciIsIlVTRV9FWElGIiwiaXNBcHAxRXhpZk1hcmtlciIsIlVTRV9YTVAiLCJpc0FwcDFYbXBNYXJrZXIiLCJwdXNoIiwiZ2V0WG1wQ2h1bmtEZXRhaWxzIiwiaXNBcHAxRXh0ZW5kZWRYbXBNYXJrZXIiLCJnZXRFeHRlbmRlZFhtcENodW5rRGV0YWlscyIsIlVTRV9JUFRDIiwiaXNBcHAxM1Bob3Rvc2hvcE1hcmtlciIsIlVTRV9JQ0MiLCJpc0FwcDJJQ0NNYXJrZXIiLCJpY2NEYXRhT2Zmc2V0IiwiaWNjRGF0YUxlbmd0aCIsImljY0NodW5rTnVtYmVyIiwiZ2V0VWludDgiLCJpY2NDaHVua3NUb3RhbCIsIm9mZnNldCIsImNodW5rTnVtYmVyIiwiY2h1bmtzVG90YWwiLCJVU0VfTVBGIiwiaXNBcHAyTVBGTWFya2VyIiwiaXNBcHBNYXJrZXIiLCJoYXNBcHBNYXJrZXJzIiwiZmlsZURhdGFPZmZzZXQiLCJtYXJrZXJJZExlbmd0aCIsImlzWG1wSWRlbnRpZmllciIsImlzRXh0ZW5kZWRYbXBJZGVudGlmaWVyIiwiZGF0YU9mZnNldCIsImFwcE1hcmtlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/image-header-jpeg.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/image-header-png.js":
/*!*********************************************************!*\
  !*** ./node_modules/exifreader/src/image-header-png.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/exifreader/src/utils.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/exifreader/src/constants.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  isPngFile: isPngFile,\n  findPngOffsets: findPngOffsets\n});\nvar PNG_ID = '\\x89\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a';\nvar PNG_CHUNK_LENGTH_SIZE = 4;\nvar PNG_CHUNK_TYPE_SIZE = 4;\nvar PNG_CHUNK_LENGTH_OFFSET = 0;\nvar PNG_CHUNK_TYPE_OFFSET = PNG_CHUNK_LENGTH_SIZE;\nvar PNG_CHUNK_DATA_OFFSET = PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE;\nvar PNG_XMP_PREFIX = 'XML:com.adobe.xmp\\x00';\n\nfunction isPngFile(dataView) {\n  return !!dataView && (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, 0, PNG_ID.length) === PNG_ID;\n}\n\nfunction findPngOffsets(dataView) {\n  var PNG_CRC_SIZE = 4;\n  var offsets = {\n    hasAppMarkers: false\n  };\n  var offset = PNG_ID.length;\n\n  while (offset + PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE <= dataView.byteLength) {\n    if (_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].USE_PNG_FILE && isPngImageHeaderChunk(dataView, offset)) {\n      offsets.hasAppMarkers = true;\n      offsets.pngHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n    } else if (_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].USE_XMP && isPngXmpChunk(dataView, offset)) {\n      var dataOffset = getPngXmpDataOffset(dataView, offset);\n\n      if (dataOffset !== undefined) {\n        offsets.hasAppMarkers = true;\n        offsets.xmpChunks = [{\n          dataOffset: dataOffset,\n          length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET) - (dataOffset - (offset + PNG_CHUNK_DATA_OFFSET))\n        }];\n      }\n    }\n\n    offset += dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET) + PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE + PNG_CRC_SIZE;\n  }\n\n  return offsets;\n}\n\nfunction isPngImageHeaderChunk(dataView, offset) {\n  var PNG_CHUNK_TYPE_IMAGE_HEADER = 'IHDR';\n  return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_IMAGE_HEADER;\n}\n\nfunction isPngXmpChunk(dataView, offset) {\n  var PNG_CHUNK_TYPE_INTERNATIONAL_TEXT = 'iTXt';\n  return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_INTERNATIONAL_TEXT && (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, offset + PNG_CHUNK_DATA_OFFSET, PNG_XMP_PREFIX.length) === PNG_XMP_PREFIX;\n}\n\nfunction getPngXmpDataOffset(dataView, offset) {\n  var COMPRESSION_FLAG_SIZE = 1;\n  var COMPRESSION_METHOD_SIZE = 1;\n  offset += PNG_CHUNK_DATA_OFFSET + PNG_XMP_PREFIX.length + COMPRESSION_FLAG_SIZE + COMPRESSION_METHOD_SIZE;\n  var numberOfNullSeparators = 0;\n\n  while (numberOfNullSeparators < 2 && offset < dataView.byteLength) {\n    if (dataView.getUint8(offset) === 0x00) {\n      numberOfNullSeparators++;\n    }\n\n    offset++;\n  }\n\n  if (numberOfNullSeparators < 2) {\n    return undefined;\n  }\n\n  return offset;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvaW1hZ2UtaGVhZGVyLXBuZy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7O0FBSUE7QUFDQTtBQUVBLGlFQUFlO0FBQ1hFLEVBQUFBLFNBQVMsRUFBVEEsU0FEVztBQUVYQyxFQUFBQSxjQUFjLEVBQWRBO0FBRlcsQ0FBZjtBQUtBLElBQU1DLE1BQU0sR0FBRyxrQ0FBZjtBQUNBLElBQU1DLHFCQUFxQixHQUFHLENBQTlCO0FBQ0EsSUFBTUMsbUJBQW1CLEdBQUcsQ0FBNUI7QUFDQSxJQUFNQyx1QkFBdUIsR0FBRyxDQUFoQztBQUNBLElBQU1DLHFCQUFxQixHQUFHSCxxQkFBOUI7QUFDQSxJQUFNSSxxQkFBcUIsR0FBR0oscUJBQXFCLEdBQUdDLG1CQUF0RDtBQUNBLElBQU1JLGNBQWMsR0FBRyx1QkFBdkI7O0FBRUEsU0FBU1IsU0FBVCxDQUFtQlMsUUFBbkIsRUFBNkI7QUFDekIsU0FBTyxDQUFDLENBQUNBLFFBQUYsSUFBY1gsZ0VBQXFCLENBQUNXLFFBQUQsRUFBVyxDQUFYLEVBQWNQLE1BQU0sQ0FBQ1EsTUFBckIsQ0FBckIsS0FBc0RSLE1BQTNFO0FBQ0g7O0FBRUQsU0FBU0QsY0FBVCxDQUF3QlEsUUFBeEIsRUFBa0M7QUFDOUIsTUFBTUUsWUFBWSxHQUFHLENBQXJCO0FBRUEsTUFBTUMsT0FBTyxHQUFHO0FBQ1pDLElBQUFBLGFBQWEsRUFBRTtBQURILEdBQWhCO0FBSUEsTUFBSUMsTUFBTSxHQUFHWixNQUFNLENBQUNRLE1BQXBCOztBQUVBLFNBQU9JLE1BQU0sR0FBR1gscUJBQVQsR0FBaUNDLG1CQUFqQyxJQUF3REssUUFBUSxDQUFDTSxVQUF4RSxFQUFvRjtBQUNoRixRQUFJaEIsa0VBQUEsSUFBMEJrQixxQkFBcUIsQ0FBQ1IsUUFBRCxFQUFXSyxNQUFYLENBQW5ELEVBQXVFO0FBQ25FRixNQUFBQSxPQUFPLENBQUNDLGFBQVIsR0FBd0IsSUFBeEI7QUFDQUQsTUFBQUEsT0FBTyxDQUFDTSxlQUFSLEdBQTBCSixNQUFNLEdBQUdQLHFCQUFuQztBQUNILEtBSEQsTUFHTyxJQUFJUiw2REFBQSxJQUFxQnFCLGFBQWEsQ0FBQ1gsUUFBRCxFQUFXSyxNQUFYLENBQXRDLEVBQTBEO0FBQzdELFVBQU1PLFVBQVUsR0FBR0MsbUJBQW1CLENBQUNiLFFBQUQsRUFBV0ssTUFBWCxDQUF0Qzs7QUFDQSxVQUFJTyxVQUFVLEtBQUtFLFNBQW5CLEVBQThCO0FBQzFCWCxRQUFBQSxPQUFPLENBQUNDLGFBQVIsR0FBd0IsSUFBeEI7QUFDQUQsUUFBQUEsT0FBTyxDQUFDWSxTQUFSLEdBQW9CLENBQUM7QUFDakJILFVBQUFBLFVBQVUsRUFBVkEsVUFEaUI7QUFFakJYLFVBQUFBLE1BQU0sRUFBRUQsUUFBUSxDQUFDZ0IsU0FBVCxDQUFtQlgsTUFBTSxHQUFHVCx1QkFBNUIsS0FBd0RnQixVQUFVLElBQUlQLE1BQU0sR0FBR1AscUJBQWIsQ0FBbEU7QUFGUyxTQUFELENBQXBCO0FBSUg7QUFDSjs7QUFFRE8sSUFBQUEsTUFBTSxJQUFJTCxRQUFRLENBQUNnQixTQUFULENBQW1CWCxNQUFNLEdBQUdULHVCQUE1QixJQUNKRixxQkFESSxHQUVKQyxtQkFGSSxHQUdKTyxZQUhOO0FBSUg7O0FBRUQsU0FBT0MsT0FBUDtBQUNIOztBQUVELFNBQVNLLHFCQUFULENBQStCUixRQUEvQixFQUF5Q0ssTUFBekMsRUFBaUQ7QUFDN0MsTUFBTVksMkJBQTJCLEdBQUcsTUFBcEM7QUFDQSxTQUFPNUIsZ0VBQXFCLENBQUNXLFFBQUQsRUFBV0ssTUFBTSxHQUFHUixxQkFBcEIsRUFBMkNGLG1CQUEzQyxDQUFyQixLQUF5RnNCLDJCQUFoRztBQUNIOztBQUVELFNBQVNOLGFBQVQsQ0FBdUJYLFFBQXZCLEVBQWlDSyxNQUFqQyxFQUF5QztBQUNyQyxNQUFNYSxpQ0FBaUMsR0FBRyxNQUExQztBQUNBLFNBQVE3QixnRUFBcUIsQ0FBQ1csUUFBRCxFQUFXSyxNQUFNLEdBQUdSLHFCQUFwQixFQUEyQ0YsbUJBQTNDLENBQXJCLEtBQXlGdUIsaUNBQTFGLElBQ0M3QixnRUFBcUIsQ0FBQ1csUUFBRCxFQUFXSyxNQUFNLEdBQUdQLHFCQUFwQixFQUEyQ0MsY0FBYyxDQUFDRSxNQUExRCxDQUFyQixLQUEyRkYsY0FEbkc7QUFFSDs7QUFFRCxTQUFTYyxtQkFBVCxDQUE2QmIsUUFBN0IsRUFBdUNLLE1BQXZDLEVBQStDO0FBQzNDLE1BQU1jLHFCQUFxQixHQUFHLENBQTlCO0FBQ0EsTUFBTUMsdUJBQXVCLEdBQUcsQ0FBaEM7QUFFQWYsRUFBQUEsTUFBTSxJQUFJUCxxQkFBcUIsR0FBR0MsY0FBYyxDQUFDRSxNQUF2QyxHQUFnRGtCLHFCQUFoRCxHQUF3RUMsdUJBQWxGO0FBRUEsTUFBSUMsc0JBQXNCLEdBQUcsQ0FBN0I7O0FBQ0EsU0FBT0Esc0JBQXNCLEdBQUcsQ0FBekIsSUFBOEJoQixNQUFNLEdBQUdMLFFBQVEsQ0FBQ00sVUFBdkQsRUFBbUU7QUFDL0QsUUFBSU4sUUFBUSxDQUFDc0IsUUFBVCxDQUFrQmpCLE1BQWxCLE1BQThCLElBQWxDLEVBQXdDO0FBQ3BDZ0IsTUFBQUEsc0JBQXNCO0FBQ3pCOztBQUNEaEIsSUFBQUEsTUFBTTtBQUNUOztBQUNELE1BQUlnQixzQkFBc0IsR0FBRyxDQUE3QixFQUFnQztBQUM1QixXQUFPUCxTQUFQO0FBQ0g7O0FBQ0QsU0FBT1QsTUFBUDtBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQnJvd3NlckltYWdlUmVzaXplci8uL25vZGVfbW9kdWxlcy9leGlmcmVhZGVyL3NyYy9pbWFnZS1oZWFkZXItcG5nLmpzPzI0NzAiXSwic291cmNlc0NvbnRlbnQiOlsiLyogVGhpcyBTb3VyY2UgQ29kZSBGb3JtIGlzIHN1YmplY3QgdG8gdGhlIHRlcm1zIG9mIHRoZSBNb3ppbGxhIFB1YmxpY1xuICogTGljZW5zZSwgdi4gMi4wLiBJZiBhIGNvcHkgb2YgdGhlIE1QTCB3YXMgbm90IGRpc3RyaWJ1dGVkIHdpdGggdGhpc1xuICogZmlsZSwgWW91IGNhbiBvYnRhaW4gb25lIGF0IGh0dHBzOi8vbW96aWxsYS5vcmcvTVBMLzIuMC8uICovXG5cbmltcG9ydCB7Z2V0U3RyaW5nRnJvbURhdGFWaWV3fSBmcm9tICcuL3V0aWxzLmpzJztcbmltcG9ydCBDb25zdGFudHMgZnJvbSAnLi9jb25zdGFudHMuanMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgaXNQbmdGaWxlLFxuICAgIGZpbmRQbmdPZmZzZXRzXG59O1xuXG5jb25zdCBQTkdfSUQgPSAnXFx4ODlcXHg1MFxceDRlXFx4NDdcXHgwZFxceDBhXFx4MWFcXHgwYSc7XG5jb25zdCBQTkdfQ0hVTktfTEVOR1RIX1NJWkUgPSA0O1xuY29uc3QgUE5HX0NIVU5LX1RZUEVfU0laRSA9IDQ7XG5jb25zdCBQTkdfQ0hVTktfTEVOR1RIX09GRlNFVCA9IDA7XG5jb25zdCBQTkdfQ0hVTktfVFlQRV9PRkZTRVQgPSBQTkdfQ0hVTktfTEVOR1RIX1NJWkU7XG5jb25zdCBQTkdfQ0hVTktfREFUQV9PRkZTRVQgPSBQTkdfQ0hVTktfTEVOR1RIX1NJWkUgKyBQTkdfQ0hVTktfVFlQRV9TSVpFO1xuY29uc3QgUE5HX1hNUF9QUkVGSVggPSAnWE1MOmNvbS5hZG9iZS54bXBcXHgwMCc7XG5cbmZ1bmN0aW9uIGlzUG5nRmlsZShkYXRhVmlldykge1xuICAgIHJldHVybiAhIWRhdGFWaWV3ICYmIGdldFN0cmluZ0Zyb21EYXRhVmlldyhkYXRhVmlldywgMCwgUE5HX0lELmxlbmd0aCkgPT09IFBOR19JRDtcbn1cblxuZnVuY3Rpb24gZmluZFBuZ09mZnNldHMoZGF0YVZpZXcpIHtcbiAgICBjb25zdCBQTkdfQ1JDX1NJWkUgPSA0O1xuXG4gICAgY29uc3Qgb2Zmc2V0cyA9IHtcbiAgICAgICAgaGFzQXBwTWFya2VyczogZmFsc2VcbiAgICB9O1xuXG4gICAgbGV0IG9mZnNldCA9IFBOR19JRC5sZW5ndGg7XG5cbiAgICB3aGlsZSAob2Zmc2V0ICsgUE5HX0NIVU5LX0xFTkdUSF9TSVpFICsgUE5HX0NIVU5LX1RZUEVfU0laRSA8PSBkYXRhVmlldy5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIGlmIChDb25zdGFudHMuVVNFX1BOR19GSUxFICYmIGlzUG5nSW1hZ2VIZWFkZXJDaHVuayhkYXRhVmlldywgb2Zmc2V0KSkge1xuICAgICAgICAgICAgb2Zmc2V0cy5oYXNBcHBNYXJrZXJzID0gdHJ1ZTtcbiAgICAgICAgICAgIG9mZnNldHMucG5nSGVhZGVyT2Zmc2V0ID0gb2Zmc2V0ICsgUE5HX0NIVU5LX0RBVEFfT0ZGU0VUO1xuICAgICAgICB9IGVsc2UgaWYgKENvbnN0YW50cy5VU0VfWE1QICYmIGlzUG5nWG1wQ2h1bmsoZGF0YVZpZXcsIG9mZnNldCkpIHtcbiAgICAgICAgICAgIGNvbnN0IGRhdGFPZmZzZXQgPSBnZXRQbmdYbXBEYXRhT2Zmc2V0KGRhdGFWaWV3LCBvZmZzZXQpO1xuICAgICAgICAgICAgaWYgKGRhdGFPZmZzZXQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIG9mZnNldHMuaGFzQXBwTWFya2VycyA9IHRydWU7XG4gICAgICAgICAgICAgICAgb2Zmc2V0cy54bXBDaHVua3MgPSBbe1xuICAgICAgICAgICAgICAgICAgICBkYXRhT2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IGRhdGFWaWV3LmdldFVpbnQzMihvZmZzZXQgKyBQTkdfQ0hVTktfTEVOR1RIX09GRlNFVCkgLSAoZGF0YU9mZnNldCAtIChvZmZzZXQgKyBQTkdfQ0hVTktfREFUQV9PRkZTRVQpKVxuICAgICAgICAgICAgICAgIH1dO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgb2Zmc2V0ICs9IGRhdGFWaWV3LmdldFVpbnQzMihvZmZzZXQgKyBQTkdfQ0hVTktfTEVOR1RIX09GRlNFVClcbiAgICAgICAgICAgICsgUE5HX0NIVU5LX0xFTkdUSF9TSVpFXG4gICAgICAgICAgICArIFBOR19DSFVOS19UWVBFX1NJWkVcbiAgICAgICAgICAgICsgUE5HX0NSQ19TSVpFO1xuICAgIH1cblxuICAgIHJldHVybiBvZmZzZXRzO1xufVxuXG5mdW5jdGlvbiBpc1BuZ0ltYWdlSGVhZGVyQ2h1bmsoZGF0YVZpZXcsIG9mZnNldCkge1xuICAgIGNvbnN0IFBOR19DSFVOS19UWVBFX0lNQUdFX0hFQURFUiA9ICdJSERSJztcbiAgICByZXR1cm4gZ2V0U3RyaW5nRnJvbURhdGFWaWV3KGRhdGFWaWV3LCBvZmZzZXQgKyBQTkdfQ0hVTktfVFlQRV9PRkZTRVQsIFBOR19DSFVOS19UWVBFX1NJWkUpID09PSBQTkdfQ0hVTktfVFlQRV9JTUFHRV9IRUFERVI7XG59XG5cbmZ1bmN0aW9uIGlzUG5nWG1wQ2h1bmsoZGF0YVZpZXcsIG9mZnNldCkge1xuICAgIGNvbnN0IFBOR19DSFVOS19UWVBFX0lOVEVSTkFUSU9OQUxfVEVYVCA9ICdpVFh0JztcbiAgICByZXR1cm4gKGdldFN0cmluZ0Zyb21EYXRhVmlldyhkYXRhVmlldywgb2Zmc2V0ICsgUE5HX0NIVU5LX1RZUEVfT0ZGU0VULCBQTkdfQ0hVTktfVFlQRV9TSVpFKSA9PT0gUE5HX0NIVU5LX1RZUEVfSU5URVJOQVRJT05BTF9URVhUKVxuICAgICAgICAmJiAoZ2V0U3RyaW5nRnJvbURhdGFWaWV3KGRhdGFWaWV3LCBvZmZzZXQgKyBQTkdfQ0hVTktfREFUQV9PRkZTRVQsIFBOR19YTVBfUFJFRklYLmxlbmd0aCkgPT09IFBOR19YTVBfUFJFRklYKTtcbn1cblxuZnVuY3Rpb24gZ2V0UG5nWG1wRGF0YU9mZnNldChkYXRhVmlldywgb2Zmc2V0KSB7XG4gICAgY29uc3QgQ09NUFJFU1NJT05fRkxBR19TSVpFID0gMTtcbiAgICBjb25zdCBDT01QUkVTU0lPTl9NRVRIT0RfU0laRSA9IDE7XG5cbiAgICBvZmZzZXQgKz0gUE5HX0NIVU5LX0RBVEFfT0ZGU0VUICsgUE5HX1hNUF9QUkVGSVgubGVuZ3RoICsgQ09NUFJFU1NJT05fRkxBR19TSVpFICsgQ09NUFJFU1NJT05fTUVUSE9EX1NJWkU7XG5cbiAgICBsZXQgbnVtYmVyT2ZOdWxsU2VwYXJhdG9ycyA9IDA7XG4gICAgd2hpbGUgKG51bWJlck9mTnVsbFNlcGFyYXRvcnMgPCAyICYmIG9mZnNldCA8IGRhdGFWaWV3LmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgaWYgKGRhdGFWaWV3LmdldFVpbnQ4KG9mZnNldCkgPT09IDB4MDApIHtcbiAgICAgICAgICAgIG51bWJlck9mTnVsbFNlcGFyYXRvcnMrKztcbiAgICAgICAgfVxuICAgICAgICBvZmZzZXQrKztcbiAgICB9XG4gICAgaWYgKG51bWJlck9mTnVsbFNlcGFyYXRvcnMgPCAyKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiBvZmZzZXQ7XG59XG4iXSwibmFtZXMiOlsiZ2V0U3RyaW5nRnJvbURhdGFWaWV3IiwiQ29uc3RhbnRzIiwiaXNQbmdGaWxlIiwiZmluZFBuZ09mZnNldHMiLCJQTkdfSUQiLCJQTkdfQ0hVTktfTEVOR1RIX1NJWkUiLCJQTkdfQ0hVTktfVFlQRV9TSVpFIiwiUE5HX0NIVU5LX0xFTkdUSF9PRkZTRVQiLCJQTkdfQ0hVTktfVFlQRV9PRkZTRVQiLCJQTkdfQ0hVTktfREFUQV9PRkZTRVQiLCJQTkdfWE1QX1BSRUZJWCIsImRhdGFWaWV3IiwibGVuZ3RoIiwiUE5HX0NSQ19TSVpFIiwib2Zmc2V0cyIsImhhc0FwcE1hcmtlcnMiLCJvZmZzZXQiLCJieXRlTGVuZ3RoIiwiVVNFX1BOR19GSUxFIiwiaXNQbmdJbWFnZUhlYWRlckNodW5rIiwicG5nSGVhZGVyT2Zmc2V0IiwiVVNFX1hNUCIsImlzUG5nWG1wQ2h1bmsiLCJkYXRhT2Zmc2V0IiwiZ2V0UG5nWG1wRGF0YU9mZnNldCIsInVuZGVmaW5lZCIsInhtcENodW5rcyIsImdldFVpbnQzMiIsIlBOR19DSFVOS19UWVBFX0lNQUdFX0hFQURFUiIsIlBOR19DSFVOS19UWVBFX0lOVEVSTkFUSU9OQUxfVEVYVCIsIkNPTVBSRVNTSU9OX0ZMQUdfU0laRSIsIkNPTVBSRVNTSU9OX01FVEhPRF9TSVpFIiwibnVtYmVyT2ZOdWxsU2VwYXJhdG9ycyIsImdldFVpbnQ4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/image-header-png.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/image-header-tiff.js":
/*!**********************************************************!*\
  !*** ./node_modules/exifreader/src/image-header-tiff.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _byte_order_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./byte-order.js */ \"./node_modules/exifreader/src/byte-order.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/exifreader/src/constants.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  isTiffFile: isTiffFile,\n  findTiffOffsets: findTiffOffsets\n});\n\nfunction isTiffFile(dataView) {\n  var MIN_TIFF_DATA_BUFFER_LENGTH = 4;\n  return !!dataView && dataView.byteLength >= MIN_TIFF_DATA_BUFFER_LENGTH && hasTiffMarker(dataView);\n}\n\nfunction hasTiffMarker(dataView) {\n  var TIFF_ID = 0x2a;\n  var TIFF_ID_OFFSET = 2;\n  var littleEndian = dataView.getUint16(0) === _byte_order_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].LITTLE_ENDIAN;\n  return dataView.getUint16(TIFF_ID_OFFSET, littleEndian) === TIFF_ID;\n}\n\nfunction findTiffOffsets() {\n  var TIFF_FILE_HEADER_OFFSET = 0;\n\n  if (_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].USE_EXIF) {\n    return {\n      hasAppMarkers: true,\n      tiffHeaderOffset: TIFF_FILE_HEADER_OFFSET\n    };\n  }\n\n  return {};\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvaW1hZ2UtaGVhZGVyLXRpZmYuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7OztBQUlBO0FBQ0E7QUFFQSxpRUFBZTtBQUNYRSxFQUFBQSxVQUFVLEVBQVZBLFVBRFc7QUFFWEMsRUFBQUEsZUFBZSxFQUFmQTtBQUZXLENBQWY7O0FBS0EsU0FBU0QsVUFBVCxDQUFvQkUsUUFBcEIsRUFBOEI7QUFDMUIsTUFBTUMsMkJBQTJCLEdBQUcsQ0FBcEM7QUFFQSxTQUFPLENBQUMsQ0FBQ0QsUUFBRixJQUFlQSxRQUFRLENBQUNFLFVBQVQsSUFBdUJELDJCQUF0QyxJQUFzRUUsYUFBYSxDQUFDSCxRQUFELENBQTFGO0FBQ0g7O0FBRUQsU0FBU0csYUFBVCxDQUF1QkgsUUFBdkIsRUFBaUM7QUFDN0IsTUFBTUksT0FBTyxHQUFHLElBQWhCO0FBQ0EsTUFBTUMsY0FBYyxHQUFHLENBQXZCO0FBRUEsTUFBTUMsWUFBWSxHQUFHTixRQUFRLENBQUNPLFNBQVQsQ0FBbUIsQ0FBbkIsTUFBMEJYLG9FQUEvQztBQUNBLFNBQU9JLFFBQVEsQ0FBQ08sU0FBVCxDQUFtQkYsY0FBbkIsRUFBbUNDLFlBQW5DLE1BQXFERixPQUE1RDtBQUNIOztBQUVELFNBQVNMLGVBQVQsR0FBMkI7QUFDdkIsTUFBTVUsdUJBQXVCLEdBQUcsQ0FBaEM7O0FBRUEsTUFBSVosOERBQUosRUFBd0I7QUFDcEIsV0FBTztBQUNIYyxNQUFBQSxhQUFhLEVBQUUsSUFEWjtBQUVIQyxNQUFBQSxnQkFBZ0IsRUFBRUg7QUFGZixLQUFQO0FBSUg7O0FBQ0QsU0FBTyxFQUFQO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ccm93c2VySW1hZ2VSZXNpemVyLy4vbm9kZV9tb2R1bGVzL2V4aWZyZWFkZXIvc3JjL2ltYWdlLWhlYWRlci10aWZmLmpzPzk0NTEiXSwic291cmNlc0NvbnRlbnQiOlsiLyogVGhpcyBTb3VyY2UgQ29kZSBGb3JtIGlzIHN1YmplY3QgdG8gdGhlIHRlcm1zIG9mIHRoZSBNb3ppbGxhIFB1YmxpY1xuICogTGljZW5zZSwgdi4gMi4wLiBJZiBhIGNvcHkgb2YgdGhlIE1QTCB3YXMgbm90IGRpc3RyaWJ1dGVkIHdpdGggdGhpc1xuICogZmlsZSwgWW91IGNhbiBvYnRhaW4gb25lIGF0IGh0dHBzOi8vbW96aWxsYS5vcmcvTVBMLzIuMC8uICovXG5cbmltcG9ydCBCeXRlT3JkZXIgZnJvbSAnLi9ieXRlLW9yZGVyLmpzJztcbmltcG9ydCBDb25zdGFudHMgZnJvbSAnLi9jb25zdGFudHMuanMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgaXNUaWZmRmlsZSxcbiAgICBmaW5kVGlmZk9mZnNldHNcbn07XG5cbmZ1bmN0aW9uIGlzVGlmZkZpbGUoZGF0YVZpZXcpIHtcbiAgICBjb25zdCBNSU5fVElGRl9EQVRBX0JVRkZFUl9MRU5HVEggPSA0O1xuXG4gICAgcmV0dXJuICEhZGF0YVZpZXcgJiYgKGRhdGFWaWV3LmJ5dGVMZW5ndGggPj0gTUlOX1RJRkZfREFUQV9CVUZGRVJfTEVOR1RIKSAmJiBoYXNUaWZmTWFya2VyKGRhdGFWaWV3KTtcbn1cblxuZnVuY3Rpb24gaGFzVGlmZk1hcmtlcihkYXRhVmlldykge1xuICAgIGNvbnN0IFRJRkZfSUQgPSAweDJhO1xuICAgIGNvbnN0IFRJRkZfSURfT0ZGU0VUID0gMjtcblxuICAgIGNvbnN0IGxpdHRsZUVuZGlhbiA9IGRhdGFWaWV3LmdldFVpbnQxNigwKSA9PT0gQnl0ZU9yZGVyLkxJVFRMRV9FTkRJQU47XG4gICAgcmV0dXJuIGRhdGFWaWV3LmdldFVpbnQxNihUSUZGX0lEX09GRlNFVCwgbGl0dGxlRW5kaWFuKSA9PT0gVElGRl9JRDtcbn1cblxuZnVuY3Rpb24gZmluZFRpZmZPZmZzZXRzKCkge1xuICAgIGNvbnN0IFRJRkZfRklMRV9IRUFERVJfT0ZGU0VUID0gMDtcblxuICAgIGlmIChDb25zdGFudHMuVVNFX0VYSUYpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGhhc0FwcE1hcmtlcnM6IHRydWUsXG4gICAgICAgICAgICB0aWZmSGVhZGVyT2Zmc2V0OiBUSUZGX0ZJTEVfSEVBREVSX09GRlNFVFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge307XG59XG4iXSwibmFtZXMiOlsiQnl0ZU9yZGVyIiwiQ29uc3RhbnRzIiwiaXNUaWZmRmlsZSIsImZpbmRUaWZmT2Zmc2V0cyIsImRhdGFWaWV3IiwiTUlOX1RJRkZfREFUQV9CVUZGRVJfTEVOR1RIIiwiYnl0ZUxlbmd0aCIsImhhc1RpZmZNYXJrZXIiLCJUSUZGX0lEIiwiVElGRl9JRF9PRkZTRVQiLCJsaXR0bGVFbmRpYW4iLCJnZXRVaW50MTYiLCJMSVRUTEVfRU5ESUFOIiwiVElGRl9GSUxFX0hFQURFUl9PRkZTRVQiLCJVU0VfRVhJRiIsImhhc0FwcE1hcmtlcnMiLCJ0aWZmSGVhZGVyT2Zmc2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/image-header-tiff.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/image-header-webp.js":
/*!**********************************************************!*\
  !*** ./node_modules/exifreader/src/image-header-webp.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/exifreader/src/utils.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/exifreader/src/constants.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  isWebpFile: isWebpFile,\n  findOffsets: findOffsets\n});\n\nfunction isWebpFile(dataView) {\n  var RIFF_ID_OFFSET = 0;\n  var RIFF_ID = 'RIFF';\n  var WEBP_MARKER_OFFSET = 8;\n  var WEBP_MARKER = 'WEBP';\n  return !!dataView && (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, RIFF_ID_OFFSET, RIFF_ID.length) === RIFF_ID && (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, WEBP_MARKER_OFFSET, WEBP_MARKER.length) === WEBP_MARKER;\n}\n\nfunction findOffsets(dataView) {\n  var SUB_CHUNK_START_OFFSET = 12;\n  var CHUNK_SIZE_OFFSET = 4;\n  var EXIF_IDENTIFIER = 'Exif\\x00\\x00';\n  var CHUNK_HEADER_SIZE = 8;\n  var offset = SUB_CHUNK_START_OFFSET;\n  var hasAppMarkers = false;\n  var tiffHeaderOffset;\n  var xmpChunks;\n  var iccChunks;\n\n  while (offset + CHUNK_HEADER_SIZE < dataView.byteLength) {\n    var chunkId = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, offset, 4);\n    var chunkSize = dataView.getUint32(offset + CHUNK_SIZE_OFFSET, true);\n\n    if (_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].USE_EXIF && chunkId === 'EXIF') {\n      hasAppMarkers = true;\n\n      if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(dataView, offset + CHUNK_HEADER_SIZE, EXIF_IDENTIFIER.length) === EXIF_IDENTIFIER) {\n        tiffHeaderOffset = offset + CHUNK_HEADER_SIZE + EXIF_IDENTIFIER.length;\n      } else {\n        tiffHeaderOffset = offset + CHUNK_HEADER_SIZE;\n      }\n    } else if (_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].USE_XMP && chunkId === 'XMP ') {\n      hasAppMarkers = true;\n      xmpChunks = [{\n        dataOffset: offset + CHUNK_HEADER_SIZE,\n        length: chunkSize\n      }];\n    } else if (_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].USE_ICC && chunkId === 'ICCP') {\n      hasAppMarkers = true;\n      iccChunks = [{\n        offset: offset + CHUNK_HEADER_SIZE,\n        length: chunkSize,\n        chunkNumber: 1,\n        chunksTotal: 1\n      }];\n    }\n\n    offset += CHUNK_HEADER_SIZE + (chunkSize % 2 === 0 ? chunkSize : chunkSize + 1);\n  }\n\n  return {\n    hasAppMarkers: hasAppMarkers,\n    tiffHeaderOffset: tiffHeaderOffset,\n    xmpChunks: xmpChunks,\n    iccChunks: iccChunks\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvaW1hZ2UtaGVhZGVyLXdlYnAuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7OztBQUlBO0FBQ0E7QUFFQSxpRUFBZTtBQUNYRSxFQUFBQSxVQUFVLEVBQVZBLFVBRFc7QUFFWEMsRUFBQUEsV0FBVyxFQUFYQTtBQUZXLENBQWY7O0FBS0EsU0FBU0QsVUFBVCxDQUFvQkUsUUFBcEIsRUFBOEI7QUFDMUIsTUFBTUMsY0FBYyxHQUFHLENBQXZCO0FBQ0EsTUFBTUMsT0FBTyxHQUFHLE1BQWhCO0FBQ0EsTUFBTUMsa0JBQWtCLEdBQUcsQ0FBM0I7QUFDQSxNQUFNQyxXQUFXLEdBQUcsTUFBcEI7QUFFQSxTQUFPLENBQUMsQ0FBQ0osUUFBRixJQUFjSixnRUFBcUIsQ0FBQ0ksUUFBRCxFQUFXQyxjQUFYLEVBQTJCQyxPQUFPLENBQUNHLE1BQW5DLENBQXJCLEtBQW9FSCxPQUFsRixJQUNBTixnRUFBcUIsQ0FBQ0ksUUFBRCxFQUFXRyxrQkFBWCxFQUErQkMsV0FBVyxDQUFDQyxNQUEzQyxDQUFyQixLQUE0RUQsV0FEbkY7QUFFSDs7QUFFRCxTQUFTTCxXQUFULENBQXFCQyxRQUFyQixFQUErQjtBQUMzQixNQUFNTSxzQkFBc0IsR0FBRyxFQUEvQjtBQUNBLE1BQU1DLGlCQUFpQixHQUFHLENBQTFCO0FBQ0EsTUFBTUMsZUFBZSxHQUFHLGNBQXhCO0FBQ0EsTUFBTUMsaUJBQWlCLEdBQUcsQ0FBMUI7QUFFQSxNQUFJQyxNQUFNLEdBQUdKLHNCQUFiO0FBQ0EsTUFBSUssYUFBYSxHQUFHLEtBQXBCO0FBQ0EsTUFBSUMsZ0JBQUo7QUFDQSxNQUFJQyxTQUFKO0FBQ0EsTUFBSUMsU0FBSjs7QUFFQSxTQUFPSixNQUFNLEdBQUdELGlCQUFULEdBQTZCVCxRQUFRLENBQUNlLFVBQTdDLEVBQXlEO0FBQ3JELFFBQU1DLE9BQU8sR0FBR3BCLGdFQUFxQixDQUFDSSxRQUFELEVBQVdVLE1BQVgsRUFBbUIsQ0FBbkIsQ0FBckM7QUFDQSxRQUFNTyxTQUFTLEdBQUdqQixRQUFRLENBQUNrQixTQUFULENBQW1CUixNQUFNLEdBQUdILGlCQUE1QixFQUErQyxJQUEvQyxDQUFsQjs7QUFFQSxRQUFJViw4REFBQSxJQUF1Qm1CLE9BQU8sS0FBSyxNQUF2QyxFQUFnRDtBQUM1Q0wsTUFBQUEsYUFBYSxHQUFHLElBQWhCOztBQUNBLFVBQUlmLGdFQUFxQixDQUFDSSxRQUFELEVBQVdVLE1BQU0sR0FBR0QsaUJBQXBCLEVBQXVDRCxlQUFlLENBQUNILE1BQXZELENBQXJCLEtBQXdGRyxlQUE1RixFQUE2RztBQUN6R0ksUUFBQUEsZ0JBQWdCLEdBQUdGLE1BQU0sR0FBR0QsaUJBQVQsR0FBNkJELGVBQWUsQ0FBQ0gsTUFBaEU7QUFDSCxPQUZELE1BRU87QUFDSE8sUUFBQUEsZ0JBQWdCLEdBQUdGLE1BQU0sR0FBR0QsaUJBQTVCO0FBQ0g7QUFDSixLQVBELE1BT08sSUFBSVosNkRBQUEsSUFBc0JtQixPQUFPLEtBQUssTUFBdEMsRUFBK0M7QUFDbERMLE1BQUFBLGFBQWEsR0FBRyxJQUFoQjtBQUNBRSxNQUFBQSxTQUFTLEdBQUcsQ0FBQztBQUNUUSxRQUFBQSxVQUFVLEVBQUVYLE1BQU0sR0FBR0QsaUJBRFo7QUFFVEosUUFBQUEsTUFBTSxFQUFFWTtBQUZDLE9BQUQsQ0FBWjtBQUlILEtBTk0sTUFNQSxJQUFJcEIsNkRBQUEsSUFBc0JtQixPQUFPLEtBQUssTUFBdEMsRUFBK0M7QUFDbERMLE1BQUFBLGFBQWEsR0FBRyxJQUFoQjtBQUNBRyxNQUFBQSxTQUFTLEdBQUcsQ0FBQztBQUNUSixRQUFBQSxNQUFNLEVBQUVBLE1BQU0sR0FBR0QsaUJBRFI7QUFFVEosUUFBQUEsTUFBTSxFQUFFWSxTQUZDO0FBR1RNLFFBQUFBLFdBQVcsRUFBRSxDQUhKO0FBSVRDLFFBQUFBLFdBQVcsRUFBRTtBQUpKLE9BQUQsQ0FBWjtBQU1IOztBQUVEZCxJQUFBQSxNQUFNLElBQUlELGlCQUFpQixJQUFJUSxTQUFTLEdBQUcsQ0FBWixLQUFrQixDQUFsQixHQUFzQkEsU0FBdEIsR0FBa0NBLFNBQVMsR0FBRyxDQUFsRCxDQUEzQjtBQUNIOztBQUVELFNBQU87QUFDSE4sSUFBQUEsYUFBYSxFQUFiQSxhQURHO0FBRUhDLElBQUFBLGdCQUFnQixFQUFoQkEsZ0JBRkc7QUFHSEMsSUFBQUEsU0FBUyxFQUFUQSxTQUhHO0FBSUhDLElBQUFBLFNBQVMsRUFBVEE7QUFKRyxHQUFQO0FBTUgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ccm93c2VySW1hZ2VSZXNpemVyLy4vbm9kZV9tb2R1bGVzL2V4aWZyZWFkZXIvc3JjL2ltYWdlLWhlYWRlci13ZWJwLmpzP2FlMzgiXSwic291cmNlc0NvbnRlbnQiOlsiLyogVGhpcyBTb3VyY2UgQ29kZSBGb3JtIGlzIHN1YmplY3QgdG8gdGhlIHRlcm1zIG9mIHRoZSBNb3ppbGxhIFB1YmxpY1xuICogTGljZW5zZSwgdi4gMi4wLiBJZiBhIGNvcHkgb2YgdGhlIE1QTCB3YXMgbm90IGRpc3RyaWJ1dGVkIHdpdGggdGhpc1xuICogZmlsZSwgWW91IGNhbiBvYnRhaW4gb25lIGF0IGh0dHBzOi8vbW96aWxsYS5vcmcvTVBMLzIuMC8uICovXG5cbmltcG9ydCB7Z2V0U3RyaW5nRnJvbURhdGFWaWV3fSBmcm9tICcuL3V0aWxzLmpzJztcbmltcG9ydCBDb25zdGFudHMgZnJvbSAnLi9jb25zdGFudHMuanMnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgaXNXZWJwRmlsZSxcbiAgICBmaW5kT2Zmc2V0c1xufTtcblxuZnVuY3Rpb24gaXNXZWJwRmlsZShkYXRhVmlldykge1xuICAgIGNvbnN0IFJJRkZfSURfT0ZGU0VUID0gMDtcbiAgICBjb25zdCBSSUZGX0lEID0gJ1JJRkYnO1xuICAgIGNvbnN0IFdFQlBfTUFSS0VSX09GRlNFVCA9IDg7XG4gICAgY29uc3QgV0VCUF9NQVJLRVIgPSAnV0VCUCc7XG5cbiAgICByZXR1cm4gISFkYXRhVmlldyAmJiBnZXRTdHJpbmdGcm9tRGF0YVZpZXcoZGF0YVZpZXcsIFJJRkZfSURfT0ZGU0VULCBSSUZGX0lELmxlbmd0aCkgPT09IFJJRkZfSURcbiAgICAgICAgJiYgZ2V0U3RyaW5nRnJvbURhdGFWaWV3KGRhdGFWaWV3LCBXRUJQX01BUktFUl9PRkZTRVQsIFdFQlBfTUFSS0VSLmxlbmd0aCkgPT09IFdFQlBfTUFSS0VSO1xufVxuXG5mdW5jdGlvbiBmaW5kT2Zmc2V0cyhkYXRhVmlldykge1xuICAgIGNvbnN0IFNVQl9DSFVOS19TVEFSVF9PRkZTRVQgPSAxMjtcbiAgICBjb25zdCBDSFVOS19TSVpFX09GRlNFVCA9IDQ7XG4gICAgY29uc3QgRVhJRl9JREVOVElGSUVSID0gJ0V4aWZcXHgwMFxceDAwJztcbiAgICBjb25zdCBDSFVOS19IRUFERVJfU0laRSA9IDg7XG5cbiAgICBsZXQgb2Zmc2V0ID0gU1VCX0NIVU5LX1NUQVJUX09GRlNFVDtcbiAgICBsZXQgaGFzQXBwTWFya2VycyA9IGZhbHNlO1xuICAgIGxldCB0aWZmSGVhZGVyT2Zmc2V0O1xuICAgIGxldCB4bXBDaHVua3M7XG4gICAgbGV0IGljY0NodW5rcztcblxuICAgIHdoaWxlIChvZmZzZXQgKyBDSFVOS19IRUFERVJfU0laRSA8IGRhdGFWaWV3LmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgY29uc3QgY2h1bmtJZCA9IGdldFN0cmluZ0Zyb21EYXRhVmlldyhkYXRhVmlldywgb2Zmc2V0LCA0KTtcbiAgICAgICAgY29uc3QgY2h1bmtTaXplID0gZGF0YVZpZXcuZ2V0VWludDMyKG9mZnNldCArIENIVU5LX1NJWkVfT0ZGU0VULCB0cnVlKTtcblxuICAgICAgICBpZiAoQ29uc3RhbnRzLlVTRV9FWElGICYmIChjaHVua0lkID09PSAnRVhJRicpKSB7XG4gICAgICAgICAgICBoYXNBcHBNYXJrZXJzID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmIChnZXRTdHJpbmdGcm9tRGF0YVZpZXcoZGF0YVZpZXcsIG9mZnNldCArIENIVU5LX0hFQURFUl9TSVpFLCBFWElGX0lERU5USUZJRVIubGVuZ3RoKSA9PT0gRVhJRl9JREVOVElGSUVSKSB7XG4gICAgICAgICAgICAgICAgdGlmZkhlYWRlck9mZnNldCA9IG9mZnNldCArIENIVU5LX0hFQURFUl9TSVpFICsgRVhJRl9JREVOVElGSUVSLmxlbmd0aDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGlmZkhlYWRlck9mZnNldCA9IG9mZnNldCArIENIVU5LX0hFQURFUl9TSVpFO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKENvbnN0YW50cy5VU0VfWE1QICYmIChjaHVua0lkID09PSAnWE1QICcpKSB7XG4gICAgICAgICAgICBoYXNBcHBNYXJrZXJzID0gdHJ1ZTtcbiAgICAgICAgICAgIHhtcENodW5rcyA9IFt7XG4gICAgICAgICAgICAgICAgZGF0YU9mZnNldDogb2Zmc2V0ICsgQ0hVTktfSEVBREVSX1NJWkUsXG4gICAgICAgICAgICAgICAgbGVuZ3RoOiBjaHVua1NpemVcbiAgICAgICAgICAgIH1dO1xuICAgICAgICB9IGVsc2UgaWYgKENvbnN0YW50cy5VU0VfSUNDICYmIChjaHVua0lkID09PSAnSUNDUCcpKSB7XG4gICAgICAgICAgICBoYXNBcHBNYXJrZXJzID0gdHJ1ZTtcbiAgICAgICAgICAgIGljY0NodW5rcyA9IFt7XG4gICAgICAgICAgICAgICAgb2Zmc2V0OiBvZmZzZXQgKyBDSFVOS19IRUFERVJfU0laRSxcbiAgICAgICAgICAgICAgICBsZW5ndGg6IGNodW5rU2l6ZSxcbiAgICAgICAgICAgICAgICBjaHVua051bWJlcjogMSxcbiAgICAgICAgICAgICAgICBjaHVua3NUb3RhbDogMVxuICAgICAgICAgICAgfV07XG4gICAgICAgIH1cblxuICAgICAgICBvZmZzZXQgKz0gQ0hVTktfSEVBREVSX1NJWkUgKyAoY2h1bmtTaXplICUgMiA9PT0gMCA/IGNodW5rU2l6ZSA6IGNodW5rU2l6ZSArIDEpO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIGhhc0FwcE1hcmtlcnMsXG4gICAgICAgIHRpZmZIZWFkZXJPZmZzZXQsXG4gICAgICAgIHhtcENodW5rcyxcbiAgICAgICAgaWNjQ2h1bmtzXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJnZXRTdHJpbmdGcm9tRGF0YVZpZXciLCJDb25zdGFudHMiLCJpc1dlYnBGaWxlIiwiZmluZE9mZnNldHMiLCJkYXRhVmlldyIsIlJJRkZfSURfT0ZGU0VUIiwiUklGRl9JRCIsIldFQlBfTUFSS0VSX09GRlNFVCIsIldFQlBfTUFSS0VSIiwibGVuZ3RoIiwiU1VCX0NIVU5LX1NUQVJUX09GRlNFVCIsIkNIVU5LX1NJWkVfT0ZGU0VUIiwiRVhJRl9JREVOVElGSUVSIiwiQ0hVTktfSEVBREVSX1NJWkUiLCJvZmZzZXQiLCJoYXNBcHBNYXJrZXJzIiwidGlmZkhlYWRlck9mZnNldCIsInhtcENodW5rcyIsImljY0NodW5rcyIsImJ5dGVMZW5ndGgiLCJjaHVua0lkIiwiY2h1bmtTaXplIiwiZ2V0VWludDMyIiwiVVNFX0VYSUYiLCJVU0VfWE1QIiwiZGF0YU9mZnNldCIsIlVTRV9JQ0MiLCJjaHVua051bWJlciIsImNodW5rc1RvdGFsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/image-header-webp.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/image-header.js":
/*!*****************************************************!*\
  !*** ./node_modules/exifreader/src/image-header.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/exifreader/src/constants.js\");\n/* harmony import */ var _image_header_tiff_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./image-header-tiff.js */ \"./node_modules/exifreader/src/image-header-tiff.js\");\n/* harmony import */ var _image_header_jpeg_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./image-header-jpeg.js */ \"./node_modules/exifreader/src/image-header-jpeg.js\");\n/* harmony import */ var _image_header_png_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./image-header-png.js */ \"./node_modules/exifreader/src/image-header-png.js\");\n/* harmony import */ var _image_header_heic_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./image-header-heic.js */ \"./node_modules/exifreader/src/image-header-heic.js\");\n/* harmony import */ var _image_header_webp_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./image-header-webp.js */ \"./node_modules/exifreader/src/image-header-webp.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  parseAppMarkers: parseAppMarkers\n});\n\nfunction parseAppMarkers(dataView) {\n  if (_constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].USE_TIFF && _image_header_tiff_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isTiffFile(dataView)) {\n    return _image_header_tiff_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findTiffOffsets();\n  }\n\n  if (_constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].USE_JPEG && _image_header_jpeg_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isJpegFile(dataView)) {\n    return _image_header_jpeg_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findJpegOffsets(dataView);\n  }\n\n  if (_constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].USE_PNG && _image_header_png_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isPngFile(dataView)) {\n    return _image_header_png_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].findPngOffsets(dataView);\n  }\n\n  if (_constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].USE_HEIC && _image_header_heic_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isHeicFile(dataView)) {\n    return _image_header_heic_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].findHeicOffsets(dataView);\n  }\n\n  if (_constants_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].USE_WEBP && _image_header_webp_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isWebpFile(dataView)) {\n    return _image_header_webp_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].findOffsets(dataView);\n  }\n\n  throw new Error('Invalid image format');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvaW1hZ2UtaGVhZGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsaUVBQWU7QUFDWE0sRUFBQUEsZUFBZSxFQUFmQTtBQURXLENBQWY7O0FBSUEsU0FBU0EsZUFBVCxDQUF5QkMsUUFBekIsRUFBbUM7QUFDL0IsTUFBSVAsOERBQUEsSUFBc0JDLHdFQUFBLENBQWdCTSxRQUFoQixDQUExQixFQUFxRDtBQUNqRCxXQUFPTiw2RUFBQSxFQUFQO0FBQ0g7O0FBRUQsTUFBSUQsOERBQUEsSUFBc0JFLHdFQUFBLENBQWdCSyxRQUFoQixDQUExQixFQUFxRDtBQUNqRCxXQUFPTCw2RUFBQSxDQUFxQkssUUFBckIsQ0FBUDtBQUNIOztBQUVELE1BQUlQLDZEQUFBLElBQXFCRyxzRUFBQSxDQUFjSSxRQUFkLENBQXpCLEVBQWtEO0FBQzlDLFdBQU9KLDJFQUFBLENBQW1CSSxRQUFuQixDQUFQO0FBQ0g7O0FBRUQsTUFBSVAsOERBQUEsSUFBc0JJLHdFQUFBLENBQWdCRyxRQUFoQixDQUExQixFQUFxRDtBQUNqRCxXQUFPSCw2RUFBQSxDQUFxQkcsUUFBckIsQ0FBUDtBQUNIOztBQUVELE1BQUlQLDhEQUFBLElBQXNCSyx3RUFBQSxDQUFnQkUsUUFBaEIsQ0FBMUIsRUFBcUQ7QUFDakQsV0FBT0YseUVBQUEsQ0FBaUJFLFFBQWpCLENBQVA7QUFDSDs7QUFFRCxRQUFNLElBQUlnQixLQUFKLENBQVUsc0JBQVYsQ0FBTjtBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQnJvd3NlckltYWdlUmVzaXplci8uL25vZGVfbW9kdWxlcy9leGlmcmVhZGVyL3NyYy9pbWFnZS1oZWFkZXIuanM/NDhkZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBUaGlzIFNvdXJjZSBDb2RlIEZvcm0gaXMgc3ViamVjdCB0byB0aGUgdGVybXMgb2YgdGhlIE1vemlsbGEgUHVibGljXG4gKiBMaWNlbnNlLCB2LiAyLjAuIElmIGEgY29weSBvZiB0aGUgTVBMIHdhcyBub3QgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzXG4gKiBmaWxlLCBZb3UgY2FuIG9idGFpbiBvbmUgYXQgaHR0cHM6Ly9tb3ppbGxhLm9yZy9NUEwvMi4wLy4gKi9cblxuaW1wb3J0IENvbnN0YW50cyBmcm9tICcuL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgVGlmZiBmcm9tICcuL2ltYWdlLWhlYWRlci10aWZmLmpzJztcbmltcG9ydCBKcGVnIGZyb20gJy4vaW1hZ2UtaGVhZGVyLWpwZWcuanMnO1xuaW1wb3J0IFBuZyBmcm9tICcuL2ltYWdlLWhlYWRlci1wbmcuanMnO1xuaW1wb3J0IEhlaWMgZnJvbSAnLi9pbWFnZS1oZWFkZXItaGVpYy5qcyc7XG5pbXBvcnQgV2VicCBmcm9tICcuL2ltYWdlLWhlYWRlci13ZWJwLmpzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIHBhcnNlQXBwTWFya2Vyc1xufTtcblxuZnVuY3Rpb24gcGFyc2VBcHBNYXJrZXJzKGRhdGFWaWV3KSB7XG4gICAgaWYgKENvbnN0YW50cy5VU0VfVElGRiAmJiBUaWZmLmlzVGlmZkZpbGUoZGF0YVZpZXcpKSB7XG4gICAgICAgIHJldHVybiBUaWZmLmZpbmRUaWZmT2Zmc2V0cygpO1xuICAgIH1cblxuICAgIGlmIChDb25zdGFudHMuVVNFX0pQRUcgJiYgSnBlZy5pc0pwZWdGaWxlKGRhdGFWaWV3KSkge1xuICAgICAgICByZXR1cm4gSnBlZy5maW5kSnBlZ09mZnNldHMoZGF0YVZpZXcpO1xuICAgIH1cblxuICAgIGlmIChDb25zdGFudHMuVVNFX1BORyAmJiBQbmcuaXNQbmdGaWxlKGRhdGFWaWV3KSkge1xuICAgICAgICByZXR1cm4gUG5nLmZpbmRQbmdPZmZzZXRzKGRhdGFWaWV3KTtcbiAgICB9XG5cbiAgICBpZiAoQ29uc3RhbnRzLlVTRV9IRUlDICYmIEhlaWMuaXNIZWljRmlsZShkYXRhVmlldykpIHtcbiAgICAgICAgcmV0dXJuIEhlaWMuZmluZEhlaWNPZmZzZXRzKGRhdGFWaWV3KTtcbiAgICB9XG5cbiAgICBpZiAoQ29uc3RhbnRzLlVTRV9XRUJQICYmIFdlYnAuaXNXZWJwRmlsZShkYXRhVmlldykpIHtcbiAgICAgICAgcmV0dXJuIFdlYnAuZmluZE9mZnNldHMoZGF0YVZpZXcpO1xuICAgIH1cblxuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBpbWFnZSBmb3JtYXQnKTtcbn1cbiJdLCJuYW1lcyI6WyJDb25zdGFudHMiLCJUaWZmIiwiSnBlZyIsIlBuZyIsIkhlaWMiLCJXZWJwIiwicGFyc2VBcHBNYXJrZXJzIiwiZGF0YVZpZXciLCJVU0VfVElGRiIsImlzVGlmZkZpbGUiLCJmaW5kVGlmZk9mZnNldHMiLCJVU0VfSlBFRyIsImlzSnBlZ0ZpbGUiLCJmaW5kSnBlZ09mZnNldHMiLCJVU0VfUE5HIiwiaXNQbmdGaWxlIiwiZmluZFBuZ09mZnNldHMiLCJVU0VfSEVJQyIsImlzSGVpY0ZpbGUiLCJmaW5kSGVpY09mZnNldHMiLCJVU0VfV0VCUCIsImlzV2VicEZpbGUiLCJmaW5kT2Zmc2V0cyIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/image-header.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/iptc-tag-names.js":
/*!*******************************************************!*\
  !*** ./node_modules/exifreader/src/iptc-tag-names.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tag-names-utils.js */ \"./node_modules/exifreader/src/tag-names-utils.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  'iptc': {\n    0x0100: {\n      'name': 'Model Version',\n      'description': function description(value) {\n        return ((value[0] << 8) + value[1]).toString();\n      }\n    },\n    0x0105: {\n      'name': 'Destination',\n      'repeatable': true\n    },\n    0x0114: {\n      'name': 'File Format',\n      'description': function description(value) {\n        return ((value[0] << 8) + value[1]).toString();\n      }\n    },\n    0x0116: {\n      'name': 'File Format Version',\n      'description': function description(value) {\n        return ((value[0] << 8) + value[1]).toString();\n      }\n    },\n    0x011e: 'Service Identifier',\n    0x0128: 'Envelope Number',\n    0x0132: 'Product ID',\n    0x013c: 'Envelope Priority',\n    0x0146: {\n      'name': 'Date Sent',\n      'description': getCreationDate\n    },\n    0x0150: {\n      'name': 'Time Sent',\n      'description': getCreationTime\n    },\n    0x015a: {\n      'name': 'Coded Character Set',\n      'description': getEncodingName,\n      'encoding_name': getEncodingName\n    },\n    0x0164: 'UNO',\n    0x0178: {\n      'name': 'ARM Identifier',\n      'description': function description(value) {\n        return ((value[0] << 8) + value[1]).toString();\n      }\n    },\n    0x017a: {\n      'name': 'ARM Version',\n      'description': function description(value) {\n        return ((value[0] << 8) + value[1]).toString();\n      }\n    },\n    0x0200: {\n      'name': 'Record Version',\n      'description': function description(value) {\n        return ((value[0] << 8) + value[1]).toString();\n      }\n    },\n    0x0203: 'Object Type Reference',\n    0x0204: 'Object Attribute Reference',\n    0x0205: 'Object Name',\n    0x0207: 'Edit Status',\n    0x0208: {\n      'name': 'Editorial Update',\n      'description': function description(value) {\n        if ((0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringValue)(value) === '01') {\n          return 'Additional Language';\n        }\n\n        return 'Unknown';\n      }\n    },\n    0x020a: 'Urgency',\n    0x020c: {\n      'name': 'Subject Reference',\n      'repeatable': true,\n      'description': function description(value) {\n        var parts = (0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringValue)(value).split(':');\n        return parts[2] + (parts[3] ? '/' + parts[3] : '') + (parts[4] ? '/' + parts[4] : '');\n      }\n    },\n    0x020f: 'Category',\n    0x0214: {\n      'name': 'Supplemental Category',\n      'repeatable': true\n    },\n    0x0216: 'Fixture Identifier',\n    0x0219: {\n      'name': 'Keywords',\n      'repeatable': true\n    },\n    0x021a: {\n      'name': 'Content Location Code',\n      'repeatable': true\n    },\n    0x021b: {\n      'name': 'Content Location Name',\n      'repeatable': true\n    },\n    0x021e: 'Release Date',\n    0x0223: 'Release Time',\n    0x0225: 'Expiration Date',\n    0x0226: 'Expiration Time',\n    0x0228: 'Special Instructions',\n    0x022a: {\n      'name': 'Action Advised',\n      'description': function description(value) {\n        var string = (0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringValue)(value);\n\n        if (string === '01') {\n          return 'Object Kill';\n        } else if (string === '02') {\n          return 'Object Replace';\n        } else if (string === '03') {\n          return 'Object Append';\n        } else if (string === '04') {\n          return 'Object Reference';\n        }\n\n        return 'Unknown';\n      }\n    },\n    0x022d: {\n      'name': 'Reference Service',\n      'repeatable': true\n    },\n    0x022f: {\n      'name': 'Reference Date',\n      'repeatable': true\n    },\n    0x0232: {\n      'name': 'Reference Number',\n      'repeatable': true\n    },\n    0x0237: {\n      'name': 'Date Created',\n      'description': getCreationDate\n    },\n    0x023c: {\n      'name': 'Time Created',\n      'description': getCreationTime\n    },\n    0x023e: {\n      'name': 'Digital Creation Date',\n      'description': getCreationDate\n    },\n    0x023f: {\n      'name': 'Digital Creation Time',\n      'description': getCreationTime\n    },\n    0x0241: 'Originating Program',\n    0x0246: 'Program Version',\n    0x024b: {\n      'name': 'Object Cycle',\n      'description': function description(value) {\n        var string = (0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringValue)(value);\n\n        if (string === 'a') {\n          return 'morning';\n        } else if (string === 'p') {\n          return 'evening';\n        } else if (string === 'b') {\n          return 'both';\n        }\n\n        return 'Unknown';\n      }\n    },\n    0x0250: {\n      'name': 'By-line',\n      'repeatable': true\n    },\n    0x0255: {\n      'name': 'By-line Title',\n      'repeatable': true\n    },\n    0x025a: 'City',\n    0x025c: 'Sub-location',\n    0x025f: 'Province/State',\n    0x0264: 'Country/Primary Location Code',\n    0x0265: 'Country/Primary Location Name',\n    0x0267: 'Original Transmission Reference',\n    0x0269: 'Headline',\n    0x026e: 'Credit',\n    0x0273: 'Source',\n    0x0274: 'Copyright Notice',\n    0x0276: {\n      'name': 'Contact',\n      'repeatable': true\n    },\n    0x0278: 'Caption/Abstract',\n    0x027a: {\n      'name': 'Writer/Editor',\n      'repeatable': true\n    },\n    0x027d: {\n      'name': 'Rasterized Caption',\n      'description': function description(value) {\n        return value;\n      }\n    },\n    0x0282: 'Image Type',\n    0x0283: {\n      'name': 'Image Orientation',\n      'description': function description(value) {\n        var string = (0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringValue)(value);\n\n        if (string === 'P') {\n          return 'Portrait';\n        } else if (string === 'L') {\n          return 'Landscape';\n        } else if (string === 'S') {\n          return 'Square';\n        }\n\n        return 'Unknown';\n      }\n    },\n    0x0287: 'Language Identifier',\n    0x0296: {\n      'name': 'Audio Type',\n      'description': function description(value) {\n        var stringValue = (0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringValue)(value);\n        var character0 = stringValue.charAt(0);\n        var character1 = stringValue.charAt(1);\n        var description = '';\n\n        if (character0 === '1') {\n          description += 'Mono';\n        } else if (character0 === '2') {\n          description += 'Stereo';\n        }\n\n        if (character1 === 'A') {\n          description += ', actuality';\n        } else if (character1 === 'C') {\n          description += ', question and answer session';\n        } else if (character1 === 'M') {\n          description += ', music, transmitted by itself';\n        } else if (character1 === 'Q') {\n          description += ', response to a question';\n        } else if (character1 === 'R') {\n          description += ', raw sound';\n        } else if (character1 === 'S') {\n          description += ', scener';\n        } else if (character1 === 'V') {\n          description += ', voicer';\n        } else if (character1 === 'W') {\n          description += ', wrap';\n        }\n\n        if (description !== '') {\n          return description;\n        }\n\n        return stringValue;\n      }\n    },\n    0x0297: {\n      'name': 'Audio Sampling Rate',\n      'description': function description(value) {\n        return parseInt((0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringValue)(value), 10) + ' Hz';\n      }\n    },\n    0x0298: {\n      'name': 'Audio Sampling Resolution',\n      'description': function description(value) {\n        var bits = parseInt((0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringValue)(value), 10);\n        return bits + (bits === 1 ? ' bit' : ' bits');\n      }\n    },\n    0x0299: {\n      'name': 'Audio Duration',\n      'description': function description(value) {\n        var duration = (0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringValue)(value);\n\n        if (duration.length >= 6) {\n          return duration.substr(0, 2) + ':' + duration.substr(2, 2) + ':' + duration.substr(4, 2);\n        }\n\n        return duration;\n      }\n    },\n    0x029a: 'Audio Outcue',\n    0x02ba: 'Short Document ID',\n    0x02bb: 'Unique Document ID',\n    0x02bc: 'Owner ID',\n    0x02c8: {\n      'name': function name(value) {\n        if (value.length === 2) {\n          return 'ObjectData Preview File Format';\n        }\n\n        return 'Record 2 destination';\n      },\n      'description': function description(value) {\n        if (value.length === 2) {\n          var intValue = (value[0] << 8) + value[1];\n\n          if (intValue === 0) {\n            return 'No ObjectData';\n          } else if (intValue === 1) {\n            return 'IPTC-NAA Digital Newsphoto Parameter Record';\n          } else if (intValue === 2) {\n            return 'IPTC7901 Recommended Message Format';\n          } else if (intValue === 3) {\n            return 'Tagged Image File Format (Adobe/Aldus Image data)';\n          } else if (intValue === 4) {\n            return 'Illustrator (Adobe Graphics data)';\n          } else if (intValue === 5) {\n            return 'AppleSingle (Apple Computer Inc)';\n          } else if (intValue === 6) {\n            return 'NAA 89-3 (ANPA 1312)';\n          } else if (intValue === 7) {\n            return 'MacBinary II';\n          } else if (intValue === 8) {\n            return 'IPTC Unstructured Character Oriented File Format (UCOFF)';\n          } else if (intValue === 9) {\n            return 'United Press International ANPA 1312 variant';\n          } else if (intValue === 10) {\n            return 'United Press International Down-Load Message';\n          } else if (intValue === 11) {\n            return 'JPEG File Interchange (JFIF)';\n          } else if (intValue === 12) {\n            return 'Photo-CD Image-Pac (Eastman Kodak)';\n          } else if (intValue === 13) {\n            return 'Microsoft Bit Mapped Graphics File [*.BMP]';\n          } else if (intValue === 14) {\n            return 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)';\n          } else if (intValue === 15) {\n            return 'Audio plus Moving Video [*.AVI] (Microsoft)';\n          } else if (intValue === 16) {\n            return 'PC DOS/Windows Executable Files [*.COM][*.EXE]';\n          } else if (intValue === 17) {\n            return 'Compressed Binary File [*.ZIP] (PKWare Inc)';\n          } else if (intValue === 18) {\n            return 'Audio Interchange File Format AIFF (Apple Computer Inc)';\n          } else if (intValue === 19) {\n            return 'RIFF Wave (Microsoft Corporation)';\n          } else if (intValue === 20) {\n            return 'Freehand (Macromedia/Aldus)';\n          } else if (intValue === 21) {\n            return 'Hypertext Markup Language \"HTML\" (The Internet Society)';\n          } else if (intValue === 22) {\n            return 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC';\n          } else if (intValue === 23) {\n            return 'MPEG 2 Audio Layer 3, ISO/IEC';\n          } else if (intValue === 24) {\n            return 'Portable Document File (*.PDF) Adobe';\n          } else if (intValue === 25) {\n            return 'News Industry Text Format (NITF)';\n          } else if (intValue === 26) {\n            return 'Tape Archive (*.TAR)';\n          } else if (intValue === 27) {\n            return 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)';\n          } else if (intValue === 28) {\n            return 'Ritzaus Bureau NITF version (RBNITF DTD)';\n          } else if (intValue === 29) {\n            return 'Corel Draw [*.CDR]';\n          }\n\n          return \"Unknown format \".concat(intValue);\n        }\n\n        return (0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringValue)(value);\n      }\n    },\n    0x02c9: {\n      'name': 'ObjectData Preview File Format Version',\n      'description': function description(value, tags) {\n        // Format ID, Version ID, Version Description\n        var formatVersions = {\n          '00': {\n            '00': '1'\n          },\n          '01': {\n            '01': '1',\n            '02': '2',\n            '03': '3',\n            '04': '4'\n          },\n          '02': {\n            '04': '4'\n          },\n          '03': {\n            '01': '5.0',\n            '02': '6.0'\n          },\n          '04': {\n            '01': '1.40'\n          },\n          '05': {\n            '01': '2'\n          },\n          '06': {\n            '01': '1'\n          },\n          '11': {\n            '01': '1.02'\n          },\n          '20': {\n            '01': '3.1',\n            '02': '4.0',\n            '03': '5.0',\n            '04': '5.5'\n          },\n          '21': {\n            '02': '2.0'\n          }\n        };\n        var stringValue = (0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringValue)(value);\n\n        if (tags['ObjectData Preview File Format']) {\n          var objectDataPreviewFileFormat = (0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringValue)(tags['ObjectData Preview File Format'].value);\n\n          if (formatVersions[objectDataPreviewFileFormat] && formatVersions[objectDataPreviewFileFormat][stringValue]) {\n            return formatVersions[objectDataPreviewFileFormat][stringValue];\n          }\n        }\n\n        return stringValue;\n      }\n    },\n    0x02ca: 'ObjectData Preview Data',\n    0x070a: {\n      'name': 'Size Mode',\n      'description': function description(value) {\n        return value[0].toString();\n      }\n    },\n    0x0714: {\n      'name': 'Max Subfile Size',\n      'description': function description(value) {\n        var n = 0;\n\n        for (var i = 0; i < value.length; i++) {\n          n = (n << 8) + value[i];\n        }\n\n        return n.toString();\n      }\n    },\n    0x075a: {\n      'name': 'ObjectData Size Announced',\n      'description': function description(value) {\n        var n = 0;\n\n        for (var i = 0; i < value.length; i++) {\n          n = (n << 8) + value[i];\n        }\n\n        return n.toString();\n      }\n    },\n    0x075f: {\n      'name': 'Maximum ObjectData Size',\n      'description': function description(value) {\n        var n = 0;\n\n        for (var i = 0; i < value.length; i++) {\n          n = (n << 8) + value[i];\n        }\n\n        return n.toString();\n      }\n    }\n  }\n});\n\nfunction getCreationDate(value) {\n  var date = (0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringValue)(value);\n\n  if (date.length >= 8) {\n    return date.substr(0, 4) + '-' + date.substr(4, 2) + '-' + date.substr(6, 2);\n  }\n\n  return date;\n}\n\nfunction getCreationTime(value) {\n  var time = (0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringValue)(value);\n  var parsedTime = time;\n\n  if (time.length >= 6) {\n    parsedTime = time.substr(0, 2) + ':' + time.substr(2, 2) + ':' + time.substr(4, 2);\n\n    if (time.length === 11) {\n      parsedTime += time.substr(6, 1) + time.substr(7, 2) + ':' + time.substr(9, 2);\n    }\n  }\n\n  return parsedTime;\n}\n\nfunction getEncodingName(value) {\n  var string = (0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringValue)(value);\n\n  if (string === '\\x1b%G') {\n    return 'UTF-8';\n  } else if (string === '\\x1b%5') {\n    return 'Windows-1252';\n  } else if (string === '\\x1b%/G') {\n    return 'UTF-8 Level 1';\n  } else if (string === '\\x1b%/H') {\n    return 'UTF-8 Level 2';\n  } else if (string === '\\x1b%/I') {\n    return 'UTF-8 Level 3';\n  } else if (string === '\\x1B/A') {\n    return 'ISO-8859-1';\n  } else if (string === '\\x1B/B') {\n    return 'ISO-8859-2';\n  } else if (string === '\\x1B/C') {\n    return 'ISO-8859-3';\n  } else if (string === '\\x1B/D') {\n    return 'ISO-8859-4';\n  } else if (string === '\\x1B/@') {\n    return 'ISO-8859-5';\n  } else if (string === '\\x1B/G') {\n    return 'ISO-8859-6';\n  } else if (string === '\\x1B/F') {\n    return 'ISO-8859-7';\n  } else if (string === '\\x1B/H') {\n    return 'ISO-8859-8';\n  }\n\n  return 'Unknown';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/iptc-tag-names.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/iptc-tags.js":
/*!**************************************************!*\
  !*** ./node_modules/exifreader/src/iptc-tags.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _iptc_tag_names_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iptc-tag-names.js */ \"./node_modules/exifreader/src/iptc-tag-names.js\");\n/* harmony import */ var _tag_decoder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tag-decoder.js */ \"./node_modules/exifreader/src/tag-decoder.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n\nvar BYTES_8BIM = 0x3842494d;\nvar BYTES_8BIM_SIZE = 4;\nvar RESOURCE_BLOCK_HEADER_SIZE = BYTES_8BIM_SIZE + 8;\nvar NAA_RESOURCE_BLOCK_TYPE = 0x0404;\nvar TAG_HEADER_SIZE = 5;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  read: read\n});\n\nfunction read(dataView, dataOffset, includeUnknown) {\n  try {\n    if (Array.isArray(dataView)) {\n      return parseTags(new DataView(Uint8Array.from(dataView).buffer), {\n        size: dataView.length\n      }, 0, includeUnknown);\n    }\n\n    var _getNaaResourceBlock = getNaaResourceBlock(dataView, dataOffset),\n        naaBlock = _getNaaResourceBlock.naaBlock,\n        newDataOffset = _getNaaResourceBlock.dataOffset;\n\n    return parseTags(dataView, naaBlock, newDataOffset, includeUnknown);\n  } catch (error) {\n    return {};\n  }\n}\n\nfunction getNaaResourceBlock(dataView, dataOffset) {\n  while (dataOffset + RESOURCE_BLOCK_HEADER_SIZE <= dataView.byteLength) {\n    var resourceBlock = getResourceBlock(dataView, dataOffset);\n\n    if (isNaaResourceBlock(resourceBlock)) {\n      return {\n        naaBlock: resourceBlock,\n        dataOffset: dataOffset + RESOURCE_BLOCK_HEADER_SIZE\n      };\n    }\n\n    dataOffset += RESOURCE_BLOCK_HEADER_SIZE + resourceBlock.size + getBlockPadding(resourceBlock);\n  }\n\n  throw new Error('No IPTC NAA resource block.');\n}\n\nfunction getResourceBlock(dataView, dataOffset) {\n  var RESOURCE_BLOCK_SIZE_OFFSET = 10;\n\n  if (dataView.getUint32(dataOffset, false) !== BYTES_8BIM) {\n    throw new Error('Not an IPTC resource block.');\n  }\n\n  return {\n    type: dataView.getUint16(dataOffset + BYTES_8BIM_SIZE),\n    size: dataView.getUint16(dataOffset + RESOURCE_BLOCK_SIZE_OFFSET)\n  };\n}\n\nfunction isNaaResourceBlock(resourceBlock) {\n  return resourceBlock.type === NAA_RESOURCE_BLOCK_TYPE;\n}\n\nfunction getBlockPadding(resourceBlock) {\n  if (resourceBlock.size % 2 !== 0) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction parseTags(dataView, naaBlock, dataOffset, includeUnknown) {\n  var tags = {};\n  var encoding = undefined;\n  var endOfBlockOffset = dataOffset + naaBlock['size'];\n\n  while (dataOffset < endOfBlockOffset && dataOffset < dataView.byteLength) {\n    var _readTag = readTag(dataView, dataOffset, tags, encoding, includeUnknown),\n        tag = _readTag.tag,\n        tagSize = _readTag.tagSize;\n\n    if (tag === null) {\n      break;\n    }\n\n    if (tag) {\n      if ('encoding' in tag) {\n        encoding = tag.encoding;\n      }\n\n      if (tags[tag.name] === undefined || tag['repeatable'] === undefined) {\n        tags[tag.name] = {\n          id: tag.id,\n          value: tag.value,\n          description: tag.description\n        };\n      } else {\n        if (!(tags[tag.name] instanceof Array)) {\n          tags[tag.name] = [{\n            id: tags[tag.name].id,\n            value: tags[tag.name].value,\n            description: tags[tag.name].description\n          }];\n        }\n\n        tags[tag.name].push({\n          id: tag.id,\n          value: tag.value,\n          description: tag.description\n        });\n      }\n    }\n\n    dataOffset += TAG_HEADER_SIZE + tagSize;\n  }\n\n  return tags;\n}\n\nfunction readTag(dataView, dataOffset, tags, encoding, includeUnknown) {\n  var TAG_CODE_OFFSET = 1;\n  var TAG_SIZE_OFFSET = 3;\n\n  if (leadByteIsMissing(dataView, dataOffset)) {\n    return {\n      tag: null,\n      tagSize: 0\n    };\n  }\n\n  var tagCode = dataView.getUint16(dataOffset + TAG_CODE_OFFSET);\n  var tagSize = dataView.getUint16(dataOffset + TAG_SIZE_OFFSET);\n\n  if (!includeUnknown && !_iptc_tag_names_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].iptc[tagCode]) {\n    return {\n      tag: undefined,\n      tagSize: tagSize\n    };\n  }\n\n  var tagValue = getTagValue(dataView, dataOffset + TAG_HEADER_SIZE, tagSize);\n  var tag = {\n    id: tagCode,\n    name: getTagName(_iptc_tag_names_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].iptc[tagCode], tagCode, tagValue),\n    value: tagValue,\n    description: getTagDescription(_iptc_tag_names_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].iptc[tagCode], tagValue, tags, encoding)\n  };\n\n  if (tagIsRepeatable(tagCode)) {\n    tag['repeatable'] = true;\n  }\n\n  if (tagContainsEncoding(tagCode)) {\n    tag['encoding'] = _iptc_tag_names_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].iptc[tagCode]['encoding_name'](tagValue);\n  }\n\n  return {\n    tag: tag,\n    tagSize: tagSize\n  };\n}\n\nfunction leadByteIsMissing(dataView, dataOffset) {\n  var TAG_LEAD_BYTE = 0x1c;\n  return dataView.getUint8(dataOffset) !== TAG_LEAD_BYTE;\n}\n\nfunction getTagValue(dataView, offset, size) {\n  var value = [];\n\n  for (var valueIndex = 0; valueIndex < size; valueIndex++) {\n    value.push(dataView.getUint8(offset + valueIndex));\n  }\n\n  return value;\n}\n\nfunction getTagName(tag, tagCode, tagValue) {\n  if (!tag) {\n    return \"undefined-\".concat(tagCode);\n  }\n\n  if (tagIsName(tag)) {\n    return tag;\n  }\n\n  if (hasDynamicName(tag)) {\n    return tag['name'](tagValue);\n  }\n\n  return tag['name'];\n}\n\nfunction tagIsName(tag) {\n  return typeof tag === 'string';\n}\n\nfunction hasDynamicName(tag) {\n  return typeof tag['name'] === 'function';\n}\n\nfunction getTagDescription(tag, tagValue, tags, encoding) {\n  if (hasDescriptionProperty(tag)) {\n    try {\n      return tag['description'](tagValue, tags);\n    } catch (error) {// Fall through to next handler.\n    }\n  }\n\n  if (tagValueIsText(tag, tagValue)) {\n    return _tag_decoder_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].decode(encoding, tagValue);\n  }\n\n  return tagValue;\n}\n\nfunction tagValueIsText(tag, tagValue) {\n  return tag && tagValue instanceof Array;\n}\n\nfunction hasDescriptionProperty(tag) {\n  return tag && tag['description'] !== undefined;\n}\n\nfunction tagIsRepeatable(tagCode) {\n  return _iptc_tag_names_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].iptc[tagCode] && _iptc_tag_names_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].iptc[tagCode]['repeatable'];\n}\n\nfunction tagContainsEncoding(tagCode) {\n  return _iptc_tag_names_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].iptc[tagCode] && _iptc_tag_names_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].iptc[tagCode]['encoding_name'] !== undefined;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvaXB0Yy10YWdzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7QUFJQTtBQUNBO0FBRUEsSUFBTUUsVUFBVSxHQUFHLFVBQW5CO0FBQ0EsSUFBTUMsZUFBZSxHQUFHLENBQXhCO0FBQ0EsSUFBTUMsMEJBQTBCLEdBQUdELGVBQWUsR0FBRyxDQUFyRDtBQUNBLElBQU1FLHVCQUF1QixHQUFHLE1BQWhDO0FBQ0EsSUFBTUMsZUFBZSxHQUFHLENBQXhCO0FBRUEsaUVBQWU7QUFDWEMsRUFBQUEsSUFBSSxFQUFKQTtBQURXLENBQWY7O0FBSUEsU0FBU0EsSUFBVCxDQUFjQyxRQUFkLEVBQXdCQyxVQUF4QixFQUFvQ0MsY0FBcEMsRUFBb0Q7QUFDaEQsTUFBSTtBQUNBLFFBQUlDLEtBQUssQ0FBQ0MsT0FBTixDQUFjSixRQUFkLENBQUosRUFBNkI7QUFDekIsYUFBT0ssU0FBUyxDQUFDLElBQUlDLFFBQUosQ0FBYUMsVUFBVSxDQUFDQyxJQUFYLENBQWdCUixRQUFoQixFQUEwQlMsTUFBdkMsQ0FBRCxFQUFpRDtBQUFDQyxRQUFBQSxJQUFJLEVBQUVWLFFBQVEsQ0FBQ1c7QUFBaEIsT0FBakQsRUFBMEUsQ0FBMUUsRUFBNkVULGNBQTdFLENBQWhCO0FBQ0g7O0FBSEQsK0JBSThDVSxtQkFBbUIsQ0FBQ1osUUFBRCxFQUFXQyxVQUFYLENBSmpFO0FBQUEsUUFJT1ksUUFKUCx3QkFJT0EsUUFKUDtBQUFBLFFBSTZCQyxhQUo3Qix3QkFJaUJiLFVBSmpCOztBQUtBLFdBQU9JLFNBQVMsQ0FBQ0wsUUFBRCxFQUFXYSxRQUFYLEVBQXFCQyxhQUFyQixFQUFvQ1osY0FBcEMsQ0FBaEI7QUFDSCxHQU5ELENBTUUsT0FBT2EsS0FBUCxFQUFjO0FBQ1osV0FBTyxFQUFQO0FBQ0g7QUFDSjs7QUFFRCxTQUFTSCxtQkFBVCxDQUE2QlosUUFBN0IsRUFBdUNDLFVBQXZDLEVBQW1EO0FBQy9DLFNBQU9BLFVBQVUsR0FBR0ws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ZVJlc2l6ZXIvLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvaXB0Yy10YWdzLmpzPzZhYjciXSwic291cmNlc0NvbnRlbnQiOlsiLyogVGhpcyBTb3VyY2UgQ29kZSBGb3JtIGlzIHN1YmplY3QgdG8gdGhlIHRlcm1zIG9mIHRoZSBNb3ppbGxhIFB1YmxpY1xuICogTGljZW5zZSwgdi4gMi4wLiBJZiBhIGNvcHkgb2YgdGhlIE1QTCB3YXMgbm90IGRpc3RyaWJ1dGVkIHdpdGggdGhpc1xuICogZmlsZSwgWW91IGNhbiBvYnRhaW4gb25lIGF0IGh0dHBzOi8vbW96aWxsYS5vcmcvTVBMLzIuMC8uICovXG5cbmltcG9ydCBJcHRjVGFnTmFtZXMgZnJvbSAnLi9pcHRjLXRhZy1uYW1lcy5qcyc7XG5pbXBvcnQgVGFnRGVjb2RlciBmcm9tICcuL3RhZy1kZWNvZGVyLmpzJztcblxuY29uc3QgQllURVNfOEJJTSA9IDB4Mzg0MjQ5NGQ7XG5jb25zdCBCWVRFU184QklNX1NJWkUgPSA0O1xuY29uc3QgUkVTT1VSQ0VfQkxPQ0tfSEVBREVSX1NJWkUgPSBCWVRFU184QklNX1NJWkUgKyA4O1xuY29uc3QgTkFBX1JFU09VUkNFX0JMT0NLX1RZUEUgPSAweDA0MDQ7XG5jb25zdCBUQUdfSEVBREVSX1NJWkUgPSA1O1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgcmVhZFxufTtcblxuZnVuY3Rpb24gcmVhZChkYXRhVmlldywgZGF0YU9mZnNldCwgaW5jbHVkZVVua25vd24pIHtcbiAgICB0cnkge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhVmlldykpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJzZVRhZ3MobmV3IERhdGFWaWV3KFVpbnQ4QXJyYXkuZnJvbShkYXRhVmlldykuYnVmZmVyKSwge3NpemU6IGRhdGFWaWV3Lmxlbmd0aH0sIDAsIGluY2x1ZGVVbmtub3duKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB7bmFhQmxvY2ssIGRhdGFPZmZzZXQ6IG5ld0RhdGFPZmZzZXR9ID0gZ2V0TmFhUmVzb3VyY2VCbG9jayhkYXRhVmlldywgZGF0YU9mZnNldCk7XG4gICAgICAgIHJldHVybiBwYXJzZVRhZ3MoZGF0YVZpZXcsIG5hYUJsb2NrLCBuZXdEYXRhT2Zmc2V0LCBpbmNsdWRlVW5rbm93bik7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZ2V0TmFhUmVzb3VyY2VCbG9jayhkYXRhVmlldywgZGF0YU9mZnNldCkge1xuICAgIHdoaWxlIChkYXRhT2Zmc2V0ICsgUkVTT1VSQ0VfQkxPQ0tfSEVBREVSX1NJWkUgPD0gZGF0YVZpZXcuYnl0ZUxlbmd0aCkge1xuICAgICAgICBjb25zdCByZXNvdXJjZUJsb2NrID0gZ2V0UmVzb3VyY2VCbG9jayhkYXRhVmlldywgZGF0YU9mZnNldCk7XG4gICAgICAgIGlmIChpc05hYVJlc291cmNlQmxvY2socmVzb3VyY2VCbG9jaykpIHtcbiAgICAgICAgICAgIHJldHVybiB7bmFhQmxvY2s6IHJlc291cmNlQmxvY2ssIGRhdGFPZmZzZXQ6IGRhdGFPZmZzZXQgKyBSRVNPVVJDRV9CTE9DS19IRUFERVJfU0laRX07XG4gICAgICAgIH1cbiAgICAgICAgZGF0YU9mZnNldCArPSBSRVNPVVJDRV9CTE9DS19IRUFERVJfU0laRSArIHJlc291cmNlQmxvY2suc2l6ZSArIGdldEJsb2NrUGFkZGluZyhyZXNvdXJjZUJsb2NrKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKCdObyBJUFRDIE5BQSByZXNvdXJjZSBibG9jay4nKTtcbn1cblxuZnVuY3Rpb24gZ2V0UmVzb3VyY2VCbG9jayhkYXRhVmlldywgZGF0YU9mZnNldCkge1xuICAgIGNvbnN0IFJFU09VUkNFX0JMT0NLX1NJWkVfT0ZGU0VUID0gMTA7XG5cbiAgICBpZiAoZGF0YVZpZXcuZ2V0VWludDMyKGRhdGFPZmZzZXQsIGZhbHNlKSAhPT0gQllURVNfOEJJTSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vdCBhbiBJUFRDIHJlc291cmNlIGJsb2NrLicpO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IGRhdGFWaWV3LmdldFVpbnQxNihkYXRhT2Zmc2V0ICsgQllURVNfOEJJTV9TSVpFKSxcbiAgICAgICAgc2l6ZTogZGF0YVZpZXcuZ2V0VWludDE2KGRhdGFPZmZzZXQgKyBSRVNPVVJDRV9CTE9DS19TSVpFX09GRlNFVClcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBpc05hYVJlc291cmNlQmxvY2socmVzb3VyY2VCbG9jaykge1xuICAgIHJldHVybiByZXNvdXJjZUJsb2NrLnR5cGUgPT09IE5BQV9SRVNPVVJDRV9CTE9DS19UWVBFO1xufVxuXG5mdW5jdGlvbiBnZXRCbG9ja1BhZGRpbmcocmVzb3VyY2VCbG9jaykge1xuICAgIGlmIChyZXNvdXJjZUJsb2NrLnNpemUgJSAyICE9PSAwKSB7XG4gICAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgICByZXR1cm4gMDtcbn1cblxuZnVuY3Rpb24gcGFyc2VUYWdzKGRhdGFWaWV3LCBuYWFCbG9jaywgZGF0YU9mZnNldCwgaW5jbHVkZVVua25vd24pIHtcbiAgICBjb25zdCB0YWdzID0ge307XG4gICAgbGV0IGVuY29kaW5nID0gdW5kZWZpbmVkO1xuXG4gICAgY29uc3QgZW5kT2ZCbG9ja09mZnNldCA9IGRhdGFPZmZzZXQgKyBuYWFCbG9ja1snc2l6ZSddO1xuXG4gICAgd2hpbGUgKChkYXRhT2Zmc2V0IDwgZW5kT2ZCbG9ja09mZnNldCkgJiYgKGRhdGFPZmZzZXQgPCBkYXRhVmlldy5ieXRlTGVuZ3RoKSkge1xuICAgICAgICBjb25zdCB7dGFnLCB0YWdTaXplfSA9IHJlYWRUYWcoZGF0YVZpZXcsIGRhdGFPZmZzZXQsIHRhZ3MsIGVuY29kaW5nLCBpbmNsdWRlVW5rbm93bik7XG5cbiAgICAgICAgaWYgKHRhZyA9PT0gbnVsbCkge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGFnKSB7XG4gICAgICAgICAgICBpZiAoJ2VuY29kaW5nJyBpbiB0YWcpIHtcbiAgICAgICAgICAgICAgICBlbmNvZGluZyA9IHRhZy5lbmNvZGluZztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCh0YWdzW3RhZy5uYW1lXSA9PT0gdW5kZWZpbmVkKSB8fCAodGFnWydyZXBlYXRhYmxlJ10gPT09IHVuZGVmaW5lZCkpIHtcbiAgICAgICAgICAgICAgICB0YWdzW3RhZy5uYW1lXSA9IHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6IHRhZy5pZCxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHRhZy52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IHRhZy5kZXNjcmlwdGlvblxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmICghKHRhZ3NbdGFnLm5hbWVdIGluc3RhbmNlb2YgQXJyYXkpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRhZ3NbdGFnLm5hbWVdID0gW3tcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiB0YWdzW3RhZy5uYW1lXS5pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0YWdzW3RhZy5uYW1lXS52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB0YWdzW3RhZy5uYW1lXS5kZXNjcmlwdGlvblxuICAgICAgICAgICAgICAgICAgICB9XTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGFnc1t0YWcubmFtZV0ucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIGlkOiB0YWcuaWQsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0YWcudmFsdWUsXG4gICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB0YWcuZGVzY3JpcHRpb25cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGRhdGFPZmZzZXQgKz0gVEFHX0hFQURFUl9TSVpFICsgdGFnU2l6ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGFncztcbn1cblxuZnVuY3Rpb24gcmVhZFRhZyhkYXRhVmlldywgZGF0YU9mZnNldCwgdGFncywgZW5jb2RpbmcsIGluY2x1ZGVVbmtub3duKSB7XG4gICAgY29uc3QgVEFHX0NPREVfT0ZGU0VUID0gMTtcbiAgICBjb25zdCBUQUdfU0laRV9PRkZTRVQgPSAzO1xuXG4gICAgaWYgKGxlYWRCeXRlSXNNaXNzaW5nKGRhdGFWaWV3LCBkYXRhT2Zmc2V0KSkge1xuICAgICAgICByZXR1cm4ge3RhZzogbnVsbCwgdGFnU2l6ZTogMH07XG4gICAgfVxuXG4gICAgY29uc3QgdGFnQ29kZSA9IGRhdGFWaWV3LmdldFVpbnQxNihkYXRhT2Zmc2V0ICsgVEFHX0NPREVfT0ZGU0VUKTtcbiAgICBjb25zdCB0YWdTaXplID0gZGF0YVZpZXcuZ2V0VWludDE2KGRhdGFPZmZzZXQgKyBUQUdfU0laRV9PRkZTRVQpO1xuXG4gICAgaWYgKCFpbmNsdWRlVW5rbm93biAmJiAhSXB0Y1RhZ05hbWVzWydpcHRjJ11bdGFnQ29kZV0pIHtcbiAgICAgICAgcmV0dXJuIHt0YWc6IHVuZGVmaW5lZCwgdGFnU2l6ZX07XG4gICAgfVxuXG4gICAgY29uc3QgdGFnVmFsdWUgPSBnZXRUYWdWYWx1ZShkYXRhVmlldywgZGF0YU9mZnNldCArIFRBR19IRUFERVJfU0laRSwgdGFnU2l6ZSk7XG5cbiAgICBjb25zdCB0YWcgPSB7XG4gICAgICAgIGlkOiB0YWdDb2RlLFxuICAgICAgICBuYW1lOiBnZXRUYWdOYW1lKElwdGNUYWdOYW1lc1snaXB0YyddW3RhZ0NvZGVdLCB0YWdDb2RlLCB0YWdWYWx1ZSksXG4gICAgICAgIHZhbHVlOiB0YWdWYWx1ZSxcbiAgICAgICAgZGVzY3JpcHRpb246IGdldFRhZ0Rlc2NyaXB0aW9uKElwdGNUYWdOYW1lc1snaXB0YyddW3RhZ0NvZGVdLCB0YWdWYWx1ZSwgdGFncywgZW5jb2RpbmcpXG4gICAgfTtcbiAgICBpZiAodGFnSXNSZXBlYXRhYmxlKHRhZ0NvZGUpKSB7XG4gICAgICAgIHRhZ1sncmVwZWF0YWJsZSddID0gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKHRhZ0NvbnRhaW5zRW5jb2RpbmcodGFnQ29kZSkpIHtcbiAgICAgICAgdGFnWydlbmNvZGluZyddID0gSXB0Y1RhZ05hbWVzWydpcHRjJ11bdGFnQ29kZV1bJ2VuY29kaW5nX25hbWUnXSh0YWdWYWx1ZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHt0YWcsIHRhZ1NpemV9O1xufVxuXG5mdW5jdGlvbiBsZWFkQnl0ZUlzTWlzc2luZyhkYXRhVmlldywgZGF0YU9mZnNldCkge1xuICAgIGNvbnN0IFRBR19MRUFEX0JZVEUgPSAweDFjO1xuICAgIHJldHVybiBkYXRhVmlldy5nZXRVaW50OChkYXRhT2Zmc2V0KSAhPT0gVEFHX0xFQURfQllURTtcbn1cblxuZnVuY3Rpb24gZ2V0VGFnVmFsdWUoZGF0YVZpZXcsIG9mZnNldCwgc2l6ZSkge1xuICAgIGNvbnN0IHZhbHVlID0gW107XG5cbiAgICBmb3IgKGxldCB2YWx1ZUluZGV4ID0gMDsgdmFsdWVJbmRleCA8IHNpemU7IHZhbHVlSW5kZXgrKykge1xuICAgICAgICB2YWx1ZS5wdXNoKGRhdGFWaWV3LmdldFVpbnQ4KG9mZnNldCArIHZhbHVlSW5kZXgpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsdWU7XG59XG5cbmZ1bmN0aW9uIGdldFRhZ05hbWUodGFnLCB0YWdDb2RlLCB0YWdWYWx1ZSkge1xuICAgIGlmICghdGFnKSB7XG4gICAgICAgIHJldHVybiBgdW5kZWZpbmVkLSR7dGFnQ29kZX1gO1xuICAgIH1cbiAgICBpZiAodGFnSXNOYW1lKHRhZykpIHtcbiAgICAgICAgcmV0dXJuIHRhZztcbiAgICB9XG4gICAgaWYgKGhhc0R5bmFtaWNOYW1lKHRhZykpIHtcbiAgICAgICAgcmV0dXJuIHRhZ1snbmFtZSddKHRhZ1ZhbHVlKTtcbiAgICB9XG4gICAgcmV0dXJuIHRhZ1snbmFtZSddO1xufVxuXG5mdW5jdGlvbiB0YWdJc05hbWUodGFnKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB0YWcgPT09ICdzdHJpbmcnO1xufVxuXG5mdW5jdGlvbiBoYXNEeW5hbWljTmFtZSh0YWcpIHtcbiAgICByZXR1cm4gdHlwZW9mICh0YWdbJ25hbWUnXSkgPT09ICdmdW5jdGlvbic7XG59XG5cbmZ1bmN0aW9uIGdldFRhZ0Rlc2NyaXB0aW9uKHRhZywgdGFnVmFsdWUsIHRhZ3MsIGVuY29kaW5nKSB7XG4gICAgaWYgKGhhc0Rlc2NyaXB0aW9uUHJvcGVydHkodGFnKSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIHRhZ1snZGVzY3JpcHRpb24nXSh0YWdWYWx1ZSwgdGFncyk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAvLyBGYWxsIHRocm91Z2ggdG8gbmV4dCBoYW5kbGVyLlxuICAgICAgICB9XG4gICAgfVxuICAgIGlmICh0YWdWYWx1ZUlzVGV4dCh0YWcsIHRhZ1ZhbHVlKSkge1xuICAgICAgICByZXR1cm4gVGFnRGVjb2Rlci5kZWNvZGUoZW5jb2RpbmcsIHRhZ1ZhbHVlKTtcbiAgICB9XG4gICAgcmV0dXJuIHRhZ1ZhbHVlO1xufVxuXG5mdW5jdGlvbiB0YWdWYWx1ZUlzVGV4dCh0YWcsIHRhZ1ZhbHVlKSB7XG4gICAgcmV0dXJuIHRhZyAmJiB0YWdWYWx1ZSBpbnN0YW5jZW9mIEFycmF5O1xufVxuXG5mdW5jdGlvbiBoYXNEZXNjcmlwdGlvblByb3BlcnR5KHRhZykge1xuICAgIHJldHVybiB0YWcgJiYgdGFnWydkZXNjcmlwdGlvbiddICE9PSB1bmRlZmluZWQ7XG59XG5cbmZ1bmN0aW9uIHRhZ0lzUmVwZWF0YWJsZSh0YWdDb2RlKSB7XG4gICAgcmV0dXJuIElwdGNUYWdOYW1lc1snaXB0YyddW3RhZ0NvZGVdICYmIElwdGNUYWdOYW1lc1snaXB0YyddW3RhZ0NvZGVdWydyZXBlYXRhYmxlJ107XG59XG5cbmZ1bmN0aW9uIHRhZ0NvbnRhaW5zRW5jb2RpbmcodGFnQ29kZSkge1xuICAgIHJldHVybiBJcHRjVGFnTmFtZXNbJ2lwdGMnXVt0YWdDb2RlXSAmJiBJcHRjVGFnTmFtZXNbJ2lwdGMnXVt0YWdDb2RlXVsnZW5jb2RpbmdfbmFtZSddICE9PSB1bmRlZmluZWQ7XG59XG4iXSwibmFtZXMiOlsiSXB0Y1RhZ05hbWVzIiwiVGFnRGVjb2RlciIsIkJZVEVTXzhCSU0iLCJCWVRFU184QklNX1NJWkUiLCJSRVNPVVJDRV9CTE9DS19IRUFERVJfU0laRSIsIk5BQV9SRVNPVVJDRV9CTE9DS19UWVBFIiwiVEFHX0hFQURFUl9TSVpFIiwicmVhZCIsImRhdGFWaWV3IiwiZGF0YU9mZnNldCIsImluY2x1ZGVVbmtub3duIiwiQXJyYXkiLCJpc0FycmF5IiwicGFyc2VUYWdzIiwiRGF0YVZpZXciLCJVaW50OEFycmF5IiwiZnJvbSIsImJ1ZmZlciIsInNpemUiLCJsZW5ndGgiLCJnZXROYWFSZXNvdXJjZUJsb2NrIiwibmFhQmxvY2siLCJuZXdEYXRhT2Zmc2V0IiwiZXJyb3IiLCJieXRlTGVuZ3RoIiwicmVzb3VyY2VCbG9jayIsImdldFJlc291cmNlQmxvY2siLCJpc05hYVJlc291cmNlQmxvY2siLCJnZXRCbG9ja1BhZGRpbmciLCJFcnJvciIsIlJFU09VUkNFX0JMT0NLX1NJWkVfT0ZGU0VUIiwiZ2V0VWludDMyIiwidHlwZSIsImdldFVpbnQxNiIsInRhZ3MiLCJlbmNvZGluZyIsInVuZGVmaW5lZCIsImVuZE9mQmxvY2tPZmZzZXQiLCJyZWFkVGFnIiwidGFnIiwidGFnU2l6ZSIsIm5hbWUiLCJpZCIsInZhbHVlIiwiZGVzY3JpcHRpb24iLCJwdXNoIiwiVEFHX0NPREVfT0ZGU0VUIiwiVEFHX1NJWkVfT0ZGU0VUIiwibGVhZEJ5dGVJc01pc3NpbmciLCJ0YWdDb2RlIiwidGFnVmFsdWUiLCJnZXRUYWdWYWx1ZSIsImdldFRhZ05hbWUiLCJnZXRUYWdEZXNjcmlwdGlvbiIsInRhZ0lzUmVwZWF0YWJsZSIsInRhZ0NvbnRhaW5zRW5jb2RpbmciLCJUQUdfTEVBRF9CWVRFIiwiZ2V0VWludDgiLCJvZmZzZXQiLCJ2YWx1ZUluZGV4IiwidGFnSXNOYW1lIiwiaGFzRHluYW1pY05hbWUiLCJoYXNEZXNjcmlwdGlvblByb3BlcnR5IiwidGFnVmFsdWVJc1RleHQiLCJkZWNvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/iptc-tags.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/jfif-tags.js":
/*!**************************************************!*\
  !*** ./node_modules/exifreader/src/jfif-tags.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"./node_modules/exifreader/src/types.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  read: read\n});\n\nfunction read(dataView, jfifDataOffset) {\n  var length = getLength(dataView, jfifDataOffset);\n  var thumbnailWidth = getThumbnailWidth(dataView, jfifDataOffset, length);\n  var thumbnailHeight = getThumbnailHeight(dataView, jfifDataOffset, length);\n  var tags = {\n    'JFIF Version': getVersion(dataView, jfifDataOffset, length),\n    'Resolution Unit': getResolutionUnit(dataView, jfifDataOffset, length),\n    'XResolution': getXResolution(dataView, jfifDataOffset, length),\n    'YResolution': getYResolution(dataView, jfifDataOffset, length),\n    'JFIF Thumbnail Width': thumbnailWidth,\n    'JFIF Thumbnail Height': thumbnailHeight\n  };\n\n  if (thumbnailWidth !== undefined && thumbnailHeight !== undefined) {\n    var thumbnail = getThumbnail(dataView, jfifDataOffset, 3 * thumbnailWidth.value * thumbnailHeight.value, length);\n\n    if (thumbnail) {\n      tags['JFIF Thumbnail'] = thumbnail;\n    }\n  }\n\n  for (var tagName in tags) {\n    if (tags[tagName] === undefined) {\n      delete tags[tagName];\n    }\n  }\n\n  return tags;\n}\n\nfunction getLength(dataView, jfifDataOffset) {\n  return _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getShortAt(dataView, jfifDataOffset);\n}\n\nfunction getVersion(dataView, jfifDataOffset, length) {\n  var OFFSET = 7;\n  var SIZE = 2;\n\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n\n  var majorVersion = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByteAt(dataView, jfifDataOffset + OFFSET);\n  var minorVersion = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByteAt(dataView, jfifDataOffset + OFFSET + 1);\n  return {\n    value: majorVersion * 0x100 + minorVersion,\n    description: majorVersion + '.' + minorVersion\n  };\n}\n\nfunction getResolutionUnit(dataView, jfifDataOffset, length) {\n  var OFFSET = 9;\n  var SIZE = 1;\n\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n\n  var value = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByteAt(dataView, jfifDataOffset + OFFSET);\n  return {\n    value: value,\n    description: getResolutionUnitDescription(value)\n  };\n}\n\nfunction getResolutionUnitDescription(value) {\n  if (value === 0) {\n    return 'None';\n  }\n\n  if (value === 1) {\n    return 'inches';\n  }\n\n  if (value === 2) {\n    return 'cm';\n  }\n\n  return 'Unknown';\n}\n\nfunction getXResolution(dataView, jfifDataOffset, length) {\n  var OFFSET = 10;\n  var SIZE = 2;\n\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n\n  var value = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getShortAt(dataView, jfifDataOffset + OFFSET);\n  return {\n    value: value,\n    description: '' + value\n  };\n}\n\nfunction getYResolution(dataView, jfifDataOffset, length) {\n  var OFFSET = 12;\n  var SIZE = 2;\n\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n\n  var value = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getShortAt(dataView, jfifDataOffset + OFFSET);\n  return {\n    value: value,\n    description: '' + value\n  };\n}\n\nfunction getThumbnailWidth(dataView, jfifDataOffset, length) {\n  var OFFSET = 14;\n  var SIZE = 1;\n\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n\n  var value = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByteAt(dataView, jfifDataOffset + OFFSET);\n  return {\n    value: value,\n    description: \"\".concat(value, \"px\")\n  };\n}\n\nfunction getThumbnailHeight(dataView, jfifDataOffset, length) {\n  var OFFSET = 15;\n  var SIZE = 1;\n\n  if (OFFSET + SIZE > length) {\n    return undefined;\n  }\n\n  var value = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByteAt(dataView, jfifDataOffset + OFFSET);\n  return {\n    value: value,\n    description: \"\".concat(value, \"px\")\n  };\n}\n\nfunction getThumbnail(dataView, jfifDataOffset, thumbnailLength, length) {\n  var OFFSET = 16;\n\n  if (thumbnailLength === 0 || OFFSET + thumbnailLength > length) {\n    return undefined;\n  }\n\n  var value = dataView.buffer.slice(jfifDataOffset + OFFSET, jfifDataOffset + OFFSET + thumbnailLength);\n  return {\n    value: value,\n    description: '<24-bit RGB pixel data>'\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/jfif-tags.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/png-file-tags.js":
/*!******************************************************!*\
  !*** ./node_modules/exifreader/src/png-file-tags.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"./node_modules/exifreader/src/types.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  read: read\n});\n\nfunction read(dataView, fileDataOffset) {\n  return {\n    'Image Width': getImageWidth(dataView, fileDataOffset),\n    'Image Height': getImageHeight(dataView, fileDataOffset),\n    'Bit Depth': getBitDepth(dataView, fileDataOffset),\n    'Color Type': getColorType(dataView, fileDataOffset),\n    'Compression': getCompression(dataView, fileDataOffset),\n    'Filter': getFilter(dataView, fileDataOffset),\n    'Interlace': getInterlace(dataView, fileDataOffset)\n  };\n}\n\nfunction getImageWidth(dataView, fileDataOffset) {\n  var OFFSET = 0;\n  var SIZE = 4;\n\n  if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n\n  var value = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getLongAt(dataView, fileDataOffset);\n  return {\n    value: value,\n    description: \"\".concat(value, \"px\")\n  };\n}\n\nfunction getImageHeight(dataView, fileDataOffset) {\n  var OFFSET = 4;\n  var SIZE = 4;\n\n  if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n\n  var value = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getLongAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value: value,\n    description: \"\".concat(value, \"px\")\n  };\n}\n\nfunction getBitDepth(dataView, fileDataOffset) {\n  var OFFSET = 8;\n  var SIZE = 1;\n\n  if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n\n  var value = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByteAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value: value,\n    description: \"\".concat(value)\n  };\n}\n\nfunction getColorType(dataView, fileDataOffset) {\n  var OFFSET = 9;\n  var SIZE = 1;\n  var COLOR_TYPES = {\n    0: 'Grayscale',\n    2: 'RGB',\n    3: 'Palette',\n    4: 'Grayscale with Alpha',\n    6: 'RGB with Alpha'\n  };\n\n  if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n\n  var value = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByteAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value: value,\n    description: COLOR_TYPES[value] || 'Unknown'\n  };\n}\n\nfunction getCompression(dataView, fileDataOffset) {\n  var OFFSET = 10;\n  var SIZE = 1;\n\n  if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n\n  var value = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByteAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value: value,\n    description: value === 0 ? 'Deflate/Inflate' : 'Unknown'\n  };\n}\n\nfunction getFilter(dataView, fileDataOffset) {\n  var OFFSET = 11;\n  var SIZE = 1;\n\n  if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n\n  var value = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByteAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value: value,\n    description: value === 0 ? 'Adaptive' : 'Unknown'\n  };\n}\n\nfunction getInterlace(dataView, fileDataOffset) {\n  var OFFSET = 12;\n  var SIZE = 1;\n  var INTERLACE_TYPES = {\n    0: 'Noninterlaced',\n    1: 'Adam7 Interlace'\n  };\n\n  if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n    return undefined;\n  }\n\n  var value = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByteAt(dataView, fileDataOffset + OFFSET);\n  return {\n    value: value,\n    description: INTERLACE_TYPES[value] || 'Unknown'\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/png-file-tags.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/tag-decoder.js":
/*!****************************************************!*\
  !*** ./node_modules/exifreader/src/tag-decoder.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _text_decoder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./text-decoder.js */ \"./node_modules/exifreader/src/text-decoder.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nvar TAG_HEADER_SIZE = 5;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  decode: decode,\n  TAG_HEADER_SIZE: TAG_HEADER_SIZE\n});\n\nfunction decode(encoding, tagValue) {\n  var Decoder = _text_decoder_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get();\n\n  if (typeof Decoder !== 'undefined' && encoding !== undefined) {\n    try {\n      return new Decoder(encoding).decode(Uint8Array.from(tagValue));\n    } catch (error) {// Pass through and fall back to ASCII decoding.\n    }\n  }\n\n  var stringValue = tagValue.map(function (charCode) {\n    return String.fromCharCode(charCode);\n  }).join('');\n  return decodeAsciiValue(stringValue);\n}\n\nfunction decodeAsciiValue(asciiValue) {\n  try {\n    return decodeURIComponent(escape(asciiValue));\n  } catch (error) {\n    return asciiValue;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvdGFnLWRlY29kZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7O0FBSUE7QUFFQSxJQUFNQyxlQUFlLEdBQUcsQ0FBeEI7QUFFQSxpRUFBZTtBQUNYQyxFQUFBQSxNQUFNLEVBQU5BLE1BRFc7QUFFWEQsRUFBQUEsZUFBZSxFQUFmQTtBQUZXLENBQWY7O0FBS0EsU0FBU0MsTUFBVCxDQUFnQkMsUUFBaEIsRUFBMEJDLFFBQTFCLEVBQW9DO0FBQ2hDLE1BQU1DLE9BQU8sR0FBR0wsNERBQUEsRUFBaEI7O0FBQ0EsTUFBSyxPQUFPSyxPQUFQLEtBQW1CLFdBQXBCLElBQXFDRixRQUFRLEtBQUtJLFNBQXRELEVBQWtFO0FBQzlELFFBQUk7QUFDQSxhQUFPLElBQUlGLE9BQUosQ0FBWUYsUUFBWixFQUFzQkQsTUFBdEIsQ0FBNkJNLFVBQVUsQ0FBQ0MsSUFBWCxDQUFnQkwsUUFBaEIsQ0FBN0IsQ0FBUDtBQUNILEtBRkQsQ0FFRSxPQUFPTSxLQUFQLEVBQWMsQ0FDWjtBQUNIO0FBQ0o7O0FBRUQsTUFBTUMsV0FBVyxHQUFHUCxRQUFRLENBQUNRLEdBQVQsQ0FBYSxVQUFDQyxRQUFEO0FBQUEsV0FBY0MsTUFBTSxDQUFDQyxZQUFQLENBQW9CRixRQUFwQixDQUFkO0FBQUEsR0FBYixFQUEwREcsSUFBMUQsQ0FBK0QsRUFBL0QsQ0FBcEI7QUFDQSxTQUFPQyxnQkFBZ0IsQ0FBQ04sV0FBRCxDQUF2QjtBQUNIOztBQUVELFNBQVNNLGdCQUFULENBQTBCQyxVQUExQixFQUFzQztBQUNsQyxNQUFJO0FBQ0EsV0FBT0Msa0JBQWtCLENBQUNDLE1BQU0sQ0FBQ0YsVUFBRCxDQUFQLENBQXpCO0FBQ0gsR0FGRCxDQUVFLE9BQU9SLEtBQVAsRUFBYztBQUNaLFdBQU9RLFVBQVA7QUFDSDtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQnJvd3NlckltYWdlUmVzaXplci8uL25vZGVfbW9kdWxlcy9leGlmcmVhZGVyL3NyYy90YWctZGVjb2Rlci5qcz85ZGM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIFRoaXMgU291cmNlIENvZGUgRm9ybSBpcyBzdWJqZWN0IHRvIHRoZSB0ZXJtcyBvZiB0aGUgTW96aWxsYSBQdWJsaWNcbiAqIExpY2Vuc2UsIHYuIDIuMC4gSWYgYSBjb3B5IG9mIHRoZSBNUEwgd2FzIG5vdCBkaXN0cmlidXRlZCB3aXRoIHRoaXNcbiAqIGZpbGUsIFlvdSBjYW4gb2J0YWluIG9uZSBhdCBodHRwczovL21vemlsbGEub3JnL01QTC8yLjAvLiAqL1xuXG5pbXBvcnQgVGV4dERlY29kZXIgZnJvbSAnLi90ZXh0LWRlY29kZXIuanMnO1xuXG5jb25zdCBUQUdfSEVBREVSX1NJWkUgPSA1O1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgZGVjb2RlLFxuICAgIFRBR19IRUFERVJfU0laRVxufTtcblxuZnVuY3Rpb24gZGVjb2RlKGVuY29kaW5nLCB0YWdWYWx1ZSkge1xuICAgIGNvbnN0IERlY29kZXIgPSBUZXh0RGVjb2Rlci5nZXQoKTtcbiAgICBpZiAoKHR5cGVvZiBEZWNvZGVyICE9PSAndW5kZWZpbmVkJykgJiYgKGVuY29kaW5nICE9PSB1bmRlZmluZWQpKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IERlY29kZXIoZW5jb2RpbmcpLmRlY29kZShVaW50OEFycmF5LmZyb20odGFnVmFsdWUpKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIC8vIFBhc3MgdGhyb3VnaCBhbmQgZmFsbCBiYWNrIHRvIEFTQ0lJIGRlY29kaW5nLlxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3Qgc3RyaW5nVmFsdWUgPSB0YWdWYWx1ZS5tYXAoKGNoYXJDb2RlKSA9PiBTdHJpbmcuZnJvbUNoYXJDb2RlKGNoYXJDb2RlKSkuam9pbignJyk7XG4gICAgcmV0dXJuIGRlY29kZUFzY2lpVmFsdWUoc3RyaW5nVmFsdWUpO1xufVxuXG5mdW5jdGlvbiBkZWNvZGVBc2NpaVZhbHVlKGFzY2lpVmFsdWUpIHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGVzY2FwZShhc2NpaVZhbHVlKSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGFzY2lpVmFsdWU7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIlRleHREZWNvZGVyIiwiVEFHX0hFQURFUl9TSVpFIiwiZGVjb2RlIiwiZW5jb2RpbmciLCJ0YWdWYWx1ZSIsIkRlY29kZXIiLCJnZXQiLCJ1bmRlZmluZWQiLCJVaW50OEFycmF5IiwiZnJvbSIsImVycm9yIiwic3RyaW5nVmFsdWUiLCJtYXAiLCJjaGFyQ29kZSIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsImpvaW4iLCJkZWNvZGVBc2NpaVZhbHVlIiwiYXNjaWlWYWx1ZSIsImRlY29kZVVSSUNvbXBvbmVudCIsImVzY2FwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/tag-decoder.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/tag-names-0th-ifd.js":
/*!**********************************************************!*\
  !*** ./node_modules/exifreader/src/tag-names-0th-ifd.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _tag_names_common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tag-names-common.js */ \"./node_modules/exifreader/src/tag-names-common.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  0x000b: 'ProcessingSoftware',\n  0x00fe: {\n    name: 'SubfileType',\n    description: function description(value) {\n      return {\n        0x0: 'Full-resolution image',\n        0x1: 'Reduced-resolution image',\n        0x2: 'Single page of multi-page image',\n        0x3: 'Single page of multi-page reduced-resolution image',\n        0x4: 'Transparency mask',\n        0x5: 'Transparency mask of reduced-resolution image',\n        0x6: 'Transparency mask of multi-page image',\n        0x7: 'Transparency mask of reduced-resolution multi-page image',\n        0x10001: 'Alternate reduced-resolution image',\n        0xffffffff: 'Invalid'\n      }[value] || 'Unknown';\n    }\n  },\n  0x00ff: {\n    name: 'OldSubfileType',\n    description: function description(value) {\n      return {\n        0: 'Full-resolution image',\n        1: 'Reduced-resolution image',\n        2: 'Single page of multi-page image'\n      }[value] || 'Unknown';\n    }\n  },\n  0x0100: 'ImageWidth',\n  0x0101: 'ImageLength',\n  0x0102: 'BitsPerSample',\n  0x0103: 'Compression',\n  0x0106: 'PhotometricInterpretation',\n  0x0107: {\n    name: 'Thresholding',\n    description: function description(value) {\n      return {\n        1: 'No dithering or halftoning',\n        2: 'Ordered dither or halfton',\n        3: 'Randomized dither'\n      }[value] || 'Unknown';\n    }\n  },\n  0x0108: 'CellWidth',\n  0x0109: 'CellLength',\n  0x010a: {\n    name: 'FillOrder',\n    description: function description(value) {\n      return {\n        1: 'Normal',\n        2: 'Reversed'\n      }[value] || 'Unknown';\n    }\n  },\n  0x010d: 'DocumentName',\n  0x010e: 'ImageDescription',\n  0x010f: 'Make',\n  0x0110: 'Model',\n  0x0111: 'StripOffsets',\n  0x0112: {\n    name: 'Orientation',\n    description: function description(value) {\n      if (value === 1) {\n        return 'top-left';\n      }\n\n      if (value === 2) {\n        return 'top-right';\n      }\n\n      if (value === 3) {\n        return 'bottom-right';\n      }\n\n      if (value === 4) {\n        return 'bottom-left';\n      }\n\n      if (value === 5) {\n        return 'left-top';\n      }\n\n      if (value === 6) {\n        return 'right-top';\n      }\n\n      if (value === 7) {\n        return 'right-bottom';\n      }\n\n      if (value === 8) {\n        return 'left-bottom';\n      }\n\n      return 'Undefined';\n    }\n  },\n  0x0115: 'SamplesPerPixel',\n  0x0116: 'RowsPerStrip',\n  0x0117: 'StripByteCounts',\n  0x0118: 'MinSampleValue',\n  0x0119: 'MaxSampleValue',\n  0x011a: {\n    'name': 'XResolution',\n    'description': function description(value) {\n      return '' + Math.round(value[0] / value[1]);\n    }\n  },\n  0x011b: {\n    'name': 'YResolution',\n    'description': function description(value) {\n      return '' + Math.round(value[0] / value[1]);\n    }\n  },\n  0x011c: 'PlanarConfiguration',\n  0x011d: 'PageName',\n  0x011e: {\n    'name': 'XPosition',\n    'description': function description(value) {\n      return '' + Math.round(value[0] / value[1]);\n    }\n  },\n  0x011f: {\n    'name': 'YPosition',\n    'description': function description(value) {\n      return '' + Math.round(value[0] / value[1]);\n    }\n  },\n  0x0122: {\n    name: 'GrayResponseUnit',\n    description: function description(value) {\n      return {\n        1: '0.1',\n        2: '0.001',\n        3: '0.0001',\n        4: '1e-05',\n        5: '1e-06'\n      }[value] || 'Unknown';\n    }\n  },\n  0x0128: {\n    name: 'ResolutionUnit',\n    description: function description(value) {\n      if (value === 2) {\n        return 'inches';\n      }\n\n      if (value === 3) {\n        return 'centimeters';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x0129: 'PageNumber',\n  0x012d: 'TransferFunction',\n  0x0131: 'Software',\n  0x0132: 'DateTime',\n  0x013b: 'Artist',\n  0x013c: 'HostComputer',\n  0x013d: 'Predictor',\n  0x013e: {\n    'name': 'WhitePoint',\n    'description': function description(values) {\n      return values.map(function (value) {\n        return \"\".concat(value[0], \"/\").concat(value[1]);\n      }).join(', ');\n    }\n  },\n  0x013f: {\n    'name': 'PrimaryChromaticities',\n    'description': function description(values) {\n      return values.map(function (value) {\n        return \"\".concat(value[0], \"/\").concat(value[1]);\n      }).join(', ');\n    }\n  },\n  0x0141: 'HalftoneHints',\n  0x0142: 'TileWidth',\n  0x0143: 'TileLength',\n  0x014a: 'A100DataOffset',\n  0x014c: {\n    name: 'InkSet',\n    description: function description(value) {\n      return {\n        1: 'CMYK',\n        2: 'Not CMYK'\n      }[value] || 'Unknown';\n    }\n  },\n  0x0151: 'TargetPrinter',\n  0x0152: {\n    name: 'ExtraSamples',\n    description: function description(value) {\n      return {\n        0: 'Unspecified',\n        1: 'Associated Alpha',\n        2: 'Unassociated Alpha'\n      }[value] || 'Unknown';\n    }\n  },\n  0x0153: {\n    name: 'SampleFormat',\n    description: function description(value) {\n      var formats = {\n        1: 'Unsigned',\n        2: 'Signed',\n        3: 'Float',\n        4: 'Undefined',\n        5: 'Complex int',\n        6: 'Complex float'\n      };\n\n      if (!Array.isArray(value)) {\n        return 'Unknown';\n      }\n\n      return value.map(function (sample) {\n        return formats[sample] || 'Unknown';\n      }).join(', ');\n    }\n  },\n  0x0201: 'JPEGInterchangeFormat',\n  0x0202: 'JPEGInterchangeFormatLength',\n  0x0211: {\n    'name': 'YCbCrCoefficients',\n    'description': function description(values) {\n      return values.map(function (value) {\n        return '' + value[0] / value[1];\n      }).join('/');\n    }\n  },\n  0x0212: 'YCbCrSubSampling',\n  0x0213: {\n    name: 'YCbCrPositioning',\n    description: function description(value) {\n      if (value === 1) {\n        return 'centered';\n      }\n\n      if (value === 2) {\n        return 'co-sited';\n      }\n\n      return 'undefined ' + value;\n    }\n  },\n  0x0214: {\n    'name': 'ReferenceBlackWhite',\n    'description': function description(values) {\n      return values.map(function (value) {\n        return '' + value[0] / value[1];\n      }).join(', ');\n    }\n  },\n  0x02bc: 'ApplicationNotes',\n  0x4746: 'Rating',\n  0x4749: 'RatingPercent',\n  0x8298: {\n    name: 'Copyright',\n    description: function description(value) {\n      return value.join('; ');\n    }\n  },\n  0x830e: 'PixelScale',\n  0x83bb: 'IPTC-NAA',\n  0x8480: 'IntergraphMatrix',\n  0x8482: 'ModelTiePoint',\n  0x8546: 'SEMInfo',\n  0x85d8: 'ModelTransform',\n  0x8649: 'PhotoshopSettings',\n  0x8769: 'Exif IFD Pointer',\n  0x8773: 'ICC_Profile',\n  0x87af: 'GeoTiffDirectory',\n  0x87b0: 'GeoTiffDoubleParams',\n  0x87b1: 'GeoTiffAsciiParams',\n  0x8825: 'GPS Info IFD Pointer',\n  0x9c9b: 'XPTitle',\n  0x9c9c: 'XPComment',\n  0x9c9d: 'XPAuthor',\n  0x9c9e: 'XPKeywords',\n  0x9c9f: 'XPSubject',\n  0xa480: 'GDALMetadata',\n  0xa481: 'GDALNoData',\n  0xc4a5: 'PrintIM',\n  0xc613: 'DNGBackwardVersion',\n  0xc614: 'UniqueCameraModel',\n  0xc615: 'LocalizedCameraModel',\n  0xc621: 'ColorMatrix1',\n  0xc622: 'ColorMatrix2',\n  0xc623: 'CameraCalibration1',\n  0xc624: 'CameraCalibration2',\n  0xc625: 'ReductionMatrix1',\n  0xc626: 'ReductionMatrix2',\n  0xc627: 'AnalogBalance',\n  0xc628: 'AsShotNeutral',\n  0xc629: 'AsShotWhiteXY',\n  0xc62a: 'BaselineExposure',\n  0xc62b: 'BaselineNoise',\n  0xc62c: 'BaselineSharpness',\n  0xc62e: 'LinearResponseLimit',\n  0xc62f: 'CameraSerialNumber',\n  0xc630: 'DNGLensInfo',\n  0xc633: 'ShadowScale',\n  0xc635: {\n    name: 'MakerNoteSafety',\n    description: function description(value) {\n      return {\n        0: 'Unsafe',\n        1: 'Safe'\n      }[value] || 'Unknown';\n    }\n  },\n  0xc65a: {\n    name: 'CalibrationIlluminant1',\n    description: _tag_names_common_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].LightSource\n  },\n  0xc65b: {\n    name: 'CalibrationIlluminant2',\n    description: _tag_names_common_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].LightSource\n  },\n  0xc65d: 'RawDataUniqueID',\n  0xc68b: 'OriginalRawFileName',\n  0xc68c: 'OriginalRawFileData',\n  0xc68f: 'AsShotICCProfile',\n  0xc690: 'AsShotPreProfileMatrix',\n  0xc691: 'CurrentICCProfile',\n  0xc692: 'CurrentPreProfileMatrix',\n  0xc6bf: 'ColorimetricReference',\n  0xc6c5: 'SRawType',\n  0xc6d2: 'PanasonicTitle',\n  0xc6d3: 'PanasonicTitle2',\n  0xc6f3: 'CameraCalibrationSig',\n  0xc6f4: 'ProfileCalibrationSig',\n  0xc6f5: 'ProfileIFD',\n  0xc6f6: 'AsShotProfileName',\n  0xc6f8: 'ProfileName',\n  0xc6f9: 'ProfileHueSatMapDims',\n  0xc6fa: 'ProfileHueSatMapData1',\n  0xc6fb: 'ProfileHueSatMapData2',\n  0xc6fc: 'ProfileToneCurve',\n  0xc6fd: {\n    name: 'ProfileEmbedPolicy',\n    description: function description(value) {\n      return {\n        0: 'Allow Copying',\n        1: 'Embed if Used',\n        2: 'Never Embed',\n        3: 'No Restrictions'\n      }[value] || 'Unknown';\n    }\n  },\n  0xc6fe: 'ProfileCopyright',\n  0xc714: 'ForwardMatrix1',\n  0xc715: 'ForwardMatrix2',\n  0xc716: 'PreviewApplicationName',\n  0xc717: 'PreviewApplicationVersion',\n  0xc718: 'PreviewSettingsName',\n  0xc719: 'PreviewSettingsDigest',\n  0xc71a: {\n    name: 'PreviewColorSpace',\n    description: function description(value) {\n      return {\n        1: 'Gray Gamma 2.2',\n        2: 'sRGB',\n        3: 'Adobe RGB',\n        4: 'ProPhoto RGB'\n      }[value] || 'Unknown';\n    }\n  },\n  0xc71b: 'PreviewDateTime',\n  0xc71c: 'RawImageDigest',\n  0xc71d: 'OriginalRawFileDigest',\n  0xc725: 'ProfileLookTableDims',\n  0xc726: 'ProfileLookTableData',\n  0xc763: 'TimeCodes',\n  0xc764: 'FrameRate',\n  0xc772: 'TStop',\n  0xc789: 'ReelName',\n  0xc791: 'OriginalDefaultFinalSize',\n  0xc792: 'OriginalBestQualitySize',\n  0xc793: 'OriginalDefaultCropSize',\n  0xc7a1: 'CameraLabel',\n  0xc7a3: {\n    name: 'ProfileHueSatMapEncoding',\n    description: function description(value) {\n      return {\n        0: 'Linear',\n        1: 'sRGB'\n      }[value] || 'Unknown';\n    }\n  },\n  0xc7a4: {\n    name: 'ProfileLookTableEncoding',\n    description: function description(value) {\n      return {\n        0: 'Linear',\n        1: 'sRGB'\n      }[value] || 'Unknown';\n    }\n  },\n  0xc7a5: 'BaselineExposureOffset',\n  0xc7a6: {\n    name: 'DefaultBlackRender',\n    description: function description(value) {\n      return {\n        0: 'Auto',\n        1: 'None'\n      }[value] || 'Unknown';\n    }\n  },\n  0xc7a7: 'NewRawImageDigest',\n  0xc7a8: 'RawToPreviewGain'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/tag-names-0th-ifd.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/tag-names-common.js":
/*!*********************************************************!*\
  !*** ./node_modules/exifreader/src/tag-names-common.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  'LightSource': function LightSource(value) {\n    if (value === 1) {\n      return 'Daylight';\n    } else if (value === 2) {\n      return 'Fluorescent';\n    } else if (value === 3) {\n      return 'Tungsten (incandescent light)';\n    } else if (value === 4) {\n      return 'Flash';\n    } else if (value === 9) {\n      return 'Fine weather';\n    } else if (value === 10) {\n      return 'Cloudy weather';\n    } else if (value === 11) {\n      return 'Shade';\n    } else if (value === 12) {\n      return 'Daylight fluorescent (D 5700 – 7100K)';\n    } else if (value === 13) {\n      return 'Day white fluorescent (N 4600 – 5400K)';\n    } else if (value === 14) {\n      return 'Cool white fluorescent (W 3900 – 4500K)';\n    } else if (value === 15) {\n      return 'White fluorescent (WW 3200 – 3700K)';\n    } else if (value === 17) {\n      return 'Standard light A';\n    } else if (value === 18) {\n      return 'Standard light B';\n    } else if (value === 19) {\n      return 'Standard light C';\n    } else if (value === 20) {\n      return 'D55';\n    } else if (value === 21) {\n      return 'D65';\n    } else if (value === 22) {\n      return 'D75';\n    } else if (value === 23) {\n      return 'D50';\n    } else if (value === 24) {\n      return 'ISO studio tungsten';\n    } else if (value === 255) {\n      return 'Other light source';\n    }\n\n    return 'Unknown';\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvdGFnLW5hbWVzLWNvbW1vbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7OztBQUlBLGlFQUFlO0FBQ1gsaUJBQWUscUJBQUNBLEtBQUQsRUFBVztBQUN0QixRQUFJQSxLQUFLLEtBQUssQ0FBZCxFQUFpQjtBQUNiLGFBQU8sVUFBUDtBQUNILEtBRkQsTUFFTyxJQUFJQSxLQUFLLEtBQUssQ0FBZCxFQUFpQjtBQUNwQixhQUFPLGFBQVA7QUFDSCxLQUZNLE1BRUEsSUFBSUEsS0FBSyxLQUFLLENBQWQsRUFBaUI7QUFDcEIsYUFBTywrQkFBUDtBQUNILEtBRk0sTUFFQSxJQUFJQSxLQUFLLEtBQUssQ0FBZCxFQUFpQjtBQUNwQixhQUFPLE9BQVA7QUFDSCxLQUZNLE1BRUEsSUFBSUEsS0FBSyxLQUFLLENBQWQsRUFBaUI7QUFDcEIsYUFBTyxjQUFQO0FBQ0gsS0FGTSxNQUVBLElBQUlBLEtBQUssS0FBSyxFQUFkLEVBQWtCO0FBQ3JCLGFBQU8sZ0JBQVA7QUFDSCxLQUZNLE1BRUEsSUFBSUEsS0FBSyxLQUFLLEVBQWQsRUFBa0I7QUFDckIsYUFBTyxPQUFQO0FBQ0gsS0FGTSxNQUVBLElBQUlBLEtBQUssS0FBSyxFQUFkLEVBQWtCO0FBQ3JCLGFBQU8sdUNBQVA7QUFDSCxLQUZNLE1BRUEsSUFBSUEsS0FBSyxLQUFLLEVBQWQsRUFBa0I7QUFDckIsYUFBTyx3Q0FBUDtBQUNILEtBRk0sTUFFQSxJQUFJQSxLQUFLLEtBQUssRUFBZCxFQUFrQjtBQUNyQixhQUFPLHlDQUFQO0FBQ0gsS0FGTSxNQUVBLElBQUlBLEtBQUssS0FBSyxFQUFkLEVBQWtCO0FBQ3JCLGFBQU8scUNBQVA7QUFDSCxLQUZNLE1BRUEsSUFBSUEsS0FBSyxLQUFLLEVBQWQsRUFBa0I7QUFDckIsYUFBTyxrQkFBUDtBQUNILEtBRk0sTUFFQSxJQUFJQSxLQUFLLEtBQUssRUFBZCxFQUFrQjtBQUNyQixhQUFPLGtCQUFQO0FBQ0gsS0FGTSxNQUVBLElBQUlBLEtBQUssS0FBSyxFQUFkLEVBQWtCO0FBQ3JCLGFBQU8sa0JBQVA7QUFDSCxLQUZNLE1BRUEsSUFBSUEsS0FBSyxLQUFLLEVBQWQsRUFBa0I7QUFDckIsYUFBTyxLQUFQO0FBQ0gsS0FGTSxNQUVBLElBQUlBLEtBQUssS0FBSyxFQUFkLEVBQWtCO0FBQ3JCLGFBQU8sS0FBUDtBQUNILEtBRk0sTUFFQSxJQUFJQSxLQUFLLEtBQUssRUFBZCxFQUFrQjtBQUNyQixhQUFPLEtBQVA7QUFDSCxLQUZNLE1BRUEsSUFBSUEsS0FBSyxLQUFLLEVBQWQsRUFBa0I7QUFDckIsYUFBTyxLQUFQO0FBQ0gsS0FGTSxNQUVBLElBQUlBLEtBQUssS0FBSyxFQUFkLEVBQWtCO0FBQ3JCLGFBQU8scUJBQVA7QUFDSCxLQUZNLE1BRUEsSUFBSUEsS0FBSyxLQUFLLEdBQWQsRUFBbUI7QUFDdEIsYUFBTyxvQkFBUDtBQUNIOztBQUNELFdBQU8sU0FBUDtBQUNIO0FBNUNVLENBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ccm93c2VySW1hZ2VSZXNpemVyLy4vbm9kZV9tb2R1bGVzL2V4aWZyZWFkZXIvc3JjL3RhZy1uYW1lcy1jb21tb24uanM/ZmJkMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBUaGlzIFNvdXJjZSBDb2RlIEZvcm0gaXMgc3ViamVjdCB0byB0aGUgdGVybXMgb2YgdGhlIE1vemlsbGEgUHVibGljXG4gKiBMaWNlbnNlLCB2LiAyLjAuIElmIGEgY29weSBvZiB0aGUgTVBMIHdhcyBub3QgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzXG4gKiBmaWxlLCBZb3UgY2FuIG9idGFpbiBvbmUgYXQgaHR0cHM6Ly9tb3ppbGxhLm9yZy9NUEwvMi4wLy4gKi9cblxuZXhwb3J0IGRlZmF1bHQge1xuICAgICdMaWdodFNvdXJjZSc6ICh2YWx1ZSkgPT4ge1xuICAgICAgICBpZiAodmFsdWUgPT09IDEpIHtcbiAgICAgICAgICAgIHJldHVybiAnRGF5bGlnaHQnO1xuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlID09PSAyKSB7XG4gICAgICAgICAgICByZXR1cm4gJ0ZsdW9yZXNjZW50JztcbiAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSA9PT0gMykge1xuICAgICAgICAgICAgcmV0dXJuICdUdW5nc3RlbiAoaW5jYW5kZXNjZW50IGxpZ2h0KSc7XG4gICAgICAgIH0gZWxzZSBpZiAodmFsdWUgPT09IDQpIHtcbiAgICAgICAgICAgIHJldHVybiAnRmxhc2gnO1xuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlID09PSA5KSB7XG4gICAgICAgICAgICByZXR1cm4gJ0ZpbmUgd2VhdGhlcic7XG4gICAgICAgIH0gZWxzZSBpZiAodmFsdWUgPT09IDEwKSB7XG4gICAgICAgICAgICByZXR1cm4gJ0Nsb3VkeSB3ZWF0aGVyJztcbiAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSA9PT0gMTEpIHtcbiAgICAgICAgICAgIHJldHVybiAnU2hhZGUnO1xuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlID09PSAxMikge1xuICAgICAgICAgICAgcmV0dXJuICdEYXlsaWdodCBmbHVvcmVzY2VudCAoRCA1NzAwIOKAkyA3MTAwSyknO1xuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlID09PSAxMykge1xuICAgICAgICAgICAgcmV0dXJuICdEYXkgd2hpdGUgZmx1b3Jlc2NlbnQgKE4gNDYwMCDigJMgNTQwMEspJztcbiAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSA9PT0gMTQpIHtcbiAgICAgICAgICAgIHJldHVybiAnQ29vbCB3aGl0ZSBmbHVvcmVzY2VudCAoVyAzOTAwIOKAkyA0NTAwSyknO1xuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlID09PSAxNSkge1xuICAgICAgICAgICAgcmV0dXJuICdXaGl0ZSBmbHVvcmVzY2VudCAoV1cgMzIwMCDigJMgMzcwMEspJztcbiAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSA9PT0gMTcpIHtcbiAgICAgICAgICAgIHJldHVybiAnU3RhbmRhcmQgbGlnaHQgQSc7XG4gICAgICAgIH0gZWxzZSBpZiAodmFsdWUgPT09IDE4KSB7XG4gICAgICAgICAgICByZXR1cm4gJ1N0YW5kYXJkIGxpZ2h0IEInO1xuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlID09PSAxOSkge1xuICAgICAgICAgICAgcmV0dXJuICdTdGFuZGFyZCBsaWdodCBDJztcbiAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSA9PT0gMjApIHtcbiAgICAgICAgICAgIHJldHVybiAnRDU1JztcbiAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSA9PT0gMjEpIHtcbiAgICAgICAgICAgIHJldHVybiAnRDY1JztcbiAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSA9PT0gMjIpIHtcbiAgICAgICAgICAgIHJldHVybiAnRDc1JztcbiAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSA9PT0gMjMpIHtcbiAgICAgICAgICAgIHJldHVybiAnRDUwJztcbiAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSA9PT0gMjQpIHtcbiAgICAgICAgICAgIHJldHVybiAnSVNPIHN0dWRpbyB0dW5nc3Rlbic7XG4gICAgICAgIH0gZWxzZSBpZiAodmFsdWUgPT09IDI1NSkge1xuICAgICAgICAgICAgcmV0dXJuICdPdGhlciBsaWdodCBzb3VyY2UnO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAnVW5rbm93bic7XG4gICAgfVxufTtcbiJdLCJuYW1lcyI6WyJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/tag-names-common.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/tag-names-exif-ifd.js":
/*!***********************************************************!*\
  !*** ./node_modules/exifreader/src/tag-names-exif-ifd.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tag-names-utils.js */ \"./node_modules/exifreader/src/tag-names-utils.js\");\n/* harmony import */ var _tag_names_common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tag-names-common.js */ \"./node_modules/exifreader/src/tag-names-common.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  0x829a: {\n    'name': 'ExposureTime',\n    'description': function description(value) {\n      if (value[0] >= value[1]) {\n        return \"\".concat(Math.round(value[0] / value[1]));\n      }\n\n      if (value[0] !== 0) {\n        return \"1/\".concat(Math.round(value[1] / value[0]));\n      }\n\n      return \"0/\".concat(value[1]);\n    }\n  },\n  0x829d: {\n    'name': 'FNumber',\n    'description': function description(value) {\n      return \"f/\".concat(value[0] / value[1]);\n    }\n  },\n  0x8822: {\n    'name': 'ExposureProgram',\n    'description': function description(value) {\n      if (value === 0) {\n        return 'Undefined';\n      } else if (value === 1) {\n        return 'Manual';\n      } else if (value === 2) {\n        return 'Normal program';\n      } else if (value === 3) {\n        return 'Aperture priority';\n      } else if (value === 4) {\n        return 'Shutter priority';\n      } else if (value === 5) {\n        return 'Creative program';\n      } else if (value === 6) {\n        return 'Action program';\n      } else if (value === 7) {\n        return 'Portrait mode';\n      } else if (value === 8) {\n        return 'Landscape mode';\n      } else if (value === 9) {\n        return 'Bulb';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x8824: 'SpectralSensitivity',\n  0x8827: 'ISOSpeedRatings',\n  0x8828: {\n    'name': 'OECF',\n    'description': function description() {\n      return '[Raw OECF table data]';\n    }\n  },\n  0x882a: 'TimeZoneOffset',\n  0x882b: 'SelfTimerMode',\n  0x8830: {\n    name: 'SensitivityType',\n    description: function description(value) {\n      return {\n        1: 'Standard Output Sensitivity',\n        2: 'Recommended Exposure Index',\n        3: 'ISO Speed',\n        4: 'Standard Output Sensitivity and Recommended Exposure Index',\n        5: 'Standard Output Sensitivity and ISO Speed',\n        6: 'Recommended Exposure Index and ISO Speed',\n        7: 'Standard Output Sensitivity, Recommended Exposure Index and ISO Speed'\n      }[value] || 'Unknown';\n    }\n  },\n  0x8831: 'StandardOutputSensitivity',\n  0x8832: 'RecommendedExposureIndex',\n  0x8833: 'ISOSpeed',\n  0x8834: 'ISOSpeedLatitudeyyy',\n  0x8835: 'ISOSpeedLatitudezzz',\n  0x9000: {\n    'name': 'ExifVersion',\n    'description': function description(value) {\n      return (0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringValue)(value);\n    }\n  },\n  0x9003: 'DateTimeOriginal',\n  0x9004: 'DateTimeDigitized',\n  0x9009: 'GooglePlusUploadCode',\n  0x9010: 'OffsetTime',\n  0x9011: 'OffsetTimeOriginal',\n  0x9012: 'OffsetTimeDigitized',\n  0x9101: {\n    'name': 'ComponentsConfiguration',\n    'description': function description(value) {\n      return value.map(function (character) {\n        if (character === 0x31) {\n          return 'Y';\n        } else if (character === 0x32) {\n          return 'Cb';\n        } else if (character === 0x33) {\n          return 'Cr';\n        } else if (character === 0x34) {\n          return 'R';\n        } else if (character === 0x35) {\n          return 'G';\n        } else if (character === 0x36) {\n          return 'B';\n        }\n      }).join('');\n    }\n  },\n  0x9102: 'CompressedBitsPerPixel',\n  0x9201: {\n    'name': 'ShutterSpeedValue',\n    'description': function description(value) {\n      var denominator = Math.pow(2, value[0] / value[1]);\n\n      if (denominator <= 1) {\n        return \"\".concat(Math.round(1 / denominator));\n      }\n\n      return \"1/\".concat(Math.round(denominator));\n    }\n  },\n  0x9202: {\n    'name': 'ApertureValue',\n    'description': function description(value) {\n      return Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2);\n    }\n  },\n  0x9203: 'BrightnessValue',\n  0x9204: 'ExposureBiasValue',\n  0x9205: {\n    'name': 'MaxApertureValue',\n    'description': function description(value) {\n      return Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2);\n    }\n  },\n  0x9206: {\n    'name': 'SubjectDistance',\n    'description': function description(value) {\n      return value[0] / value[1] + ' m';\n    }\n  },\n  0x9207: {\n    'name': 'MeteringMode',\n    'description': function description(value) {\n      if (value === 1) {\n        return 'Average';\n      } else if (value === 2) {\n        return 'CenterWeightedAverage';\n      } else if (value === 3) {\n        return 'Spot';\n      } else if (value === 4) {\n        return 'MultiSpot';\n      } else if (value === 5) {\n        return 'Pattern';\n      } else if (value === 6) {\n        return 'Partial';\n      } else if (value === 255) {\n        return 'Other';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x9208: {\n    'name': 'LightSource',\n    description: _tag_names_common_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].LightSource\n  },\n  0x9209: {\n    'name': 'Flash',\n    'description': function description(value) {\n      if (value === 0x00) {\n        return 'Flash did not fire';\n      } else if (value === 0x01) {\n        return 'Flash fired';\n      } else if (value === 0x05) {\n        return 'Strobe return light not detected';\n      } else if (value === 0x07) {\n        return 'Strobe return light detected';\n      } else if (value === 0x09) {\n        return 'Flash fired, compulsory flash mode';\n      } else if (value === 0x0d) {\n        return 'Flash fired, compulsory flash mode, return light not detected';\n      } else if (value === 0x0f) {\n        return 'Flash fired, compulsory flash mode, return light detected';\n      } else if (value === 0x10) {\n        return 'Flash did not fire, compulsory flash mode';\n      } else if (value === 0x18) {\n        return 'Flash did not fire, auto mode';\n      } else if (value === 0x19) {\n        return 'Flash fired, auto mode';\n      } else if (value === 0x1d) {\n        return 'Flash fired, auto mode, return light not detected';\n      } else if (value === 0x1f) {\n        return 'Flash fired, auto mode, return light detected';\n      } else if (value === 0x20) {\n        return 'No flash function';\n      } else if (value === 0x41) {\n        return 'Flash fired, red-eye reduction mode';\n      } else if (value === 0x45) {\n        return 'Flash fired, red-eye reduction mode, return light not detected';\n      } else if (value === 0x47) {\n        return 'Flash fired, red-eye reduction mode, return light detected';\n      } else if (value === 0x49) {\n        return 'Flash fired, compulsory flash mode, red-eye reduction mode';\n      } else if (value === 0x4d) {\n        return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected';\n      } else if (value === 0x4f) {\n        return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected';\n      } else if (value === 0x59) {\n        return 'Flash fired, auto mode, red-eye reduction mode';\n      } else if (value === 0x5d) {\n        return 'Flash fired, auto mode, return light not detected, red-eye reduction mode';\n      } else if (value === 0x5f) {\n        return 'Flash fired, auto mode, return light detected, red-eye reduction mode';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x920a: {\n    'name': 'FocalLength',\n    'description': function description(value) {\n      return value[0] / value[1] + ' mm';\n    }\n  },\n  0x9211: 'ImageNumber',\n  0x9212: {\n    name: 'SecurityClassification',\n    description: function description(value) {\n      return {\n        'C': 'Confidential',\n        'R': 'Restricted',\n        'S': 'Secret',\n        'T': 'Top Secret',\n        'U': 'Unclassified'\n      }[value] || 'Unknown';\n    }\n  },\n  0x9213: 'ImageHistory',\n  0x9214: {\n    'name': 'SubjectArea',\n    'description': function description(value) {\n      if (value.length === 2) {\n        return \"Location; X: \".concat(value[0], \", Y: \").concat(value[1]);\n      } else if (value.length === 3) {\n        return \"Circle; X: \".concat(value[0], \", Y: \").concat(value[1], \", diameter: \").concat(value[2]);\n      } else if (value.length === 4) {\n        return \"Rectangle; X: \".concat(value[0], \", Y: \").concat(value[1], \", width: \").concat(value[2], \", height: \").concat(value[3]);\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x927c: {\n    'name': 'MakerNote',\n    'description': function description() {\n      return '[Raw maker note data]';\n    }\n  },\n  0x9286: {\n    'name': 'UserComment',\n    'description': _tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getEncodedString\n  },\n  0x9290: 'SubSecTime',\n  0x9291: 'SubSecTimeOriginal',\n  0x9292: 'SubSecTimeDigitized',\n  0x9400: {\n    'name': 'AmbientTemperature',\n    'description': function description(value) {\n      return value[0] / value[1] + ' °C';\n    }\n  },\n  0x9401: {\n    'name': 'Humidity',\n    'description': function description(value) {\n      return value[0] / value[1] + ' %';\n    }\n  },\n  0x9402: {\n    'name': 'Pressure',\n    'description': function description(value) {\n      return value[0] / value[1] + ' hPa';\n    }\n  },\n  0x9403: {\n    'name': 'WaterDepth',\n    'description': function description(value) {\n      return value[0] / value[1] + ' m';\n    }\n  },\n  0x9404: {\n    'name': 'Acceleration',\n    'description': function description(value) {\n      return value[0] / value[1] + ' mGal';\n    }\n  },\n  0x9405: {\n    'name': 'CameraElevationAngle',\n    'description': function description(value) {\n      return value[0] / value[1] + ' °';\n    }\n  },\n  0xa000: {\n    'name': 'FlashpixVersion',\n    'description': function description(value) {\n      return value.map(function (charCode) {\n        return String.fromCharCode(charCode);\n      }).join('');\n    }\n  },\n  0xa001: {\n    'name': 'ColorSpace',\n    'description': function description(value) {\n      if (value === 1) {\n        return 'sRGB';\n      } else if (value === 0xffff) {\n        return 'Uncalibrated';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0xa002: 'PixelXDimension',\n  0xa003: 'PixelYDimension',\n  0xa004: 'RelatedSoundFile',\n  0xa005: 'Interoperability IFD Pointer',\n  0xa20b: 'FlashEnergy',\n  0xa20c: {\n    'name': 'SpatialFrequencyResponse',\n    'description': function description() {\n      return '[Raw SFR table data]';\n    }\n  },\n  0xa20e: 'FocalPlaneXResolution',\n  0xa20f: 'FocalPlaneYResolution',\n  0xa210: {\n    'name': 'FocalPlaneResolutionUnit',\n    'description': function description(value) {\n      if (value === 2) {\n        return 'inches';\n      } else if (value === 3) {\n        return 'centimeters';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0xa214: {\n    'name': 'SubjectLocation',\n    'description': function description(_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          x = _ref2[0],\n          y = _ref2[1];\n\n      return \"X: \".concat(x, \", Y: \").concat(y);\n    }\n  },\n  0xa215: 'ExposureIndex',\n  0xa217: {\n    'name': 'SensingMethod',\n    'description': function description(value) {\n      if (value === 1) {\n        return 'Undefined';\n      } else if (value === 2) {\n        return 'One-chip color area sensor';\n      } else if (value === 3) {\n        return 'Two-chip color area sensor';\n      } else if (value === 4) {\n        return 'Three-chip color area sensor';\n      } else if (value === 5) {\n        return 'Color sequential area sensor';\n      } else if (value === 7) {\n        return 'Trilinear sensor';\n      } else if (value === 8) {\n        return 'Color sequential linear sensor';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0xa300: {\n    'name': 'FileSource',\n    'description': function description(value) {\n      if (value === 3) {\n        return 'DSC';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0xa301: {\n    'name': 'SceneType',\n    'description': function description(value) {\n      if (value === 1) {\n        return 'A directly photographed image';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0xa302: {\n    'name': 'CFAPattern',\n    'description': function description() {\n      return '[Raw CFA pattern table data]';\n    }\n  },\n  0xa401: {\n    'name': 'CustomRendered',\n    'description': function description(value) {\n      if (value === 0) {\n        return 'Normal process';\n      } else if (value === 1) {\n        return 'Custom process';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0xa402: {\n    'name': 'ExposureMode',\n    'description': function description(value) {\n      if (value === 0) {\n        return 'Auto exposure';\n      } else if (value === 1) {\n        return 'Manual exposure';\n      } else if (value === 2) {\n        return 'Auto bracket';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0xa403: {\n    'name': 'WhiteBalance',\n    'description': function description(value) {\n      if (value === 0) {\n        return 'Auto white balance';\n      } else if (value === 1) {\n        return 'Manual white balance';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0xa404: {\n    'name': 'DigitalZoomRatio',\n    'description': function description(value) {\n      if (value[0] === 0) {\n        return 'Digital zoom was not used';\n      }\n\n      return '' + value[0] / value[1];\n    }\n  },\n  0xa405: {\n    'name': 'FocalLengthIn35mmFilm',\n    'description': function description(value) {\n      if (value === 0) {\n        return 'Unknown';\n      }\n\n      return value;\n    }\n  },\n  0xa406: {\n    'name': 'SceneCaptureType',\n    'description': function description(value) {\n      if (value === 0) {\n        return 'Standard';\n      } else if (value === 1) {\n        return 'Landscape';\n      } else if (value === 2) {\n        return 'Portrait';\n      } else if (value === 3) {\n        return 'Night scene';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0xa407: {\n    'name': 'GainControl',\n    'description': function description(value) {\n      if (value === 0) {\n        return 'None';\n      } else if (value === 1) {\n        return 'Low gain up';\n      } else if (value === 2) {\n        return 'High gain up';\n      } else if (value === 3) {\n        return 'Low gain down';\n      } else if (value === 4) {\n        return 'High gain down';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0xa408: {\n    'name': 'Contrast',\n    'description': function description(value) {\n      if (value === 0) {\n        return 'Normal';\n      } else if (value === 1) {\n        return 'Soft';\n      } else if (value === 2) {\n        return 'Hard';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0xa409: {\n    'name': 'Saturation',\n    'description': function description(value) {\n      if (value === 0) {\n        return 'Normal';\n      } else if (value === 1) {\n        return 'Low saturation';\n      } else if (value === 2) {\n        return 'High saturation';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0xa40a: {\n    'name': 'Sharpness',\n    'description': function description(value) {\n      if (value === 0) {\n        return 'Normal';\n      } else if (value === 1) {\n        return 'Soft';\n      } else if (value === 2) {\n        return 'Hard';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0xa40b: {\n    'name': 'DeviceSettingDescription',\n    'description': function description() {\n      return '[Raw device settings table data]';\n    }\n  },\n  0xa40c: {\n    'name': 'SubjectDistanceRange',\n    'description': function description(value) {\n      if (value === 1) {\n        return 'Macro';\n      } else if (value === 2) {\n        return 'Close view';\n      } else if (value === 3) {\n        return 'Distant view';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0xa420: 'ImageUniqueID',\n  0xa430: 'CameraOwnerName',\n  0xa431: 'BodySerialNumber',\n  0xa432: {\n    'name': 'LensSpecification',\n    'description': function description(value) {\n      var focalLengths = \"\".concat(value[0][0] / value[0][1], \"-\").concat(value[1][0] / value[1][1], \" mm\");\n\n      if (value[3][1] === 0) {\n        return \"\".concat(focalLengths, \" f/?\");\n      }\n\n      return \"\".concat(focalLengths, \" f/\").concat(1 / (value[2][1] / value[2][1] / (value[3][0] / value[3][1])));\n    }\n  },\n  0xa433: 'LensMake',\n  0xa434: 'LensModel',\n  0xa435: 'LensSerialNumber',\n  0xa460: {\n    name: 'CompositeImage',\n    description: function description(value) {\n      return {\n        1: 'Not a Composite Image',\n        2: 'General Composite Image',\n        3: 'Composite Image Captured While Shooting'\n      }[value] || 'Unknown';\n    }\n  },\n  0xa461: 'SourceImageNumberOfCompositeImage',\n  0xa462: 'SourceExposureTimesOfCompositeImage',\n  0xa500: 'Gamma',\n  0xea1c: 'Padding',\n  0xea1d: 'OffsetSchema',\n  0xfde8: 'OwnerName',\n  0xfde9: 'SerialNumber',\n  0xfdea: 'Lens',\n  0xfe4c: 'RawFile',\n  0xfe4d: 'Converter',\n  0xfe4e: 'WhiteBalance',\n  0xfe51: 'Exposure',\n  0xfe52: 'Shadows',\n  0xfe53: 'Brightness',\n  0xfe54: 'Contrast',\n  0xfe55: 'Saturation',\n  0xfe56: 'Sharpness',\n  0xfe57: 'Smoothness',\n  0xfe58: 'MoireFilter'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/tag-names-exif-ifd.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/tag-names-gps-ifd.js":
/*!**********************************************************!*\
  !*** ./node_modules/exifreader/src/tag-names-gps-ifd.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tag-names-utils.js */ \"./node_modules/exifreader/src/tag-names-utils.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  0x0000: {\n    'name': 'GPSVersionID',\n    'description': function description(value) {\n      if (value[0] === 2 && value[1] === 2 && value[2] === 0 && value[3] === 0) {\n        return 'Version 2.2';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x0001: {\n    'name': 'GPSLatitudeRef',\n    'description': function description(value) {\n      var ref = value.join('');\n\n      if (ref === 'N') {\n        return 'North latitude';\n      } else if (ref === 'S') {\n        return 'South latitude';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x0002: {\n    'name': 'GPSLatitude',\n    'description': _tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getCalculatedGpsValue\n  },\n  0x0003: {\n    'name': 'GPSLongitudeRef',\n    'description': function description(value) {\n      var ref = value.join('');\n\n      if (ref === 'E') {\n        return 'East longitude';\n      } else if (ref === 'W') {\n        return 'West longitude';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x0004: {\n    'name': 'GPSLongitude',\n    'description': _tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getCalculatedGpsValue\n  },\n  0x0005: {\n    'name': 'GPSAltitudeRef',\n    'description': function description(value) {\n      if (value === 0) {\n        return 'Sea level';\n      } else if (value === 1) {\n        return 'Sea level reference (negative value)';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x0006: {\n    'name': 'GPSAltitude',\n    'description': function description(value) {\n      return value[0] / value[1] + ' m';\n    }\n  },\n  0x0007: {\n    'name': 'GPSTimeStamp',\n    'description': function description(values) {\n      return values.map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            numerator = _ref2[0],\n            denominator = _ref2[1];\n\n        var num = numerator / denominator;\n\n        if (/^\\d(\\.|$)/.test(\"\".concat(num))) {\n          return \"0\".concat(num);\n        }\n\n        return num;\n      }).join(':');\n    }\n  },\n  0x0008: 'GPSSatellites',\n  0x0009: {\n    'name': 'GPSStatus',\n    'description': function description(value) {\n      var status = value.join('');\n\n      if (status === 'A') {\n        return 'Measurement in progress';\n      } else if (status === 'V') {\n        return 'Measurement Interoperability';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x000a: {\n    'name': 'GPSMeasureMode',\n    'description': function description(value) {\n      var mode = value.join('');\n\n      if (mode === '2') {\n        return '2-dimensional measurement';\n      } else if (mode === '3') {\n        return '3-dimensional measurement';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x000b: 'GPSDOP',\n  0x000c: {\n    'name': 'GPSSpeedRef',\n    'description': function description(value) {\n      var ref = value.join('');\n\n      if (ref === 'K') {\n        return 'Kilometers per hour';\n      } else if (ref === 'M') {\n        return 'Miles per hour';\n      } else if (ref === 'N') {\n        return 'Knots';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x000d: 'GPSSpeed',\n  0x000e: {\n    'name': 'GPSTrackRef',\n    'description': function description(value) {\n      var ref = value.join('');\n\n      if (ref === 'T') {\n        return 'True direction';\n      } else if (ref === 'M') {\n        return 'Magnetic direction';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x000f: 'GPSTrack',\n  0x0010: {\n    'name': 'GPSImgDirectionRef',\n    'description': function description(value) {\n      var ref = value.join('');\n\n      if (ref === 'T') {\n        return 'True direction';\n      } else if (ref === 'M') {\n        return 'Magnetic direction';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x0011: 'GPSImgDirection',\n  0x0012: 'GPSMapDatum',\n  0x0013: {\n    'name': 'GPSDestLatitudeRef',\n    'description': function description(value) {\n      var ref = value.join('');\n\n      if (ref === 'N') {\n        return 'North latitude';\n      } else if (ref === 'S') {\n        return 'South latitude';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x0014: {\n    'name': 'GPSDestLatitude',\n    'description': function description(value) {\n      return value[0][0] / value[0][1] + value[1][0] / value[1][1] / 60 + value[2][0] / value[2][1] / 3600;\n    }\n  },\n  0x0015: {\n    'name': 'GPSDestLongitudeRef',\n    'description': function description(value) {\n      var ref = value.join('');\n\n      if (ref === 'E') {\n        return 'East longitude';\n      } else if (ref === 'W') {\n        return 'West longitude';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x0016: {\n    'name': 'GPSDestLongitude',\n    'description': function description(value) {\n      return value[0][0] / value[0][1] + value[1][0] / value[1][1] / 60 + value[2][0] / value[2][1] / 3600;\n    }\n  },\n  0x0017: {\n    'name': 'GPSDestBearingRef',\n    'description': function description(value) {\n      var ref = value.join('');\n\n      if (ref === 'T') {\n        return 'True direction';\n      } else if (ref === 'M') {\n        return 'Magnetic direction';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x0018: 'GPSDestBearing',\n  0x0019: {\n    'name': 'GPSDestDistanceRef',\n    'description': function description(value) {\n      var ref = value.join('');\n\n      if (ref === 'K') {\n        return 'Kilometers';\n      } else if (ref === 'M') {\n        return 'Miles';\n      } else if (ref === 'N') {\n        return 'Knots';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x001a: 'GPSDestDistance',\n  0x001b: {\n    'name': 'GPSProcessingMethod',\n    'description': _tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getEncodedString\n  },\n  0x001c: {\n    'name': 'GPSAreaInformation',\n    'description': _tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getEncodedString\n  },\n  0x001d: 'GPSDateStamp',\n  0x001e: {\n    'name': 'GPSDifferential',\n    'description': function description(value) {\n      if (value === 0) {\n        return 'Measurement without differential correction';\n      } else if (value === 1) {\n        return 'Differential correction applied';\n      }\n\n      return 'Unknown';\n    }\n  },\n  0x001f: 'GPSHPositioningError'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/tag-names-gps-ifd.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/tag-names-interoperability-ifd.js":
/*!***********************************************************************!*\
  !*** ./node_modules/exifreader/src/tag-names-interoperability-ifd.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tag-names-utils.js */ \"./node_modules/exifreader/src/tag-names-utils.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  0x0001: 'InteroperabilityIndex',\n  0x0002: {\n    name: 'InteroperabilityVersion',\n    description: function description(value) {\n      return (0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringValue)(value);\n    }\n  },\n  0x1000: 'RelatedImageFileFormat',\n  0x1001: 'RelatedImageWidth',\n  0x1002: 'RelatedImageHeight'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvdGFnLW5hbWVzLWludGVyb3BlcmFiaWxpdHktaWZkLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7OztBQUlBO0FBRUEsaUVBQWU7QUFDWCxVQUFRLHVCQURHO0FBRVgsVUFBUTtBQUNKQyxJQUFBQSxJQUFJLEVBQUUseUJBREY7QUFFSkMsSUFBQUEsV0FBVyxFQUFFLHFCQUFDQyxLQUFEO0FBQUEsYUFBV0gsbUVBQWMsQ0FBQ0csS0FBRCxDQUF6QjtBQUFBO0FBRlQsR0FGRztBQU1YLFVBQVEsd0JBTkc7QUFPWCxVQUFRLG1CQVBHO0FBUVgsVUFBUTtBQVJHLENBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ccm93c2VySW1hZ2VSZXNpemVyLy4vbm9kZV9tb2R1bGVzL2V4aWZyZWFkZXIvc3JjL3RhZy1uYW1lcy1pbnRlcm9wZXJhYmlsaXR5LWlmZC5qcz81ZWIyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIFRoaXMgU291cmNlIENvZGUgRm9ybSBpcyBzdWJqZWN0IHRvIHRoZSB0ZXJtcyBvZiB0aGUgTW96aWxsYSBQdWJsaWNcbiAqIExpY2Vuc2UsIHYuIDIuMC4gSWYgYSBjb3B5IG9mIHRoZSBNUEwgd2FzIG5vdCBkaXN0cmlidXRlZCB3aXRoIHRoaXNcbiAqIGZpbGUsIFlvdSBjYW4gb2J0YWluIG9uZSBhdCBodHRwczovL21vemlsbGEub3JnL01QTC8yLjAvLiAqL1xuXG5pbXBvcnQge2dldFN0cmluZ1ZhbHVlfSBmcm9tICcuL3RhZy1uYW1lcy11dGlscy5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICAweDAwMDE6ICdJbnRlcm9wZXJhYmlsaXR5SW5kZXgnLFxuICAgIDB4MDAwMjoge1xuICAgICAgICBuYW1lOiAnSW50ZXJvcGVyYWJpbGl0eVZlcnNpb24nLFxuICAgICAgICBkZXNjcmlwdGlvbjogKHZhbHVlKSA9PiBnZXRTdHJpbmdWYWx1ZSh2YWx1ZSlcbiAgICB9LFxuICAgIDB4MTAwMDogJ1JlbGF0ZWRJbWFnZUZpbGVGb3JtYXQnLFxuICAgIDB4MTAwMTogJ1JlbGF0ZWRJbWFnZVdpZHRoJyxcbiAgICAweDEwMDI6ICdSZWxhdGVkSW1hZ2VIZWlnaHQnXG59O1xuIl0sIm5hbWVzIjpbImdldFN0cmluZ1ZhbHVlIiwibmFtZSIsImRlc2NyaXB0aW9uIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/tag-names-interoperability-ifd.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/tag-names-mpf-ifd.js":
/*!**********************************************************!*\
  !*** ./node_modules/exifreader/src/tag-names-mpf-ifd.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tag-names-utils.js */ \"./node_modules/exifreader/src/tag-names-utils.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  0xb000: {\n    'name': 'MPFVersion',\n    'description': function description(value) {\n      return (0,_tag_names_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringValue)(value);\n    }\n  },\n  0xb001: 'NumberOfImages',\n  0xb002: 'MPEntry',\n  0xb003: 'ImageUIDList',\n  0xb004: 'TotalFrames'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvdGFnLW5hbWVzLW1wZi1pZmQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7O0FBSUE7QUFFQSxpRUFBZTtBQUNYLFVBQVE7QUFDSixZQUFRLFlBREo7QUFFSixtQkFBZSxxQkFBQ0MsS0FBRDtBQUFBLGFBQVdELG1FQUFjLENBQUNDLEtBQUQsQ0FBekI7QUFBQTtBQUZYLEdBREc7QUFLWCxVQUFRLGdCQUxHO0FBTVgsVUFBUSxTQU5HO0FBT1gsVUFBUSxjQVBHO0FBUVgsVUFBUTtBQVJHLENBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ccm93c2VySW1hZ2VSZXNpemVyLy4vbm9kZV9tb2R1bGVzL2V4aWZyZWFkZXIvc3JjL3RhZy1uYW1lcy1tcGYtaWZkLmpzPzI4OWQiXSwic291cmNlc0NvbnRlbnQiOlsiLyogVGhpcyBTb3VyY2UgQ29kZSBGb3JtIGlzIHN1YmplY3QgdG8gdGhlIHRlcm1zIG9mIHRoZSBNb3ppbGxhIFB1YmxpY1xuICogTGljZW5zZSwgdi4gMi4wLiBJZiBhIGNvcHkgb2YgdGhlIE1QTCB3YXMgbm90IGRpc3RyaWJ1dGVkIHdpdGggdGhpc1xuICogZmlsZSwgWW91IGNhbiBvYnRhaW4gb25lIGF0IGh0dHBzOi8vbW96aWxsYS5vcmcvTVBMLzIuMC8uICovXG5cbmltcG9ydCB7Z2V0U3RyaW5nVmFsdWV9IGZyb20gJy4vdGFnLW5hbWVzLXV0aWxzLmpzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIDB4YjAwMDoge1xuICAgICAgICAnbmFtZSc6ICdNUEZWZXJzaW9uJyxcbiAgICAgICAgJ2Rlc2NyaXB0aW9uJzogKHZhbHVlKSA9PiBnZXRTdHJpbmdWYWx1ZSh2YWx1ZSlcbiAgICB9LFxuICAgIDB4YjAwMTogJ051bWJlck9mSW1hZ2VzJyxcbiAgICAweGIwMDI6ICdNUEVudHJ5JyxcbiAgICAweGIwMDM6ICdJbWFnZVVJRExpc3QnLFxuICAgIDB4YjAwNDogJ1RvdGFsRnJhbWVzJ1xufTtcbiJdLCJuYW1lcyI6WyJnZXRTdHJpbmdWYWx1ZSIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/tag-names-mpf-ifd.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/tag-names-utils.js":
/*!********************************************************!*\
  !*** ./node_modules/exifreader/src/tag-names-utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getCalculatedGpsValue\": () => (/* binding */ getCalculatedGpsValue),\n/* harmony export */   \"getEncodedString\": () => (/* binding */ getEncodedString),\n/* harmony export */   \"getStringValue\": () => (/* binding */ getStringValue)\n/* harmony export */ });\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\nfunction getStringValue(value) {\n  return value.map(function (charCode) {\n    return String.fromCharCode(charCode);\n  }).join('');\n}\nfunction getEncodedString(value) {\n  if (value.length >= 8) {\n    var encoding = getStringValue(value.slice(0, 8));\n\n    if (encoding === 'ASCII\\x00\\x00\\x00') {\n      return getStringValue(value.slice(8));\n    } else if (encoding === 'JIS\\x00\\x00\\x00\\x00\\x00') {\n      return '[JIS encoded text]';\n    } else if (encoding === 'UNICODE\\x00') {\n      return '[Unicode encoded text]';\n    } else if (encoding === '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00') {\n      return '[Undefined encoding]';\n    }\n  }\n\n  return 'Undefined';\n}\nfunction getCalculatedGpsValue(value) {\n  return value[0][0] / value[0][1] + value[1][0] / value[1][1] / 60 + value[2][0] / value[2][1] / 3600;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvdGFnLW5hbWVzLXV0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7QUFJTyxTQUFTQSxjQUFULENBQXdCQyxLQUF4QixFQUErQjtBQUNsQyxTQUFPQSxLQUFLLENBQUNDLEdBQU4sQ0FBVSxVQUFDQyxRQUFEO0FBQUEsV0FBY0MsTUFBTSxDQUFDQyxZQUFQLENBQW9CRixRQUFwQixDQUFkO0FBQUEsR0FBVixFQUF1REcsSUFBdkQsQ0FBNEQsRUFBNUQsQ0FBUDtBQUNIO0FBRU0sU0FBU0MsZ0JBQVQsQ0FBMEJOLEtBQTFCLEVBQWlDO0FBQ3BDLE1BQUlBLEtBQUssQ0FBQ08sTUFBTixJQUFnQixDQUFwQixFQUF1QjtBQUNuQixRQUFNQyxRQUFRLEdBQUdULGNBQWMsQ0FBQ0MsS0FBSyxDQUFDUyxLQUFOLENBQVksQ0FBWixFQUFlLENBQWYsQ0FBRCxDQUEvQjs7QUFFQSxRQUFJRCxRQUFRLEtBQUssbUJBQWpCLEVBQXNDO0FBQ2xDLGFBQU9ULGNBQWMsQ0FBQ0MsS0FBSyxDQUFDUyxLQUFOLENBQVksQ0FBWixDQUFELENBQXJCO0FBQ0gsS0FGRCxNQUVPLElBQUlELFFBQVEsS0FBSyx5QkFBakIsRUFBNEM7QUFDL0MsYUFBTyxvQkFBUDtBQUNILEtBRk0sTUFFQSxJQUFJQSxRQUFRLEtBQUssYUFBakIsRUFBZ0M7QUFDbkMsYUFBTyx3QkFBUDtBQUNILEtBRk0sTUFFQSxJQUFJQSxRQUFRLEtBQUssa0NBQWpCLEVBQXFEO0FBQ3hELGFBQU8sc0JBQVA7QUFDSDtBQUNKOztBQUVELFNBQU8sV0FBUDtBQUNIO0FBRU0sU0FBU0UscUJBQVQsQ0FBK0JWLEtBQS9CLEVBQXNDO0FBQ3pDLFNBQVFBLEtBQUssQ0FBQyxDQUFELENBQUwsQ0FBUyxDQUFULElBQWNBLEtBQUssQ0FBQyxDQUFELENBQUwsQ0FBUyxDQUFULENBQWYsR0FBK0JBLEtBQUssQ0FBQyxDQUFELENBQUwsQ0FBUyxDQUFULElBQWNBLEtBQUssQ0FBQyxDQUFELENBQUwsQ0FBUyxDQUFULENBQWYsR0FBOEIsRUFBNUQsR0FBa0VBLEtBQUssQ0FBQyxDQUFELENBQUwsQ0FBUyxDQUFULElBQWNBLEtBQUssQ0FBQyxDQUFELENBQUwsQ0FBUyxDQUFULENBQWYsR0FBOEIsSUFBdEc7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL0Jyb3dzZXJJbWFnZVJlc2l6ZXIvLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvdGFnLW5hbWVzLXV0aWxzLmpzPzc3MjQiXSwic291cmNlc0NvbnRlbnQiOlsiLyogVGhpcyBTb3VyY2UgQ29kZSBGb3JtIGlzIHN1YmplY3QgdG8gdGhlIHRlcm1zIG9mIHRoZSBNb3ppbGxhIFB1YmxpY1xuICogTGljZW5zZSwgdi4gMi4wLiBJZiBhIGNvcHkgb2YgdGhlIE1QTCB3YXMgbm90IGRpc3RyaWJ1dGVkIHdpdGggdGhpc1xuICogZmlsZSwgWW91IGNhbiBvYnRhaW4gb25lIGF0IGh0dHBzOi8vbW96aWxsYS5vcmcvTVBMLzIuMC8uICovXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTdHJpbmdWYWx1ZSh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZS5tYXAoKGNoYXJDb2RlKSA9PiBTdHJpbmcuZnJvbUNoYXJDb2RlKGNoYXJDb2RlKSkuam9pbignJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRFbmNvZGVkU3RyaW5nKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlLmxlbmd0aCA+PSA4KSB7XG4gICAgICAgIGNvbnN0IGVuY29kaW5nID0gZ2V0U3RyaW5nVmFsdWUodmFsdWUuc2xpY2UoMCwgOCkpO1xuXG4gICAgICAgIGlmIChlbmNvZGluZyA9PT0gJ0FTQ0lJXFx4MDBcXHgwMFxceDAwJykge1xuICAgICAgICAgICAgcmV0dXJuIGdldFN0cmluZ1ZhbHVlKHZhbHVlLnNsaWNlKDgpKTtcbiAgICAgICAgfSBlbHNlIGlmIChlbmNvZGluZyA9PT0gJ0pJU1xceDAwXFx4MDBcXHgwMFxceDAwXFx4MDAnKSB7XG4gICAgICAgICAgICByZXR1cm4gJ1tKSVMgZW5jb2RlZCB0ZXh0XSc7XG4gICAgICAgIH0gZWxzZSBpZiAoZW5jb2RpbmcgPT09ICdVTklDT0RFXFx4MDAnKSB7XG4gICAgICAgICAgICByZXR1cm4gJ1tVbmljb2RlIGVuY29kZWQgdGV4dF0nO1xuICAgICAgICB9IGVsc2UgaWYgKGVuY29kaW5nID09PSAnXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMFxceDAwXFx4MDBcXHgwMCcpIHtcbiAgICAgICAgICAgIHJldHVybiAnW1VuZGVmaW5lZCBlbmNvZGluZ10nO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuICdVbmRlZmluZWQnO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2FsY3VsYXRlZEdwc1ZhbHVlKHZhbHVlKSB7XG4gICAgcmV0dXJuICh2YWx1ZVswXVswXSAvIHZhbHVlWzBdWzFdKSArICh2YWx1ZVsxXVswXSAvIHZhbHVlWzFdWzFdKSAvIDYwICsgKHZhbHVlWzJdWzBdIC8gdmFsdWVbMl1bMV0pIC8gMzYwMDtcbn1cbiJdLCJuYW1lcyI6WyJnZXRTdHJpbmdWYWx1ZSIsInZhbHVlIiwibWFwIiwiY2hhckNvZGUiLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJqb2luIiwiZ2V0RW5jb2RlZFN0cmluZyIsImxlbmd0aCIsImVuY29kaW5nIiwic2xpY2UiLCJnZXRDYWxjdWxhdGVkR3BzVmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/tag-names-utils.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/tag-names.js":
/*!**************************************************!*\
  !*** ./node_modules/exifreader/src/tag-names.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/exifreader/src/utils.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/exifreader/src/constants.js\");\n/* harmony import */ var _tag_names_0th_ifd_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tag-names-0th-ifd.js */ \"./node_modules/exifreader/src/tag-names-0th-ifd.js\");\n/* harmony import */ var _tag_names_exif_ifd_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tag-names-exif-ifd.js */ \"./node_modules/exifreader/src/tag-names-exif-ifd.js\");\n/* harmony import */ var _tag_names_gps_ifd_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tag-names-gps-ifd.js */ \"./node_modules/exifreader/src/tag-names-gps-ifd.js\");\n/* harmony import */ var _tag_names_interoperability_ifd_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tag-names-interoperability-ifd.js */ \"./node_modules/exifreader/src/tag-names-interoperability-ifd.js\");\n/* harmony import */ var _tag_names_mpf_ifd_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tag-names-mpf-ifd.js */ \"./node_modules/exifreader/src/tag-names-mpf-ifd.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n\n\n\n\n\n\nvar tagNames0thExifIfds = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.objectAssign)({}, _tag_names_0th_ifd_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _tag_names_exif_ifd_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  '0th': tagNames0thExifIfds,\n  'exif': tagNames0thExifIfds,\n  'gps': _tag_names_gps_ifd_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  'interoperability': _tag_names_interoperability_ifd_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n  'mpf': _constants_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].USE_MPF ? _tag_names_mpf_ifd_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"] : {}\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvdGFnLW5hbWVzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsSUFBTU8sbUJBQW1CLEdBQUdQLHVEQUFZLENBQUMsRUFBRCxFQUFLRSw2REFBTCxFQUFxQkMsOERBQXJCLENBQXhDO0FBRUEsaUVBQWU7QUFDWCxTQUFPSSxtQkFESTtBQUVYLFVBQVFBLG1CQUZHO0FBR1gsU0FBT0gsNkRBSEk7QUFJWCxzQkFBb0JDLDBFQUpUO0FBS1gsU0FBT0osNkRBQUEsR0FBb0JLLDZEQUFwQixHQUFxQztBQUxqQyxDQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQnJvd3NlckltYWdlUmVzaXplci8uL25vZGVfbW9kdWxlcy9leGlmcmVhZGVyL3NyYy90YWctbmFtZXMuanM/OTYzMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBUaGlzIFNvdXJjZSBDb2RlIEZvcm0gaXMgc3ViamVjdCB0byB0aGUgdGVybXMgb2YgdGhlIE1vemlsbGEgUHVibGljXG4gKiBMaWNlbnNlLCB2LiAyLjAuIElmIGEgY29weSBvZiB0aGUgTVBMIHdhcyBub3QgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzXG4gKiBmaWxlLCBZb3UgY2FuIG9idGFpbiBvbmUgYXQgaHR0cHM6Ly9tb3ppbGxhLm9yZy9NUEwvMi4wLy4gKi9cblxuaW1wb3J0IHtvYmplY3RBc3NpZ259IGZyb20gJy4vdXRpbHMuanMnO1xuaW1wb3J0IENvbnN0YW50cyBmcm9tICcuL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgVGFnTmFtZXMwdGhJZmQgZnJvbSAnLi90YWctbmFtZXMtMHRoLWlmZC5qcyc7XG5pbXBvcnQgVGFnTmFtZXNFeGlmSWZkIGZyb20gJy4vdGFnLW5hbWVzLWV4aWYtaWZkLmpzJztcbmltcG9ydCBUYWdOYW1lc0dwc0lmZCBmcm9tICcuL3RhZy1uYW1lcy1ncHMtaWZkLmpzJztcbmltcG9ydCBUYWdOYW1lc0ludGVyb3BlcmFiaWxpdHlJZmQgZnJvbSAnLi90YWctbmFtZXMtaW50ZXJvcGVyYWJpbGl0eS1pZmQuanMnO1xuaW1wb3J0IFRhZ05hbWVzTXBmSWZkIGZyb20gJy4vdGFnLW5hbWVzLW1wZi1pZmQuanMnO1xuXG5jb25zdCB0YWdOYW1lczB0aEV4aWZJZmRzID0gb2JqZWN0QXNzaWduKHt9LCBUYWdOYW1lczB0aElmZCwgVGFnTmFtZXNFeGlmSWZkKTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICAgICcwdGgnOiB0YWdOYW1lczB0aEV4aWZJZmRzLFxuICAgICdleGlmJzogdGFnTmFtZXMwdGhFeGlmSWZkcyxcbiAgICAnZ3BzJzogVGFnTmFtZXNHcHNJZmQsXG4gICAgJ2ludGVyb3BlcmFiaWxpdHknOiBUYWdOYW1lc0ludGVyb3BlcmFiaWxpdHlJZmQsXG4gICAgJ21wZic6IENvbnN0YW50cy5VU0VfTVBGID8gVGFnTmFtZXNNcGZJZmQgOiB7fSxcbn07XG4iXSwibmFtZXMiOlsib2JqZWN0QXNzaWduIiwiQ29uc3RhbnRzIiwiVGFnTmFtZXMwdGhJZmQiLCJUYWdOYW1lc0V4aWZJZmQiLCJUYWdOYW1lc0dwc0lmZCIsIlRhZ05hbWVzSW50ZXJvcGVyYWJpbGl0eUlmZCIsIlRhZ05hbWVzTXBmSWZkIiwidGFnTmFtZXMwdGhFeGlmSWZkcyIsIlVTRV9NUEYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/tag-names.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/tags.js":
/*!*********************************************!*\
  !*** ./node_modules/exifreader/src/tags.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/exifreader/src/constants.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/exifreader/src/utils.js\");\n/* harmony import */ var _byte_order_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./byte-order.js */ \"./node_modules/exifreader/src/byte-order.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"./node_modules/exifreader/src/types.js\");\n/* harmony import */ var _tag_names_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tag-names.js */ \"./node_modules/exifreader/src/tag-names.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n\n\n\n\n\nvar EXIF_IFD_POINTER_KEY = 'Exif IFD Pointer';\nvar GPS_INFO_IFD_POINTER_KEY = 'GPS Info IFD Pointer';\nvar INTEROPERABILITY_IFD_POINTER_KEY = 'Interoperability IFD Pointer';\nvar getTagValueAt = {\n  1: _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByteAt,\n  2: _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getAsciiAt,\n  3: _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getShortAt,\n  4: _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getLongAt,\n  5: _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getRationalAt,\n  7: _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getUndefinedAt,\n  9: _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getSlongAt,\n  10: _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getSrationalAt,\n  13: _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIfdPointerAt\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  read: read,\n  readMpf: readMpf\n});\n\nfunction read(dataView, tiffHeaderOffset, includeUnknown) {\n  var byteOrder = _byte_order_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByteOrder(dataView, tiffHeaderOffset);\n  var tags = read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n  tags = readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n  tags = readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n  tags = readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n  return tags;\n}\n\nfunction read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n  return readIfd(dataView, '0th', tiffHeaderOffset, get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder), byteOrder, includeUnknown);\n}\n\nfunction get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder) {\n  return tiffHeaderOffset + _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getLongAt(dataView, tiffHeaderOffset + 4, byteOrder);\n}\n\nfunction readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n  if (tags[EXIF_IFD_POINTER_KEY] !== undefined) {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.objectAssign)(tags, readIfd(dataView, 'exif', tiffHeaderOffset, tiffHeaderOffset + tags[EXIF_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n  }\n\n  return tags;\n}\n\nfunction readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n  if (tags[GPS_INFO_IFD_POINTER_KEY] !== undefined) {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.objectAssign)(tags, readIfd(dataView, 'gps', tiffHeaderOffset, tiffHeaderOffset + tags[GPS_INFO_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n  }\n\n  return tags;\n}\n\nfunction readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n  if (tags[INTEROPERABILITY_IFD_POINTER_KEY] !== undefined) {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.objectAssign)(tags, readIfd(dataView, 'interoperability', tiffHeaderOffset, tiffHeaderOffset + tags[INTEROPERABILITY_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n  }\n\n  return tags;\n}\n\nfunction readMpf(dataView, dataOffset, includeUnknown) {\n  var byteOrder = _byte_order_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByteOrder(dataView, dataOffset);\n  var tags = readIfd(dataView, 'mpf', dataOffset, get0thIfdOffset(dataView, dataOffset, byteOrder), byteOrder, includeUnknown);\n  return addMpfImages(dataView, dataOffset, tags, byteOrder);\n}\n\nfunction addMpfImages(dataView, dataOffset, tags, byteOrder) {\n  var ENTRY_SIZE = 16;\n\n  if (!tags['MPEntry']) {\n    return tags;\n  }\n\n  var images = [];\n\n  for (var i = 0; i < Math.ceil(tags['MPEntry'].value.length / ENTRY_SIZE); i++) {\n    images[i] = {};\n    var attributes = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE, _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getTypeSize('LONG'), byteOrder);\n    images[i]['ImageFlags'] = getImageFlags(attributes);\n    images[i]['ImageFormat'] = getImageFormat(attributes);\n    images[i]['ImageType'] = getImageType(attributes);\n    var imageSize = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 4, _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getTypeSize('LONG'), byteOrder);\n    images[i]['ImageSize'] = {\n      value: imageSize,\n      description: '' + imageSize\n    };\n    var imageOffset = isFirstIndividualImage(i) ? 0 : getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 8, _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getTypeSize('LONG'), byteOrder) + dataOffset;\n    images[i]['ImageOffset'] = {\n      value: imageOffset,\n      description: '' + imageOffset\n    };\n    var dependentImage1EntryNumber = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 12, _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getTypeSize('SHORT'), byteOrder);\n    images[i]['DependentImage1EntryNumber'] = {\n      value: dependentImage1EntryNumber,\n      description: '' + dependentImage1EntryNumber\n    };\n    var dependentImage2EntryNumber = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 14, _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getTypeSize('SHORT'), byteOrder);\n    images[i]['DependentImage2EntryNumber'] = {\n      value: dependentImage2EntryNumber,\n      description: '' + dependentImage2EntryNumber\n    };\n    images[i].image = dataView.buffer.slice(imageOffset, imageOffset + imageSize);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.deferInit)(images[i], 'base64', function () {\n      return (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getBase64Image)(this.image);\n    });\n  }\n\n  tags['Images'] = images;\n  return tags;\n}\n\nfunction getImageNumberValue(entries, offset, size, byteOrder) {\n  if (byteOrder === _byte_order_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].LITTLE_ENDIAN) {\n    var _value = 0;\n\n    for (var i = 0; i < size; i++) {\n      _value += entries[offset + i] << 8 * i;\n    }\n\n    return _value;\n  }\n\n  var value = 0;\n\n  for (var _i = 0; _i < size; _i++) {\n    value += entries[offset + _i] << 8 * (size - 1 - _i);\n  }\n\n  return value;\n}\n\nfunction getImageFlags(attributes) {\n  var flags = [attributes >> 31 & 0x1, attributes >> 30 & 0x1, attributes >> 29 & 0x1];\n  var flagsDescription = [];\n\n  if (flags[0]) {\n    flagsDescription.push('Dependent Parent Image');\n  }\n\n  if (flags[1]) {\n    flagsDescription.push('Dependent Child Image');\n  }\n\n  if (flags[2]) {\n    flagsDescription.push('Representative Image');\n  }\n\n  return {\n    value: flags,\n    description: flagsDescription.join(', ') || 'None'\n  };\n}\n\nfunction getImageFormat(attributes) {\n  var imageFormat = attributes >> 24 & 0x7;\n  return {\n    value: imageFormat,\n    description: imageFormat === 0 ? 'JPEG' : 'Unknown'\n  };\n}\n\nfunction getImageType(attributes) {\n  var type = attributes & 0xffffff;\n  var descriptions = {\n    0x30000: 'Baseline MP Primary Image',\n    0x10001: 'Large Thumbnail (VGA equivalent)',\n    0x10002: 'Large Thumbnail (Full HD equivalent)',\n    0x20001: 'Multi-Frame Image (Panorama)',\n    0x20002: 'Multi-Frame Image (Disparity)',\n    0x20003: 'Multi-Frame Image (Multi-Angle)',\n    0x0: 'Undefined'\n  };\n  return {\n    value: type,\n    description: descriptions[type] || 'Unknown'\n  };\n}\n\nfunction isFirstIndividualImage(i) {\n  return i === 0;\n}\n\nfunction readIfd(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n  var FIELD_COUNT_SIZE = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getTypeSize('SHORT');\n  var FIELD_SIZE = 12;\n  var tags = {};\n  var numberOfFields = getNumberOfFields(dataView, offset, byteOrder);\n  offset += FIELD_COUNT_SIZE;\n\n  for (var fieldIndex = 0; fieldIndex < numberOfFields; fieldIndex++) {\n    if (offset + FIELD_SIZE > dataView.byteLength) {\n      break;\n    }\n\n    var tag = readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown);\n\n    if (tag !== undefined) {\n      tags[tag.name] = {\n        'id': tag.id,\n        'value': tag.value,\n        'description': tag.description\n      };\n    }\n\n    offset += FIELD_SIZE;\n  }\n\n  if (_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].USE_THUMBNAIL && offset < dataView.byteLength - _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getTypeSize('LONG')) {\n    var nextIfdOffset = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getLongAt(dataView, offset, byteOrder);\n\n    if (nextIfdOffset !== 0) {\n      tags['Thumbnail'] = readIfd(dataView, ifdType, tiffHeaderOffset, tiffHeaderOffset + nextIfdOffset, byteOrder, true);\n    }\n  }\n\n  return tags;\n}\n\nfunction getNumberOfFields(dataView, offset, byteOrder) {\n  if (offset + _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getTypeSize('SHORT') <= dataView.byteLength) {\n    return _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getShortAt(dataView, offset, byteOrder);\n  }\n\n  return 0;\n}\n\nfunction readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n  var TAG_CODE_IPTC_NAA = 0x83bb;\n  var TAG_TYPE_OFFSET = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getTypeSize('SHORT');\n  var TAG_COUNT_OFFSET = TAG_TYPE_OFFSET + _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getTypeSize('SHORT');\n  var TAG_VALUE_OFFSET = TAG_COUNT_OFFSET + _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getTypeSize('LONG');\n  var tagCode = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getShortAt(dataView, offset, byteOrder);\n  var tagType = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getShortAt(dataView, offset + TAG_TYPE_OFFSET, byteOrder);\n  var tagCount = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getLongAt(dataView, offset + TAG_COUNT_OFFSET, byteOrder);\n  var tagValue;\n\n  if (_types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].typeSizes[tagType] === undefined || !includeUnknown && _tag_names_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"][ifdType][tagCode] === undefined) {\n    return undefined;\n  }\n\n  if (tagValueFitsInOffsetSlot(tagType, tagCount)) {\n    tagValue = getTagValue(dataView, offset + TAG_VALUE_OFFSET, tagType, tagCount, byteOrder);\n  } else {\n    var tagValueOffset = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getLongAt(dataView, offset + TAG_VALUE_OFFSET, byteOrder);\n\n    if (tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount)) {\n      var forceByteType = tagCode === TAG_CODE_IPTC_NAA;\n      tagValue = getTagValue(dataView, tiffHeaderOffset + tagValueOffset, tagType, tagCount, byteOrder, forceByteType);\n    } else {\n      tagValue = '<faulty value>';\n    }\n  }\n\n  if (tagType === _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tagTypes.ASCII) {\n    tagValue = splitNullSeparatedAsciiString(tagValue);\n    tagValue = decodeAsciiValue(tagValue);\n  }\n\n  var tagName = \"undefined-\".concat(tagCode);\n  var tagDescription = tagValue;\n\n  if (_tag_names_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"][ifdType][tagCode] !== undefined) {\n    if (_tag_names_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"][ifdType][tagCode]['name'] !== undefined && _tag_names_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"][ifdType][tagCode]['description'] !== undefined) {\n      tagName = _tag_names_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"][ifdType][tagCode]['name'];\n\n      try {\n        tagDescription = _tag_names_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"][ifdType][tagCode]['description'](tagValue);\n      } catch (error) {\n        tagDescription = getDescriptionFromTagValue(tagValue);\n      }\n    } else if (tagType === _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tagTypes.RATIONAL || tagType === _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tagTypes.SRATIONAL) {\n      tagName = _tag_names_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"][ifdType][tagCode];\n      tagDescription = '' + tagValue[0] / tagValue[1];\n    } else {\n      tagName = _tag_names_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"][ifdType][tagCode];\n      tagDescription = getDescriptionFromTagValue(tagValue);\n    }\n  }\n\n  return {\n    id: tagCode,\n    name: tagName,\n    value: tagValue,\n    description: tagDescription\n  };\n}\n\nfunction tagValueFitsInOffsetSlot(tagType, tagCount) {\n  return _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].typeSizes[tagType] * tagCount <= _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getTypeSize('LONG');\n}\n\nfunction getTagValue(dataView, offset, type, count, byteOrder) {\n  var forceByteType = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var value = [];\n\n  if (forceByteType) {\n    count = count * _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].typeSizes[type];\n    type = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tagTypes.BYTE;\n  }\n\n  for (var valueIndex = 0; valueIndex < count; valueIndex++) {\n    value.push(getTagValueAt[type](dataView, offset, byteOrder));\n    offset += _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].typeSizes[type];\n  }\n\n  if (type === _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tagTypes.ASCII) {\n    value = _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getAsciiValue(value);\n  } else if (value.length === 1) {\n    value = value[0];\n  }\n\n  return value;\n}\n\nfunction tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount) {\n  return tiffHeaderOffset + tagValueOffset + _types_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].typeSizes[tagType] * tagCount <= dataView.byteLength;\n}\n\nfunction splitNullSeparatedAsciiString(string) {\n  var tagValue = [];\n  var i = 0;\n\n  for (var j = 0; j < string.length; j++) {\n    if (string[j] === '\\x00') {\n      i++;\n      continue;\n    }\n\n    if (tagValue[i] === undefined) {\n      tagValue[i] = '';\n    }\n\n    tagValue[i] += string[j];\n  }\n\n  return tagValue;\n}\n\nfunction decodeAsciiValue(asciiValue) {\n  try {\n    return asciiValue.map(function (value) {\n      return decodeURIComponent(escape(value));\n    });\n  } catch (error) {\n    return asciiValue;\n  }\n}\n\nfunction getDescriptionFromTagValue(tagValue) {\n  if (tagValue instanceof Array) {\n    return tagValue.join(', ');\n  }\n\n  return tagValue;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/tags.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/text-decoder.js":
/*!*****************************************************!*\
  !*** ./node_modules/exifreader/src/text-decoder.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  get: get\n});\n\nfunction get() {\n  if (typeof TextDecoder !== 'undefined') {\n    return TextDecoder;\n  }\n\n  return undefined;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvdGV4dC1kZWNvZGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7O0FBSUEsaUVBQWU7QUFDWEEsRUFBQUEsR0FBRyxFQUFIQTtBQURXLENBQWY7O0FBSUEsU0FBU0EsR0FBVCxHQUFlO0FBQ1gsTUFBSSxPQUFPQyxXQUFQLEtBQXVCLFdBQTNCLEVBQXdDO0FBQ3BDLFdBQU9BLFdBQVA7QUFDSDs7QUFFRCxTQUFPQyxTQUFQO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ccm93c2VySW1hZ2VSZXNpemVyLy4vbm9kZV9tb2R1bGVzL2V4aWZyZWFkZXIvc3JjL3RleHQtZGVjb2Rlci5qcz81ZjE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIFRoaXMgU291cmNlIENvZGUgRm9ybSBpcyBzdWJqZWN0IHRvIHRoZSB0ZXJtcyBvZiB0aGUgTW96aWxsYSBQdWJsaWNcbiAqIExpY2Vuc2UsIHYuIDIuMC4gSWYgYSBjb3B5IG9mIHRoZSBNUEwgd2FzIG5vdCBkaXN0cmlidXRlZCB3aXRoIHRoaXNcbiAqIGZpbGUsIFlvdSBjYW4gb2J0YWluIG9uZSBhdCBodHRwczovL21vemlsbGEub3JnL01QTC8yLjAvLiAqL1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgZ2V0XG59O1xuXG5mdW5jdGlvbiBnZXQoKSB7XG4gICAgaWYgKHR5cGVvZiBUZXh0RGVjb2RlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIFRleHREZWNvZGVyO1xuICAgIH1cblxuICAgIHJldHVybiB1bmRlZmluZWQ7XG59XG4iXSwibmFtZXMiOlsiZ2V0IiwiVGV4dERlY29kZXIiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/text-decoder.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/thumbnail.js":
/*!**************************************************!*\
  !*** ./node_modules/exifreader/src/thumbnail.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/exifreader/src/utils.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n // https://exiftool.org/TagNames/EXIF.html#Compression\n\nvar COMPRESSION_JPEG = [6, 7, 99];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  get: get\n});\n\nfunction get(dataView, thumbnailTags, tiffHeaderOffset) {\n  if (hasJpegThumbnail(thumbnailTags)) {\n    thumbnailTags.type = 'image/jpeg';\n    var offset = tiffHeaderOffset + thumbnailTags.JPEGInterchangeFormat.value;\n    thumbnailTags.image = dataView.buffer.slice(offset, offset + thumbnailTags.JPEGInterchangeFormatLength.value);\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.deferInit)(thumbnailTags, 'base64', function () {\n      return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getBase64Image)(this.image);\n    });\n  } // There is a small possibility of thumbnails in TIFF format but they are\n  // not stored as a self-contained image file and would be much more\n  // difficult to extract.\n  // https://exiftool.org/forum/index.php?topic=3273.msg14778#msg14778\n\n\n  return thumbnailTags;\n}\n\nfunction hasJpegThumbnail(tags) {\n  return tags && (tags.Compression === undefined || COMPRESSION_JPEG.includes(tags.Compression.value)) && tags.JPEGInterchangeFormat && tags.JPEGInterchangeFormat.value && tags.JPEGInterchangeFormatLength && tags.JPEGInterchangeFormatLength.value;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvdGh1bWJuYWlsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7OztDQU1BOztBQUNBLElBQU1FLGdCQUFnQixHQUFHLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxFQUFQLENBQXpCO0FBRUEsaUVBQWU7QUFDWEMsRUFBQUEsR0FBRyxFQUFIQTtBQURXLENBQWY7O0FBSUEsU0FBU0EsR0FBVCxDQUFhQyxRQUFiLEVBQXVCQyxhQUF2QixFQUFzQ0MsZ0JBQXRDLEVBQXdEO0FBQ3BELE1BQUlDLGdCQUFnQixDQUFDRixhQUFELENBQXBCLEVBQXFDO0FBQ2pDQSxJQUFBQSxhQUFhLENBQUNHLElBQWQsR0FBcUIsWUFBckI7QUFDQSxRQUFNQyxNQUFNLEdBQUdILGdCQUFnQixHQUFHRCxhQUFhLENBQUNLLHFCQUFkLENBQW9DQyxLQUF0RTtBQUNBTixJQUFBQSxhQUFhLENBQUNPLEtBQWQsR0FBc0JSLFFBQVEsQ0FBQ1MsTUFBVCxDQUFnQkMsS0FBaEIsQ0FBc0JMLE1BQXRCLEVBQThCQSxNQUFNLEdBQUdKLGFBQWEsQ0FBQ1UsMkJBQWQsQ0FBMENKLEtBQWpGLENBQXRCO0FBQ0FYLElBQUFBLG9EQUFTLENBQUNLLGFBQUQsRUFBZ0IsUUFBaEIsRUFBMEIsWUFBWTtBQUMzQyxhQUFPSix5REFBYyxDQUFDLEtBQUtXLEtBQU4sQ0FBckI7QUFDSCxLQUZRLENBQVQ7QUFHSCxHQVJtRCxDQVVwRDtBQUNBO0FBQ0E7QUFDQTs7O0FBRUEsU0FBT1AsYUFBUDtBQUNIOztBQUVELFNBQVNFLGdCQUFULENBQTBCUyxJQUExQixFQUFnQztBQUM1QixTQUFPQSxJQUFJLEtBQU1BLElBQUksQ0FBQ0MsV0FBTCxLQUFxQkMsU0FBdEIsSUFBcUNoQixnQkFBZ0IsQ0FBQ2lCLFFBQWpCLENBQTBCSCxJQUFJLENBQUNDLFdBQUwsQ0FBaUJOLEtBQTNDLENBQTFDLENBQUosSUFDQUssSUFBSSxDQUFDTixxQkFETCxJQUM4Qk0sSUFBSSxDQUFDTixxQkFBTCxDQUEyQkMsS0FEekQsSUFFQUssSUFBSSxDQUFDRCwyQkFGTCxJQUVvQ0MsSUFBSSxDQUFDRCwyQkFBTCxDQUFpQ0osS0FGNUU7QUFHSCIsInNvdXJjZXMiOlsid2VicGFjazovL0Jyb3dzZXJJbWFnZVJlc2l6ZXIvLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvdGh1bWJuYWlsLmpzP2E3YWUiXSwic291cmNlc0NvbnRlbnQiOlsiLyogVGhpcyBTb3VyY2UgQ29kZSBGb3JtIGlzIHN1YmplY3QgdG8gdGhlIHRlcm1zIG9mIHRoZSBNb3ppbGxhIFB1YmxpY1xuICogTGljZW5zZSwgdi4gMi4wLiBJZiBhIGNvcHkgb2YgdGhlIE1QTCB3YXMgbm90IGRpc3RyaWJ1dGVkIHdpdGggdGhpc1xuICogZmlsZSwgWW91IGNhbiBvYnRhaW4gb25lIGF0IGh0dHBzOi8vbW96aWxsYS5vcmcvTVBMLzIuMC8uICovXG5cbmltcG9ydCB7ZGVmZXJJbml0LCBnZXRCYXNlNjRJbWFnZX0gZnJvbSAnLi91dGlscy5qcyc7XG5cbi8vIGh0dHBzOi8vZXhpZnRvb2wub3JnL1RhZ05hbWVzL0VYSUYuaHRtbCNDb21wcmVzc2lvblxuY29uc3QgQ09NUFJFU1NJT05fSlBFRyA9IFs2LCA3LCA5OV07XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBnZXQsXG59O1xuXG5mdW5jdGlvbiBnZXQoZGF0YVZpZXcsIHRodW1ibmFpbFRhZ3MsIHRpZmZIZWFkZXJPZmZzZXQpIHtcbiAgICBpZiAoaGFzSnBlZ1RodW1ibmFpbCh0aHVtYm5haWxUYWdzKSkge1xuICAgICAgICB0aHVtYm5haWxUYWdzLnR5cGUgPSAnaW1hZ2UvanBlZyc7XG4gICAgICAgIGNvbnN0IG9mZnNldCA9IHRpZmZIZWFkZXJPZmZzZXQgKyB0aHVtYm5haWxUYWdzLkpQRUdJbnRlcmNoYW5nZUZvcm1hdC52YWx1ZTtcbiAgICAgICAgdGh1bWJuYWlsVGFncy5pbWFnZSA9IGRhdGFWaWV3LmJ1ZmZlci5zbGljZShvZmZzZXQsIG9mZnNldCArIHRodW1ibmFpbFRhZ3MuSlBFR0ludGVyY2hhbmdlRm9ybWF0TGVuZ3RoLnZhbHVlKTtcbiAgICAgICAgZGVmZXJJbml0KHRodW1ibmFpbFRhZ3MsICdiYXNlNjQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0QmFzZTY0SW1hZ2UodGhpcy5pbWFnZSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIFRoZXJlIGlzIGEgc21hbGwgcG9zc2liaWxpdHkgb2YgdGh1bWJuYWlscyBpbiBUSUZGIGZvcm1hdCBidXQgdGhleSBhcmVcbiAgICAvLyBub3Qgc3RvcmVkIGFzIGEgc2VsZi1jb250YWluZWQgaW1hZ2UgZmlsZSBhbmQgd291bGQgYmUgbXVjaCBtb3JlXG4gICAgLy8gZGlmZmljdWx0IHRvIGV4dHJhY3QuXG4gICAgLy8gaHR0cHM6Ly9leGlmdG9vbC5vcmcvZm9ydW0vaW5kZXgucGhwP3RvcGljPTMyNzMubXNnMTQ3NzgjbXNnMTQ3NzhcblxuICAgIHJldHVybiB0aHVtYm5haWxUYWdzO1xufVxuXG5mdW5jdGlvbiBoYXNKcGVnVGh1bWJuYWlsKHRhZ3MpIHtcbiAgICByZXR1cm4gdGFncyAmJiAoKHRhZ3MuQ29tcHJlc3Npb24gPT09IHVuZGVmaW5lZCkgfHwgKENPTVBSRVNTSU9OX0pQRUcuaW5jbHVkZXModGFncy5Db21wcmVzc2lvbi52YWx1ZSkpKVxuICAgICAgICAmJiB0YWdzLkpQRUdJbnRlcmNoYW5nZUZvcm1hdCAmJiB0YWdzLkpQRUdJbnRlcmNoYW5nZUZvcm1hdC52YWx1ZVxuICAgICAgICAmJiB0YWdzLkpQRUdJbnRlcmNoYW5nZUZvcm1hdExlbmd0aCAmJiB0YWdzLkpQRUdJbnRlcmNoYW5nZUZvcm1hdExlbmd0aC52YWx1ZTtcbn1cbiJdLCJuYW1lcyI6WyJkZWZlckluaXQiLCJnZXRCYXNlNjRJbWFnZSIsIkNPTVBSRVNTSU9OX0pQRUciLCJnZXQiLCJkYXRhVmlldyIsInRodW1ibmFpbFRhZ3MiLCJ0aWZmSGVhZGVyT2Zmc2V0IiwiaGFzSnBlZ1RodW1ibmFpbCIsInR5cGUiLCJvZmZzZXQiLCJKUEVHSW50ZXJjaGFuZ2VGb3JtYXQiLCJ2YWx1ZSIsImltYWdlIiwiYnVmZmVyIiwic2xpY2UiLCJKUEVHSW50ZXJjaGFuZ2VGb3JtYXRMZW5ndGgiLCJ0YWdzIiwiQ29tcHJlc3Npb24iLCJ1bmRlZmluZWQiLCJpbmNsdWRlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/thumbnail.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/types.js":
/*!**********************************************!*\
  !*** ./node_modules/exifreader/src/types.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _byte_order_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./byte-order.js */ \"./node_modules/exifreader/src/byte-order.js\");\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nvar typeSizes = {\n  1: 1,\n  // BYTE\n  2: 1,\n  // ASCII\n  3: 2,\n  // SHORT\n  4: 4,\n  // LONG\n  5: 8,\n  // RATIONAL\n  7: 1,\n  // UNDEFINED\n  9: 4,\n  // SLONG\n  10: 8,\n  // SRATIONAL\n  13: 4 // IFD\n\n};\nvar tagTypes = {\n  'BYTE': 1,\n  'ASCII': 2,\n  'SHORT': 3,\n  'LONG': 4,\n  'RATIONAL': 5,\n  'UNDEFINED': 7,\n  'SLONG': 9,\n  'SRATIONAL': 10,\n  'IFD': 13\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  getAsciiValue: getAsciiValue,\n  getByteAt: getByteAt,\n  getAsciiAt: getAsciiAt,\n  getShortAt: getShortAt,\n  getLongAt: getLongAt,\n  getRationalAt: getRationalAt,\n  getUndefinedAt: getUndefinedAt,\n  getSlongAt: getSlongAt,\n  getSrationalAt: getSrationalAt,\n  getIfdPointerAt: getIfdPointerAt,\n  typeSizes: typeSizes,\n  tagTypes: tagTypes,\n  getTypeSize: getTypeSize\n});\n\nfunction getAsciiValue(charArray) {\n  return charArray.map(function (charCode) {\n    return String.fromCharCode(charCode);\n  });\n}\n\nfunction getByteAt(dataView, offset) {\n  return dataView.getUint8(offset);\n}\n\nfunction getAsciiAt(dataView, offset) {\n  return dataView.getUint8(offset);\n}\n\nfunction getShortAt(dataView, offset, byteOrder) {\n  return dataView.getUint16(offset, byteOrder === _byte_order_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].LITTLE_ENDIAN);\n}\n\nfunction getLongAt(dataView, offset, byteOrder) {\n  return dataView.getUint32(offset, byteOrder === _byte_order_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].LITTLE_ENDIAN);\n}\n\nfunction getRationalAt(dataView, offset, byteOrder) {\n  return [getLongAt(dataView, offset, byteOrder), getLongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getUndefinedAt(dataView, offset) {\n  return getByteAt(dataView, offset);\n}\n\nfunction getSlongAt(dataView, offset, byteOrder) {\n  return dataView.getInt32(offset, byteOrder === _byte_order_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].LITTLE_ENDIAN);\n}\n\nfunction getSrationalAt(dataView, offset, byteOrder) {\n  return [getSlongAt(dataView, offset, byteOrder), getSlongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getIfdPointerAt(dataView, offset, byteOrder) {\n  return getLongAt(dataView, offset, byteOrder);\n}\n\nfunction getTypeSize(typeName) {\n  if (tagTypes[typeName] === undefined) {\n    throw new Error('No such type found.');\n  }\n\n  return typeSizes[tagTypes[typeName]];\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvdHlwZXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7O0FBSUE7QUFFQSxJQUFNQyxTQUFTLEdBQUc7QUFDZCxLQUFHLENBRFc7QUFDUjtBQUNOLEtBQUcsQ0FGVztBQUVSO0FBQ04sS0FBRyxDQUhXO0FBR1I7QUFDTixLQUFHLENBSlc7QUFJUjtBQUNOLEtBQUcsQ0FMVztBQUtSO0FBQ04sS0FBRyxDQU5XO0FBTVI7QUFDTixLQUFHLENBUFc7QUFPUjtBQUNOLE1BQUksQ0FSVTtBQVFQO0FBQ1AsTUFBSSxDQVRVLENBU1I7O0FBVFEsQ0FBbEI7QUFZQSxJQUFNQyxRQUFRLEdBQUc7QUFDYixVQUFRLENBREs7QUFFYixXQUFTLENBRkk7QUFHYixXQUFTLENBSEk7QUFJYixVQUFRLENBSks7QUFLYixjQUFZLENBTEM7QUFNYixlQUFhLENBTkE7QUFPYixXQUFTLENBUEk7QUFRYixlQUFhLEVBUkE7QUFTYixTQUFPO0FBVE0sQ0FBakI7QUFZQSxpRUFBZTtBQUNYQyxFQUFBQSxhQUFhLEVBQWJBLGFBRFc7QUFFWEMsRUFBQUEsU0FBUyxFQUFUQSxTQUZXO0FBR1hDLEVBQUFBLFVBQVUsRUFBVkEsVUFIVztBQUlYQyxFQUFBQSxVQUFVLEVBQVZBLFVBSlc7QUFLWEMsRUFBQUEsU0FBUyxFQUFUQSxTQUxXO0FBTVhDLEVBQUFBLGFBQWEsRUFBYkEsYUFOVztBQU9YQyxFQUFBQSxjQUFjLEVBQWRBLGNBUFc7QUFRWEMsRUFBQUEsVUFBVSxFQUFWQSxVQVJXO0FBU1hDLEVBQUFBLGNBQWMsRUFBZEEsY0FUVztBQVVYQyxFQUFBQSxlQUFlLEVBQWZBLGVBVlc7QUFXWFgsRUFBQUEsU0FBUyxFQUFUQSxTQVhXO0FBWVhDLEVBQUFBLFFBQVEsRUFBUkEsUUFaVztBQWFYVyxFQUFBQSxXQUFXLEVBQVhBO0FBYlcsQ0FBZjs7QUFnQkEsU0FBU1YsYUFBVCxDQUF1QlcsU0FBdkIsRUFBa0M7QUFDOUIsU0FBT0EsU0FBUyxDQUFDQyxHQUFWLENBQWMsVUFBQ0MsUUFBRDtBQUFBLFdBQWNDLE1BQU0sQ0FBQ0MsWUFBUCxDQUFvQkYsUUFBcEIsQ0FBZDtBQUFBLEdBQWQsQ0FBUDtBQUNIOztBQUVELFNBQVNaLFNBQVQsQ0FBbUJlLFFBQW5CLEVBQTZCQyxNQUE3QixFQUFxQztBQUNqQyxTQUFPRCxRQUFRLENBQUNFLFFBQVQsQ0FBa0JELE1BQWxCLENBQVA7QUFDSDs7QUFFRCxTQUFTZixVQUFULENBQW9CYyxRQUFwQixFQUE4QkMsTUFBOUIsRUFBc0M7QUFDbEMsU0FBT0QsUUFBUSxDQUFDRSxRQUFULENBQWtCRCxNQUFsQixDQUFQO0FBQ0g7O0FBRUQsU0FBU2QsVUFBVCxDQUFvQmEsUUFBcEIsRUFBOEJDLE1BQTlCLEVBQXNDRSxTQUF0QyxFQUFpRDtBQUM3QyxTQUFPSCxRQUFRLENBQUNJLFNBQVQsQ0FBbUJILE1BQW5CLEVBQTJCRSxTQUFTLEtBQUt0QixvRUFBekMsQ0FBUDtBQUNIOztBQUVELFNBQVNPLFNBQVQsQ0FBbUJZLFFBQW5CLEVBQTZCQyxNQUE3QixFQUFxQ0UsU0FBckMsRUFBZ0Q7QUFDNUMsU0FBT0gsUUFBUSxDQUFDTSxTQUFULENBQW1CTCxNQUFuQixFQUEyQkUsU0FBUyxLQUFLdEIsb0VBQXpDLENBQVA7QUFDSDs7QUFFRCxTQUFTUSxhQUFULENBQXVCVyxRQUF2QixFQUFpQ0MsTUFBakMsRUFBeUNFLFNBQXpDLEVBQW9EO0FBQ2hELFNBQU8sQ0FBQ2YsU0FBUyxDQUFDWSxRQUFELEVBQVdDLE1BQVgsRUFBbUJFLFNBQW5CLENBQVYsRUFBeUNmLFNBQVMsQ0FBQ1ksUUFBRCxFQUFXQyxNQUFNLEdBQUcsQ0FBcEIsRUFBdUJFLFNBQXZCLENBQWxELENBQVA7QUFDSDs7QUFFRCxTQUFTYixjQUFULENBQXdCVSxRQUF4QixFQUFrQ0MsTUFBbEMsRUFBMEM7QUFDdEMsU0FBT2hCLFNBQVMsQ0FBQ2UsUUFBRCxFQUFXQyxNQUFYLENBQWhCO0FBQ0g7O0FBRUQsU0FBU1YsVUFBVCxDQUFvQlMsUUFBcEIsRUFBOEJDLE1BQTlCLEVBQXNDRSxTQUF0QyxFQUFpRDtBQUM3QyxTQUFPSCxRQUFRLENBQUNPLFFBQVQsQ0FBa0JOLE1BQWxCLEVBQTBCRSxTQUFTLEtBQUt0QixvRUFBeEMsQ0FBUDtBQUNIOztBQUVELFNBQVNXLGNBQVQsQ0FBd0JRLFFBQXhCLEVBQWtDQyxNQUFsQyxFQUEwQ0UsU0FBMUMsRUFBcUQ7QUFDakQsU0FBTyxDQUFDWixVQUFVLENBQUNTLFFBQUQsRUFBV0MsTUFBWCxFQUFtQkUsU0FBbkIsQ0FBWCxFQUEwQ1osVUFBVSxDQUFDUyxRQUFELEVBQVdDLE1BQU0sR0FBRyxDQUFwQixFQUF1QkUsU0FBdkIsQ0FBcEQsQ0FBUDtBQUNIOztBQUVELFNBQVNWLGVBQVQsQ0FBeUJPLFFBQXpCLEVBQW1DQyxNQUFuQyxFQUEyQ0UsU0FBM0MsRUFBc0Q7QUFDbEQsU0FBT2YsU0FBUyxDQUFDWSxRQUFELEVBQVdDLE1BQVgsRUFBbUJFLFNBQW5CLENBQWhCO0FBQ0g7O0FBRUQsU0FBU1QsV0FBVCxDQUFxQmMsUUFBckIsRUFBK0I7QUFDM0IsTUFBSXpCLFFBQVEsQ0FBQ3lCLFFBQUQsQ0FBUixLQUF1QkMsU0FBM0IsRUFBc0M7QUFDbEMsVUFBTSxJQUFJQyxLQUFKLENBQVUscUJBQVYsQ0FBTjtBQUNIOztBQUVELFNBQU81QixTQUFTLENBQUNDLFFBQVEsQ0FBQ3lCLFFBQUQsQ0FBVCxDQUFoQjtBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQnJvd3NlckltYWdlUmVzaXplci8uL25vZGVfbW9kdWxlcy9leGlmcmVhZGVyL3NyYy90eXBlcy5qcz9hODRjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIFRoaXMgU291cmNlIENvZGUgRm9ybSBpcyBzdWJqZWN0IHRvIHRoZSB0ZXJtcyBvZiB0aGUgTW96aWxsYSBQdWJsaWNcbiAqIExpY2Vuc2UsIHYuIDIuMC4gSWYgYSBjb3B5IG9mIHRoZSBNUEwgd2FzIG5vdCBkaXN0cmlidXRlZCB3aXRoIHRoaXNcbiAqIGZpbGUsIFlvdSBjYW4gb2J0YWluIG9uZSBhdCBodHRwczovL21vemlsbGEub3JnL01QTC8yLjAvLiAqL1xuXG5pbXBvcnQgQnl0ZU9yZGVyIGZyb20gJy4vYnl0ZS1vcmRlci5qcyc7XG5cbmNvbnN0IHR5cGVTaXplcyA9IHtcbiAgICAxOiAxLCAvLyBCWVRFXG4gICAgMjogMSwgLy8gQVNDSUlcbiAgICAzOiAyLCAvLyBTSE9SVFxuICAgIDQ6IDQsIC8vIExPTkdcbiAgICA1OiA4LCAvLyBSQVRJT05BTFxuICAgIDc6IDEsIC8vIFVOREVGSU5FRFxuICAgIDk6IDQsIC8vIFNMT05HXG4gICAgMTA6IDgsIC8vIFNSQVRJT05BTFxuICAgIDEzOiA0IC8vIElGRFxufTtcblxuY29uc3QgdGFnVHlwZXMgPSB7XG4gICAgJ0JZVEUnOiAxLFxuICAgICdBU0NJSSc6IDIsXG4gICAgJ1NIT1JUJzogMyxcbiAgICAnTE9ORyc6IDQsXG4gICAgJ1JBVElPTkFMJzogNSxcbiAgICAnVU5ERUZJTkVEJzogNyxcbiAgICAnU0xPTkcnOiA5LFxuICAgICdTUkFUSU9OQUwnOiAxMCxcbiAgICAnSUZEJzogMTNcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBnZXRBc2NpaVZhbHVlLFxuICAgIGdldEJ5dGVBdCxcbiAgICBnZXRBc2NpaUF0LFxuICAgIGdldFNob3J0QXQsXG4gICAgZ2V0TG9uZ0F0LFxuICAgIGdldFJhdGlvbmFsQXQsXG4gICAgZ2V0VW5kZWZpbmVkQXQsXG4gICAgZ2V0U2xvbmdBdCxcbiAgICBnZXRTcmF0aW9uYWxBdCxcbiAgICBnZXRJZmRQb2ludGVyQXQsXG4gICAgdHlwZVNpemVzLFxuICAgIHRhZ1R5cGVzLFxuICAgIGdldFR5cGVTaXplXG59O1xuXG5mdW5jdGlvbiBnZXRBc2NpaVZhbHVlKGNoYXJBcnJheSkge1xuICAgIHJldHVybiBjaGFyQXJyYXkubWFwKChjaGFyQ29kZSkgPT4gU3RyaW5nLmZyb21DaGFyQ29kZShjaGFyQ29kZSkpO1xufVxuXG5mdW5jdGlvbiBnZXRCeXRlQXQoZGF0YVZpZXcsIG9mZnNldCkge1xuICAgIHJldHVybiBkYXRhVmlldy5nZXRVaW50OChvZmZzZXQpO1xufVxuXG5mdW5jdGlvbiBnZXRBc2NpaUF0KGRhdGFWaWV3LCBvZmZzZXQpIHtcbiAgICByZXR1cm4gZGF0YVZpZXcuZ2V0VWludDgob2Zmc2V0KTtcbn1cblxuZnVuY3Rpb24gZ2V0U2hvcnRBdChkYXRhVmlldywgb2Zmc2V0LCBieXRlT3JkZXIpIHtcbiAgICByZXR1cm4gZGF0YVZpZXcuZ2V0VWludDE2KG9mZnNldCwgYnl0ZU9yZGVyID09PSBCeXRlT3JkZXIuTElUVExFX0VORElBTik7XG59XG5cbmZ1bmN0aW9uIGdldExvbmdBdChkYXRhVmlldywgb2Zmc2V0LCBieXRlT3JkZXIpIHtcbiAgICByZXR1cm4gZGF0YVZpZXcuZ2V0VWludDMyKG9mZnNldCwgYnl0ZU9yZGVyID09PSBCeXRlT3JkZXIuTElUVExFX0VORElBTik7XG59XG5cbmZ1bmN0aW9uIGdldFJhdGlvbmFsQXQoZGF0YVZpZXcsIG9mZnNldCwgYnl0ZU9yZGVyKSB7XG4gICAgcmV0dXJuIFtnZXRMb25nQXQoZGF0YVZpZXcsIG9mZnNldCwgYnl0ZU9yZGVyKSwgZ2V0TG9uZ0F0KGRhdGFWaWV3LCBvZmZzZXQgKyA0LCBieXRlT3JkZXIpXTtcbn1cblxuZnVuY3Rpb24gZ2V0VW5kZWZpbmVkQXQoZGF0YVZpZXcsIG9mZnNldCkge1xuICAgIHJldHVybiBnZXRCeXRlQXQoZGF0YVZpZXcsIG9mZnNldCk7XG59XG5cbmZ1bmN0aW9uIGdldFNsb25nQXQoZGF0YVZpZXcsIG9mZnNldCwgYnl0ZU9yZGVyKSB7XG4gICAgcmV0dXJuIGRhdGFWaWV3LmdldEludDMyKG9mZnNldCwgYnl0ZU9yZGVyID09PSBCeXRlT3JkZXIuTElUVExFX0VORElBTik7XG59XG5cbmZ1bmN0aW9uIGdldFNyYXRpb25hbEF0KGRhdGFWaWV3LCBvZmZzZXQsIGJ5dGVPcmRlcikge1xuICAgIHJldHVybiBbZ2V0U2xvbmdBdChkYXRhVmlldywgb2Zmc2V0LCBieXRlT3JkZXIpLCBnZXRTbG9uZ0F0KGRhdGFWaWV3LCBvZmZzZXQgKyA0LCBieXRlT3JkZXIpXTtcbn1cblxuZnVuY3Rpb24gZ2V0SWZkUG9pbnRlckF0KGRhdGFWaWV3LCBvZmZzZXQsIGJ5dGVPcmRlcikge1xuICAgIHJldHVybiBnZXRMb25nQXQoZGF0YVZpZXcsIG9mZnNldCwgYnl0ZU9yZGVyKTtcbn1cblxuZnVuY3Rpb24gZ2V0VHlwZVNpemUodHlwZU5hbWUpIHtcbiAgICBpZiAodGFnVHlwZXNbdHlwZU5hbWVdID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBzdWNoIHR5cGUgZm91bmQuJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHR5cGVTaXplc1t0YWdUeXBlc1t0eXBlTmFtZV1dO1xufVxuIl0sIm5hbWVzIjpbIkJ5dGVPcmRlciIsInR5cGVTaXplcyIsInRhZ1R5cGVzIiwiZ2V0QXNjaWlWYWx1ZSIsImdldEJ5dGVBdCIsImdldEFzY2lpQXQiLCJnZXRTaG9ydEF0IiwiZ2V0TG9uZ0F0IiwiZ2V0UmF0aW9uYWxBdCIsImdldFVuZGVmaW5lZEF0IiwiZ2V0U2xvbmdBdCIsImdldFNyYXRpb25hbEF0IiwiZ2V0SWZkUG9pbnRlckF0IiwiZ2V0VHlwZVNpemUiLCJjaGFyQXJyYXkiLCJtYXAiLCJjaGFyQ29kZSIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsImRhdGFWaWV3Iiwib2Zmc2V0IiwiZ2V0VWludDgiLCJieXRlT3JkZXIiLCJnZXRVaW50MTYiLCJMSVRUTEVfRU5ESUFOIiwiZ2V0VWludDMyIiwiZ2V0SW50MzIiLCJ0eXBlTmFtZSIsInVuZGVmaW5lZCIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/types.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/exifreader/src/utils.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"deferInit\": () => (/* binding */ deferInit),\n/* harmony export */   \"getBase64Image\": () => (/* binding */ getBase64Image),\n/* harmony export */   \"getCharacterArray\": () => (/* binding */ getCharacterArray),\n/* harmony export */   \"getStringFromDataView\": () => (/* binding */ getStringFromDataView),\n/* harmony export */   \"getStringValueFromArray\": () => (/* binding */ getStringValueFromArray),\n/* harmony export */   \"getUnicodeStringFromDataView\": () => (/* binding */ getUnicodeStringFromDataView),\n/* harmony export */   \"objectAssign\": () => (/* binding */ objectAssign)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\nfunction getStringFromDataView(dataView, offset, length) {\n  var chars = [];\n\n  for (var i = 0; i < length && offset + i < dataView.byteLength; i++) {\n    chars.push(dataView.getUint8(offset + i));\n  }\n\n  return getStringValueFromArray(chars);\n}\nfunction getUnicodeStringFromDataView(dataView, offset, length) {\n  var chars = [];\n\n  for (var i = 0; i < length && offset + i < dataView.byteLength; i += 2) {\n    chars.push(dataView.getUint16(offset + i));\n  }\n\n  return getStringValueFromArray(chars);\n}\nfunction getStringValueFromArray(charArray) {\n  return charArray.map(function (charCode) {\n    return String.fromCharCode(charCode);\n  }).join('');\n}\nfunction getCharacterArray(string) {\n  return string.split('').map(function (character) {\n    return character.charCodeAt(0);\n  });\n}\nfunction objectAssign() {\n  for (var i = 1; i < arguments.length; i++) {\n    for (var property in arguments[i]) {\n      arguments[0][property] = arguments[i][property];\n    }\n  }\n\n  return arguments[0];\n}\nfunction deferInit(object, key, initializer) {\n  var initialized = false;\n  Object.defineProperty(object, key, {\n    get: function get() {\n      if (!initialized) {\n        initialized = true;\n        Object.defineProperty(object, key, {\n          configurable: true,\n          enumerable: true,\n          value: initializer.apply(object),\n          writable: true\n        });\n      }\n\n      return object[key];\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\nfunction getBase64Image(image) {\n  if (typeof btoa !== 'undefined') {\n    // IE11- does not implement reduce on the Uint8Array prototype.\n    return btoa(Array.prototype.reduce.call(new Uint8Array(image), function (data, byte) {\n      return data + String.fromCharCode(byte);\n    }, ''));\n  }\n\n  if (typeof Buffer === 'undefined') {\n    return undefined;\n  }\n\n  if (_typeof(Buffer.from) !== undefined) {\n    // eslint-disable-line no-undef\n    return Buffer.from(image).toString('base64'); // eslint-disable-line no-undef\n  }\n\n  return new Buffer(image).toString('base64'); // eslint-disable-line no-undef\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMvdXRpbHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7OztBQUlPLFNBQVNBLHFCQUFULENBQStCQyxRQUEvQixFQUF5Q0MsTUFBekMsRUFBaURDLE1BQWpELEVBQXlEO0FBQzVELE1BQU1DLEtBQUssR0FBRyxFQUFkOztBQUNBLE9BQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0YsTUFBSixJQUFjRCxNQUFNLEdBQUdHLENBQVQsR0FBYUosUUFBUSxDQUFDSyxVQUFwRCxFQUFnRUQsQ0FBQyxFQUFqRSxFQUFxRTtBQUNqRUQsSUFBQUEsS0FBSyxDQUFDRyxJQUFOLENBQVdOLFFBQVEsQ0FBQ08sUUFBVCxDQUFrQk4sTUFBTSxHQUFHRyxDQUEzQixDQUFYO0FBQ0g7O0FBQ0QsU0FBT0ksdUJBQXVCLENBQUNMLEtBQUQsQ0FBOUI7QUFDSDtBQUVNLFNBQVNNLDRCQUFULENBQXNDVCxRQUF0QyxFQUFnREMsTUFBaEQsRUFBd0RDLE1BQXhELEVBQWdFO0FBQ25FLE1BQU1DLEtBQUssR0FBRyxFQUFkOztBQUNBLE9BQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0YsTUFBSixJQUFjRCxNQUFNLEdBQUdHLENBQVQsR0FBYUosUUFBUSxDQUFDSyxVQUFwRCxFQUFnRUQsQ0FBQyxJQUFJLENBQXJFLEVBQXdFO0FBQ3BFRCxJQUFBQSxLQUFLLENBQUNHLElBQU4sQ0FBV04sUUFBUSxDQUFDVSxTQUFULENBQW1CVCxNQUFNLEdBQUdHLENBQTVCLENBQVg7QUFDSDs7QUFDRCxTQUFPSSx1QkFBdUIsQ0FBQ0wsS0FBRCxDQUE5QjtBQUNIO0FBRU0sU0FBU0ssdUJBQVQsQ0FBaUNHLFNBQWpDLEVBQTRDO0FBQy9DLFNBQU9BLFNBQVMsQ0FBQ0MsR0FBVixDQUFjLFVBQUNDLFFBQUQ7QUFBQSxXQUFjQyxNQUFNLENBQUNDLFlBQVAsQ0FBb0JGLFFBQXBCLENBQWQ7QUFBQSxHQUFkLEVBQTJERyxJQUEzRCxDQUFnRSxFQUFoRSxDQUFQO0FBQ0g7QUFFTSxTQUFTQyxpQkFBVCxDQUEyQkMsTUFBM0IsRUFBbUM7QUFDdEMsU0FBT0EsTUFBTSxDQUFDQyxLQUFQLENBQWEsRUFBYixFQUFpQlAsR0FBakIsQ0FBcUIsVUFBQ1EsU0FBRDtBQUFBLFdBQWVBLFNBQVMsQ0FBQ0MsVUFBVixDQUFxQixDQUFyQixDQUFmO0FBQUEsR0FBckIsQ0FBUDtBQUNIO0FBRU0sU0FBU0MsWUFBVCxHQUF3QjtBQUMzQixPQUFLLElBQUlsQixDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHbUIsU0FBUyxDQUFDckIsTUFBOUIsRUFBc0NFLENBQUMsRUFBdkMsRUFBMkM7QUFDdkMsU0FBSyxJQUFNb0IsUUFBWCxJQUF1QkQsU0FBUyxDQUFDbkIsQ0FBRCxDQUFoQyxFQUFxQztBQUNqQ21CLE1BQUFBLFNBQVMsQ0FBQyxDQUFELENBQVQsQ0FBYUMsUUFBYixJQUF5QkQsU0FBUyxDQUFDbkIsQ0FBRCxDQUFULENBQWFvQixRQUFiLENBQXpCO0FBQ0g7QUFDSjs7QUFFRCxTQUFPRCxTQUFTLENBQUMsQ0FBRCxDQUFoQjtBQUNIO0FBRU0sU0FBU0UsU0FBVCxDQUFtQkMsTUFBbkIsRUFBMkJDLEdBQTNCLEVBQWdDQyxXQUFoQyxFQUE2QztBQUNoRCxNQUFJQyxXQUFXLEdBQUcsS0FBbEI7QUFDQUMsRUFBQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCTCxNQUF0QixFQUE4QkMsR0FBOUIsRUFBbUM7QUFDL0JLLElBQUFBLEdBRCtCLGlCQUN6QjtBQUNGLFVBQUksQ0FBQ0gsV0FBTCxFQUFrQjtBQUNkQSxRQUFBQSxXQUFXLEdBQUcsSUFBZDtBQUNBQyxRQUFBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JMLE1BQXRCLEVBQThCQyxHQUE5QixFQUFtQztBQUMvQk0sVUFBQUEsWUFBWSxFQUFFLElBRGlCO0FBRS9CQyxVQUFBQSxVQUFVLEVBQUUsSUFGbUI7QUFHL0JDLFVBQUFBLEtBQUssRUFBRVAsV0FBVyxDQUFDUSxLQUFaLENBQWtCVixNQUFsQixDQUh3QjtBQUkvQlcsVUFBQUEsUUFBUSxFQUFFO0FBSnFCLFNBQW5DO0FBTUg7O0FBQ0QsYUFBT1gsTUFBTSxDQUFDQyxHQUFELENBQWI7QUFDSCxLQVo4QjtBQWEvQk0sSUFBQUEsWUFBWSxFQUFFLElBYmlCO0FBYy9CQyxJQUFBQSxVQUFVLEVBQUU7QUFkbUIsR0FBbkM7QUFnQkg7QUFFTSxTQUFTSSxjQUFULENBQXdCQyxLQUF4QixFQUErQjtBQUNsQyxNQUFJLE9BQU9DLElBQVAsS0FBZ0IsV0FBcEIsRUFBaUM7QUFDN0I7QUFDQSxXQUFPQSxJQUFJLENBQUNDLEtBQUssQ0FBQ0MsU0FBTixDQUFnQkMsTUFBaEIsQ0FBdUJDLElBQXZCLENBQTRCLElBQUlDLFVBQUosQ0FBZU4sS0FBZixDQUE1QixFQUFtRCxVQUFDTyxJQUFELEVBQU9DLElBQVA7QUFBQSxhQUFnQkQsSUFBSSxHQUFHaEMsTUFBTSxDQUFDQyxZQUFQLENBQW9CZ0MsSUFBcEIsQ0FBdkI7QUFBQSxLQUFuRCxFQUFxRyxFQUFyRyxDQUFELENBQVg7QUFDSDs7QUFDRCxNQUFJLE9BQU9DLE1BQVAsS0FBa0IsV0FBdEIsRUFBbUM7QUFDL0IsV0FBT0MsU0FBUDtBQUNIOztBQUNELE1BQUksUUFBT0QsTUFBTSxDQUFDRSxJQUFkLE1BQXVCRCxTQUEzQixFQUFzQztBQUFFO0FBQ3BDLFdBQU9ELE1BQU0sQ0FBQ0UsSUFBUCxDQUFZWCxLQUFaLEVBQW1CWSxRQUFuQixDQUE0QixRQUE1QixDQUFQLENBRGtDLENBQ1k7QUFDakQ7O0FBQ0QsU0FBUSxJQUFJSCxNQUFKLENBQVdULEtBQVgsQ0FBRCxDQUFvQlksUUFBcEIsQ0FBNkIsUUFBN0IsQ0FBUCxDQVhrQyxDQVdhO0FBQ2xEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQnJvd3NlckltYWdlUmVzaXplci8uL25vZGVfbW9kdWxlcy9leGlmcmVhZGVyL3NyYy91dGlscy5qcz9hYzAzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIFRoaXMgU291cmNlIENvZGUgRm9ybSBpcyBzdWJqZWN0IHRvIHRoZSB0ZXJtcyBvZiB0aGUgTW96aWxsYSBQdWJsaWNcbiAqIExpY2Vuc2UsIHYuIDIuMC4gSWYgYSBjb3B5IG9mIHRoZSBNUEwgd2FzIG5vdCBkaXN0cmlidXRlZCB3aXRoIHRoaXNcbiAqIGZpbGUsIFlvdSBjYW4gb2J0YWluIG9uZSBhdCBodHRwczovL21vemlsbGEub3JnL01QTC8yLjAvLiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0U3RyaW5nRnJvbURhdGFWaWV3KGRhdGFWaWV3LCBvZmZzZXQsIGxlbmd0aCkge1xuICAgIGNvbnN0IGNoYXJzID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGggJiYgb2Zmc2V0ICsgaSA8IGRhdGFWaWV3LmJ5dGVMZW5ndGg7IGkrKykge1xuICAgICAgICBjaGFycy5wdXNoKGRhdGFWaWV3LmdldFVpbnQ4KG9mZnNldCArIGkpKTtcbiAgICB9XG4gICAgcmV0dXJuIGdldFN0cmluZ1ZhbHVlRnJvbUFycmF5KGNoYXJzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFVuaWNvZGVTdHJpbmdGcm9tRGF0YVZpZXcoZGF0YVZpZXcsIG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgY29uc3QgY2hhcnMgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aCAmJiBvZmZzZXQgKyBpIDwgZGF0YVZpZXcuYnl0ZUxlbmd0aDsgaSArPSAyKSB7XG4gICAgICAgIGNoYXJzLnB1c2goZGF0YVZpZXcuZ2V0VWludDE2KG9mZnNldCArIGkpKTtcbiAgICB9XG4gICAgcmV0dXJuIGdldFN0cmluZ1ZhbHVlRnJvbUFycmF5KGNoYXJzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFN0cmluZ1ZhbHVlRnJvbUFycmF5KGNoYXJBcnJheSkge1xuICAgIHJldHVybiBjaGFyQXJyYXkubWFwKChjaGFyQ29kZSkgPT4gU3RyaW5nLmZyb21DaGFyQ29kZShjaGFyQ29kZSkpLmpvaW4oJycpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2hhcmFjdGVyQXJyYXkoc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0cmluZy5zcGxpdCgnJykubWFwKChjaGFyYWN0ZXIpID0+IGNoYXJhY3Rlci5jaGFyQ29kZUF0KDApKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9iamVjdEFzc2lnbigpIHtcbiAgICBmb3IgKGxldCBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBmb3IgKGNvbnN0IHByb3BlcnR5IGluIGFyZ3VtZW50c1tpXSkge1xuICAgICAgICAgICAgYXJndW1lbnRzWzBdW3Byb3BlcnR5XSA9IGFyZ3VtZW50c1tpXVtwcm9wZXJ0eV07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gYXJndW1lbnRzWzBdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGVmZXJJbml0KG9iamVjdCwga2V5LCBpbml0aWFsaXplcikge1xuICAgIGxldCBpbml0aWFsaXplZCA9IGZhbHNlO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmplY3QsIGtleSwge1xuICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgICBpZiAoIWluaXRpYWxpemVkKSB7XG4gICAgICAgICAgICAgICAgaW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmplY3QsIGtleSwge1xuICAgICAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBpbml0aWFsaXplci5hcHBseShvYmplY3QpLFxuICAgICAgICAgICAgICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG9iamVjdFtrZXldO1xuICAgICAgICB9LFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEJhc2U2NEltYWdlKGltYWdlKSB7XG4gICAgaWYgKHR5cGVvZiBidG9hICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAvLyBJRTExLSBkb2VzIG5vdCBpbXBsZW1lbnQgcmVkdWNlIG9uIHRoZSBVaW50OEFycmF5IHByb3RvdHlwZS5cbiAgICAgICAgcmV0dXJuIGJ0b2EoQXJyYXkucHJvdG90eXBlLnJlZHVjZS5jYWxsKG5ldyBVaW50OEFycmF5KGltYWdlKSwgKGRhdGEsIGJ5dGUpID0+IGRhdGEgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGJ5dGUpLCAnJykpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIEJ1ZmZlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBCdWZmZXIuZnJvbSAhPT0gdW5kZWZpbmVkKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGltYWdlKS50b1N0cmluZygnYmFzZTY0Jyk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcbiAgICB9XG4gICAgcmV0dXJuIChuZXcgQnVmZmVyKGltYWdlKSkudG9TdHJpbmcoJ2Jhc2U2NCcpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG59XG4iXSwibmFtZXMiOlsiZ2V0U3RyaW5nRnJvbURhdGFWaWV3IiwiZGF0YVZpZXciLCJvZmZzZXQiLCJsZW5ndGgiLCJjaGFycyIsImkiLCJieXRlTGVuZ3RoIiwicHVzaCIsImdldFVpbnQ4IiwiZ2V0U3RyaW5nVmFsdWVGcm9tQXJyYXkiLCJnZXRVbmljb2RlU3RyaW5nRnJvbURhdGFWaWV3IiwiZ2V0VWludDE2IiwiY2hhckFycmF5IiwibWFwIiwiY2hhckNvZGUiLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJqb2luIiwiZ2V0Q2hhcmFjdGVyQXJyYXkiLCJzdHJpbmciLCJzcGxpdCIsImNoYXJhY3RlciIsImNoYXJDb2RlQXQiLCJvYmplY3RBc3NpZ24iLCJhcmd1bWVudHMiLCJwcm9wZXJ0eSIsImRlZmVySW5pdCIsIm9iamVjdCIsImtleSIsImluaXRpYWxpemVyIiwiaW5pdGlhbGl6ZWQiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldCIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJ2YWx1ZSIsImFwcGx5Iiwid3JpdGFibGUiLCJnZXRCYXNlNjRJbWFnZSIsImltYWdlIiwiYnRvYSIsIkFycmF5IiwicHJvdG90eXBlIiwicmVkdWNlIiwiY2FsbCIsIlVpbnQ4QXJyYXkiLCJkYXRhIiwiYnl0ZSIsIkJ1ZmZlciIsInVuZGVmaW5lZCIsImZyb20iLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/utils.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/xmp-tag-names.js":
/*!******************************************************!*\
  !*** ./node_modules/exifreader/src/xmp-tag-names.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  'tiff:Orientation': function tiffOrientation(value) {\n    if (value === '1') {\n      return 'Horizontal (normal)';\n    }\n\n    if (value === '2') {\n      return 'Mirror horizontal';\n    }\n\n    if (value === '3') {\n      return 'Rotate 180';\n    }\n\n    if (value === '4') {\n      return 'Mirror vertical';\n    }\n\n    if (value === '5') {\n      return 'Mirror horizontal and rotate 270 CW';\n    }\n\n    if (value === '6') {\n      return 'Rotate 90 CW';\n    }\n\n    if (value === '7') {\n      return 'Mirror horizontal and rotate 90 CW';\n    }\n\n    if (value === '8') {\n      return 'Rotate 270 CW';\n    }\n\n    return value;\n  },\n  'exif:GPSLatitude': calculateGPSValue,\n  'exif:GPSLongitude': calculateGPSValue\n});\n\nfunction calculateGPSValue(value) {\n  var _value$split = value.split(','),\n      _value$split2 = _slicedToArray(_value$split, 2),\n      degreesString = _value$split2[0],\n      minutesString = _value$split2[1];\n\n  if (degreesString !== undefined && minutesString !== undefined) {\n    var degrees = parseFloat(degreesString);\n    var minutes = parseFloat(minutesString);\n    var ref = minutesString.charAt(minutesString.length - 1);\n\n    if (!Number.isNaN(degrees) && !Number.isNaN(minutes)) {\n      return '' + (degrees + minutes / 60) + ref;\n    }\n  }\n\n  return value;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXhpZnJlYWRlci9zcmMveG1wLXRhZy1uYW1lcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7OztBQUlBLGlFQUFlO0FBQ1gsb0JBRFcsMkJBQ1FBLEtBRFIsRUFDZTtBQUN0QixRQUFJQSxLQUFLLEtBQUssR0FBZCxFQUFtQjtBQUNmLGFBQU8scUJBQVA7QUFDSDs7QUFDRCxRQUFJQSxLQUFLLEtBQUssR0FBZCxFQUFtQjtBQUNmLGFBQU8sbUJBQVA7QUFDSDs7QUFDRCxRQUFJQSxLQUFLLEtBQUssR0FBZCxFQUFtQjtBQUNmLGFBQU8sWUFBUDtBQUNIOztBQUNELFFBQUlBLEtBQUssS0FBSyxHQUFkLEVBQW1CO0FBQ2YsYUFBTyxpQkFBUDtBQUNIOztBQUNELFFBQUlBLEtBQUssS0FBSyxHQUFkLEVBQW1CO0FBQ2YsYUFBTyxxQ0FBUDtBQUNIOztBQUNELFFBQUlBLEtBQUssS0FBSyxHQUFkLEVBQW1CO0FBQ2YsYUFBTyxjQUFQO0FBQ0g7O0FBQ0QsUUFBSUEsS0FBSyxLQUFLLEdBQWQsRUFBbUI7QUFDZixhQUFPLG9DQUFQO0FBQ0g7O0FBQ0QsUUFBSUEsS0FBSyxLQUFLLEdBQWQsRUFBbUI7QUFDZixhQUFPLGVBQVA7QUFDSDs7QUFDRCxXQUFPQSxLQUFQO0FBQ0gsR0EzQlU7QUE0Qlgsc0JBQW9CQyxpQkE1QlQ7QUE2QlgsdUJBQXFCQTtBQTdCVixDQUFmOztBQWdDQSxTQUFTQSxpQkFBVCxDQUEyQkQsS0FBM0IsRUFBa0M7QUFBQSxxQkFDU0EsS0FBSyxDQUFDRSxLQUFOLENBQVksR0FBWixDQURUO0FBQUE7QUFBQSxNQUN2QkMsYUFEdUI7QUFBQSxNQUNSQyxhQURROztBQUU5QixNQUFLRCxhQUFhLEtBQUtFLFNBQW5CLElBQWtDRCxhQUFhLEtBQUtDLFNBQXhELEVBQW9FO0FBQ2hFLFFBQU1DLE9BQU8sR0FBR0MsVUFBVSxDQUFDSixhQUFELENBQTFCO0FBQ0EsUUFBTUssT0FBTyxHQUFHRCxVQUFVLENBQUNILGFBQUQsQ0FBMUI7QUFDQSxRQUFNSyxHQUFHLEdBQUdMLGFBQWEsQ0FBQ00sTUFBZCxDQUFxQk4sYUFBYSxDQUFDTyxNQUFkLEdBQXVCLENBQTVDLENBQVo7O0FBQ0EsUUFBSyxDQUFDQyxNQUFNLENBQUNDLEtBQVAsQ0FBYVAsT0FBYixDQUFGLElBQTZCLENBQUNNLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhTCxPQUFiLENBQWxDLEVBQTBEO0FBQ3RELGFBQU8sTUFBTUYsT0FBTyxHQUFHRSxPQUFPLEdBQUcsRUFBMUIsSUFBZ0NDLEdBQXZDO0FBQ0g7QUFDSjs7QUFDRCxTQUFPVCxLQUFQO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ccm93c2VySW1hZ2VSZXNpemVyLy4vbm9kZV9tb2R1bGVzL2V4aWZyZWFkZXIvc3JjL3htcC10YWctbmFtZXMuanM/YTJkNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBUaGlzIFNvdXJjZSBDb2RlIEZvcm0gaXMgc3ViamVjdCB0byB0aGUgdGVybXMgb2YgdGhlIE1vemlsbGEgUHVibGljXG4gKiBMaWNlbnNlLCB2LiAyLjAuIElmIGEgY29weSBvZiB0aGUgTVBMIHdhcyBub3QgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzXG4gKiBmaWxlLCBZb3UgY2FuIG9idGFpbiBvbmUgYXQgaHR0cHM6Ly9tb3ppbGxhLm9yZy9NUEwvMi4wLy4gKi9cblxuZXhwb3J0IGRlZmF1bHQge1xuICAgICd0aWZmOk9yaWVudGF0aW9uJyh2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUgPT09ICcxJykge1xuICAgICAgICAgICAgcmV0dXJuICdIb3Jpem9udGFsIChub3JtYWwpJztcbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUgPT09ICcyJykge1xuICAgICAgICAgICAgcmV0dXJuICdNaXJyb3IgaG9yaXpvbnRhbCc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlID09PSAnMycpIHtcbiAgICAgICAgICAgIHJldHVybiAnUm90YXRlIDE4MCc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlID09PSAnNCcpIHtcbiAgICAgICAgICAgIHJldHVybiAnTWlycm9yIHZlcnRpY2FsJztcbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUgPT09ICc1Jykge1xuICAgICAgICAgICAgcmV0dXJuICdNaXJyb3IgaG9yaXpvbnRhbCBhbmQgcm90YXRlIDI3MCBDVyc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlID09PSAnNicpIHtcbiAgICAgICAgICAgIHJldHVybiAnUm90YXRlIDkwIENXJztcbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUgPT09ICc3Jykge1xuICAgICAgICAgICAgcmV0dXJuICdNaXJyb3IgaG9yaXpvbnRhbCBhbmQgcm90YXRlIDkwIENXJztcbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUgPT09ICc4Jykge1xuICAgICAgICAgICAgcmV0dXJuICdSb3RhdGUgMjcwIENXJztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSxcbiAgICAnZXhpZjpHUFNMYXRpdHVkZSc6IGNhbGN1bGF0ZUdQU1ZhbHVlLFxuICAgICdleGlmOkdQU0xvbmdpdHVkZSc6IGNhbGN1bGF0ZUdQU1ZhbHVlXG59O1xuXG5mdW5jdGlvbiBjYWxjdWxhdGVHUFNWYWx1ZSh2YWx1ZSkge1xuICAgIGNvbnN0IFtkZWdyZWVzU3RyaW5nLCBtaW51dGVzU3RyaW5nXSA9IHZhbHVlLnNwbGl0KCcsJyk7XG4gICAgaWYgKChkZWdyZWVzU3RyaW5nICE9PSB1bmRlZmluZWQpICYmIChtaW51dGVzU3RyaW5nICE9PSB1bmRlZmluZWQpKSB7XG4gICAgICAgIGNvbnN0IGRlZ3JlZXMgPSBwYXJzZUZsb2F0KGRlZ3JlZXNTdHJpbmcpO1xuICAgICAgICBjb25zdCBtaW51dGVzID0gcGFyc2VGbG9hdChtaW51dGVzU3RyaW5nKTtcbiAgICAgICAgY29uc3QgcmVmID0gbWludXRlc1N0cmluZy5jaGFyQXQobWludXRlc1N0cmluZy5sZW5ndGggLSAxKTtcbiAgICAgICAgaWYgKCghTnVtYmVyLmlzTmFOKGRlZ3JlZXMpKSAmJiAoIU51bWJlci5pc05hTihtaW51dGVzKSkpIHtcbiAgICAgICAgICAgIHJldHVybiAnJyArIChkZWdyZWVzICsgbWludXRlcyAvIDYwKSArIHJlZjtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG59XG4iXSwibmFtZXMiOlsidmFsdWUiLCJjYWxjdWxhdGVHUFNWYWx1ZSIsInNwbGl0IiwiZGVncmVlc1N0cmluZyIsIm1pbnV0ZXNTdHJpbmciLCJ1bmRlZmluZWQiLCJkZWdyZWVzIiwicGFyc2VGbG9hdCIsIm1pbnV0ZXMiLCJyZWYiLCJjaGFyQXQiLCJsZW5ndGgiLCJOdW1iZXIiLCJpc05hTiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/xmp-tag-names.js\n");

/***/ }),

/***/ "./node_modules/exifreader/src/xmp-tags.js":
/*!*************************************************!*\
  !*** ./node_modules/exifreader/src/xmp-tags.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/exifreader/src/utils.js\");\n/* harmony import */ var _xmp_tag_names_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./xmp-tag-names.js */ \"./node_modules/exifreader/src/xmp-tag-names.js\");\n/* harmony import */ var _dom_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom-parser.js */ \"./node_modules/exifreader/src/dom-parser.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  read: read\n});\n\nfunction read(dataView, chunks) {\n  if (typeof dataView === 'string') {\n    return readTags({}, dataView);\n  }\n\n  return extractCompleteChunks(dataView, chunks).reduce(readTags, {});\n} // The first chunk is always the regular XMP document. Then there is something\n// called extended XMP. The extended XMP is also a single XMP document but it\n// can be divided into multiple chunks that need to be combined into one.\n\n\nfunction extractCompleteChunks(dataView, chunks) {\n  if (chunks.length === 0) {\n    return [];\n  }\n\n  var completeChunks = [combineChunks(dataView, chunks.slice(0, 1))];\n\n  if (chunks.length > 1) {\n    completeChunks.push(combineChunks(dataView, chunks.slice(1)));\n  }\n\n  return completeChunks;\n}\n\nfunction combineChunks(dataView, chunks) {\n  var totalLength = chunks.reduce(function (size, chunk) {\n    return size + chunk.length;\n  }, 0);\n  var combinedChunks = new Uint8Array(totalLength);\n  var offset = 0;\n\n  for (var i = 0; i < chunks.length; i++) {\n    var chunk = chunks[i];\n    var slice = dataView.buffer.slice(chunk.dataOffset, chunk.dataOffset + chunk.length);\n    combinedChunks.set(new Uint8Array(slice), offset);\n    offset += chunk.length;\n  }\n\n  return new DataView(combinedChunks.buffer);\n}\n\nfunction readTags(tags, chunkDataView) {\n  try {\n    var _getDocument = getDocument(chunkDataView),\n        doc = _getDocument.doc,\n        raw = _getDocument.raw;\n\n    tags._raw = (tags._raw || '') + raw;\n    var rdf = getRDF(doc);\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.objectAssign)(tags, parseXMPObject(convertToObject(rdf, true)));\n  } catch (error) {\n    return tags;\n  }\n}\n\nfunction getDocument(chunkDataView) {\n  var Parser = _dom_parser_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get();\n\n  if (!Parser) {\n    console.warn('Warning: DOMParser is not available. It is needed to be able to parse XMP tags.'); // eslint-disable-line no-console\n\n    throw new Error();\n  }\n\n  var domParser = new Parser();\n  var xmlString = typeof chunkDataView === 'string' ? chunkDataView : (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getStringFromDataView)(chunkDataView, 0, chunkDataView.byteLength);\n  var doc = domParser.parseFromString(trimXmlSource(xmlString), 'application/xml');\n\n  if (doc.documentElement.nodeName === 'parsererror') {\n    throw new Error(doc.documentElement.textContent);\n  }\n\n  return {\n    doc: doc,\n    raw: xmlString\n  };\n}\n\nfunction trimXmlSource(xmlSource) {\n  return xmlSource.replace(/^.+(<\\?xpacket begin)/, '$1').replace(/(<\\?xpacket end=\".*\"\\?>).+$/, '$1');\n}\n\nfunction getRDF(node) {\n  for (var i = 0; i < node.childNodes.length; i++) {\n    if (node.childNodes[i].tagName === 'x:xmpmeta') {\n      return getRDF(node.childNodes[i]);\n    }\n\n    if (node.childNodes[i].tagName === 'rdf:RDF') {\n      return node.childNodes[i];\n    }\n  }\n\n  throw new Error();\n}\n\nfunction convertToObject(node) {\n  var isTopNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var childNodes = getChildNodes(node);\n\n  if (hasTextOnlyContent(childNodes)) {\n    if (isTopNode) {\n      return {};\n    }\n\n    return getTextValue(childNodes[0]);\n  }\n\n  return getElementsFromNodes(childNodes);\n}\n\nfunction getChildNodes(node) {\n  var elements = [];\n\n  for (var i = 0; i < node.childNodes.length; i++) {\n    elements.push(node.childNodes[i]);\n  }\n\n  return elements;\n}\n\nfunction hasTextOnlyContent(nodes) {\n  return nodes.length === 1 && nodes[0].nodeName === '#text';\n}\n\nfunction getTextValue(node) {\n  return node.nodeValue;\n}\n\nfunction getElementsFromNodes(nodes) {\n  var elements = {};\n  nodes.forEach(function (node) {\n    if (isElement(node)) {\n      var nodeElement = getElementFromNode(node);\n\n      if (elements[node.nodeName] !== undefined) {\n        if (!Array.isArray(elements[node.nodeName])) {\n          elements[node.nodeName] = [elements[node.nodeName]];\n        }\n\n        elements[node.nodeName].push(nodeElement);\n      } else {\n        elements[node.nodeName] = nodeElement;\n      }\n    }\n  });\n  return elements;\n}\n\nfunction isElement(node) {\n  return node.nodeName && node.nodeName !== '#text';\n}\n\nfunction getElementFromNode(node) {\n  return {\n    attributes: getAttributes(node),\n    value: convertToObject(node)\n  };\n}\n\nfunction getAttributes(element) {\n  var attributes = {};\n\n  for (var i = 0; i < element.attributes.length; i++) {\n    attributes[element.attributes[i].nodeName] = decodeURIComponent(escape(element.attributes[i].value));\n  }\n\n  return attributes;\n}\n\nfunction parseXMPObject(xmpObject) {\n  var tags = {};\n\n  if (typeof xmpObject === 'string') {\n    return xmpObject;\n  }\n\n  for (var nodeName in xmpObject) {\n    var nodes = xmpObject[nodeName];\n\n    if (!Array.isArray(nodes)) {\n      nodes = [nodes];\n    }\n\n    nodes.forEach(function (node) {\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.objectAssign)(tags, parseNodeAttributesAsTags(node.attributes));\n\n      if (_typeof(node.value) === 'object') {\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.objectAssign)(tags, parseNodeChildrenAsTags(node.value));\n      }\n    });\n  }\n\n  return tags;\n}\n\nfunction parseNodeAttributesAsTags(attributes) {\n  var tags = {};\n\n  for (var name in attributes) {\n    if (isTagAttribute(name)) {\n      tags[getLocalName(name)] = {\n        value: attributes[name],\n        attributes: {},\n        description: getDescription(attributes[name], name)\n      };\n    }\n  }\n\n  return tags;\n}\n\nfunction isTagAttribute(name) {\n  return name !== 'rdf:parseType' && !isNamespaceDefinition(name);\n}\n\nfunction isNamespaceDefinition(name) {\n  return name.split(':')[0] === 'xmlns';\n}\n\nfunction getLocalName(name) {\n  if (/^MicrosoftPhoto(_\\d+_)?:Rating$/i.test(name)) {\n    return 'RatingPercent';\n  }\n\n  return name.split(':')[1];\n}\n\nfunction getDescription(value) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n  if (Array.isArray(value)) {\n    return getDescriptionOfArray(value);\n  }\n\n  if (_typeof(value) === 'object') {\n    return getDescriptionOfObject(value);\n  }\n\n  try {\n    if (name && typeof _xmp_tag_names_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"][name] === 'function') {\n      return _xmp_tag_names_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"][name](value);\n    }\n\n    return decodeURIComponent(escape(value));\n  } catch (error) {\n    return value;\n  }\n}\n\nfunction getDescriptionOfArray(value) {\n  return value.map(function (item) {\n    if (item.value !== undefined) {\n      return getDescription(item.value);\n    }\n\n    return getDescription(item);\n  }).join(', ');\n}\n\nfunction getDescriptionOfObject(value) {\n  var descriptions = [];\n\n  for (var key in value) {\n    descriptions.push(\"\".concat(getClearTextKey(key), \": \").concat(getDescription(value[key].value)));\n  }\n\n  return descriptions.join('; ');\n}\n\nfunction getClearTextKey(key) {\n  if (key === 'CiAdrCity') {\n    return 'CreatorCity';\n  }\n\n  if (key === 'CiAdrCtry') {\n    return 'CreatorCountry';\n  }\n\n  if (key === 'CiAdrExtadr') {\n    return 'CreatorAddress';\n  }\n\n  if (key === 'CiAdrPcode') {\n    return 'CreatorPostalCode';\n  }\n\n  if (key === 'CiAdrRegion') {\n    return 'CreatorRegion';\n  }\n\n  if (key === 'CiEmailWork') {\n    return 'CreatorWorkEmail';\n  }\n\n  if (key === 'CiTelWork') {\n    return 'CreatorWorkPhone';\n  }\n\n  if (key === 'CiUrlWork') {\n    return 'CreatorWorkUrl';\n  }\n\n  return key;\n}\n\nfunction parseNodeChildrenAsTags(children) {\n  var tags = {};\n\n  for (var name in children) {\n    if (!isNamespaceDefinition(name)) {\n      tags[getLocalName(name)] = parseNodeAsTag(children[name], name);\n    }\n  }\n\n  return tags;\n}\n\nfunction parseNodeAsTag(node, name) {\n  if (hasNestedSimpleRdfDescription(node)) {\n    return parseNodeAsSimpleRdfDescription(node, name);\n  }\n\n  if (hasNestedStructureRdfDescription(node)) {\n    return parseNodeAsStructureRdfDescription(node, name);\n  }\n\n  if (isCompactStructure(node)) {\n    return parseNodeAsCompactStructure(node, name);\n  }\n\n  if (isArray(node)) {\n    return parseNodeAsArray(node, name);\n  }\n\n  return parseNodeAsSimpleValue(node, name);\n}\n\nfunction hasNestedSimpleRdfDescription(node) {\n  return node.attributes['rdf:parseType'] === 'Resource' && node.value['rdf:value'] !== undefined || node.value['rdf:Description'] !== undefined && node.value['rdf:Description'].value['rdf:value'] !== undefined;\n}\n\nfunction parseNodeAsSimpleRdfDescription(node, name) {\n  var attributes = parseNodeAttributes(node);\n\n  if (node.value['rdf:Description'] !== undefined) {\n    node = node.value['rdf:Description'];\n  }\n\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.objectAssign)(attributes, parseNodeAttributes(node), parseNodeChildrenAsAttributes(node));\n  var value = parseRdfValue(node);\n  return {\n    value: value,\n    attributes: attributes,\n    description: getDescription(value, name)\n  };\n}\n\nfunction parseNodeAttributes(node) {\n  var attributes = {};\n\n  for (var name in node.attributes) {\n    if (name !== 'rdf:parseType' && name !== 'rdf:resource' && !isNamespaceDefinition(name)) {\n      attributes[getLocalName(name)] = node.attributes[name];\n    }\n  }\n\n  return attributes;\n}\n\nfunction parseNodeChildrenAsAttributes(node) {\n  var attributes = {};\n\n  for (var name in node.value) {\n    if (name !== 'rdf:value' && !isNamespaceDefinition(name)) {\n      attributes[getLocalName(name)] = node.value[name].value;\n    }\n  }\n\n  return attributes;\n}\n\nfunction parseRdfValue(node) {\n  return getURIValue(node.value['rdf:value']) || node.value['rdf:value'].value;\n}\n\nfunction hasNestedStructureRdfDescription(node) {\n  return node.attributes['rdf:parseType'] === 'Resource' || node.value['rdf:Description'] !== undefined && node.value['rdf:Description'].value['rdf:value'] === undefined;\n}\n\nfunction parseNodeAsStructureRdfDescription(node, name) {\n  var tag = {\n    value: {},\n    attributes: {}\n  };\n\n  if (node.value['rdf:Description'] !== undefined) {\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.objectAssign)(tag.value, parseNodeAttributesAsTags(node.value['rdf:Description'].attributes));\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.objectAssign)(tag.attributes, parseNodeAttributes(node));\n    node = node.value['rdf:Description'];\n  }\n\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.objectAssign)(tag.value, parseNodeChildrenAsTags(node.value));\n  tag.description = getDescription(tag.value, name);\n  return tag;\n}\n\nfunction isCompactStructure(node) {\n  return Object.keys(node.value).length === 0 && node.attributes['xml:lang'] === undefined && node.attributes['rdf:resource'] === undefined;\n}\n\nfunction parseNodeAsCompactStructure(node, name) {\n  var value = parseNodeAttributesAsTags(node.attributes);\n  return {\n    value: value,\n    attributes: {},\n    description: getDescription(value, name)\n  };\n}\n\nfunction isArray(node) {\n  return getArrayChild(node.value) !== undefined;\n}\n\nfunction getArrayChild(value) {\n  return value['rdf:Bag'] || value['rdf:Seq'] || value['rdf:Alt'];\n}\n\nfunction parseNodeAsArray(node, name) {\n  var items = getArrayChild(node.value).value['rdf:li'];\n  var attributes = parseNodeAttributes(node);\n  var value = [];\n\n  if (items === undefined) {\n    items = [];\n  } else if (!Array.isArray(items)) {\n    items = [items];\n  }\n\n  items.forEach(function (item) {\n    value.push(parseArrayValue(item));\n  });\n  return {\n    value: value,\n    attributes: attributes,\n    description: getDescription(value, name)\n  };\n}\n\nfunction parseArrayValue(item) {\n  if (hasNestedSimpleRdfDescription(item)) {\n    return parseNodeAsSimpleRdfDescription(item);\n  }\n\n  if (hasNestedStructureRdfDescription(item)) {\n    return parseNodeAsStructureRdfDescription(item).value;\n  }\n\n  if (isCompactStructure(item)) {\n    return parseNodeAsCompactStructure(item).value;\n  }\n\n  return parseNodeAsSimpleValue(item);\n}\n\nfunction parseNodeAsSimpleValue(node, name) {\n  var value = getURIValue(node) || parseXMPObject(node.value);\n  return {\n    value: value,\n    attributes: parseNodeAttributes(node),\n    description: getDescription(value, name)\n  };\n}\n\nfunction getURIValue(node) {\n  return node.attributes && node.attributes['rdf:resource'];\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/exifreader/src/xmp-tags.js\n");

/***/ }),

/***/ "./src/browser_operations.js":
/*!***********************************!*\
  !*** ./src/browser_operations.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initializeOrGetCanvas\": () => (/* binding */ initializeOrGetCanvas),\n/* harmony export */   \"initializeOrGetImg\": () => (/* binding */ initializeOrGetImg)\n/* harmony export */ });\nfunction initializeOrGetImg() {\n  return document.createElement('img');\n}\nfunction initializeOrGetCanvas() {\n  return document.createElement('canvas');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYnJvd3Nlcl9vcGVyYXRpb25zLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sU0FBU0Esa0JBQVQsR0FBK0I7QUFDcEMsU0FBT0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLEtBQXZCLENBQVA7QUFDRDtBQUVNLFNBQVNDLHFCQUFULEdBQWtDO0FBQ3ZDLFNBQU9GLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixRQUF2QixDQUFQO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ccm93c2VySW1hZ2VSZXNpemVyLy4vc3JjL2Jyb3dzZXJfb3BlcmF0aW9ucy5qcz8xZjdkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpbml0aWFsaXplT3JHZXRJbWcgKCkge1xuICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0aWFsaXplT3JHZXRDYW52YXMgKCkge1xuICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XG59XG4iXSwibmFtZXMiOlsiaW5pdGlhbGl6ZU9yR2V0SW1nIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiaW5pdGlhbGl6ZU9yR2V0Q2FudmFzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/browser_operations.js\n");

/***/ }),

/***/ "./src/data_operations.js":
/*!********************************!*\
  !*** ./src/data_operations.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dataURIToBlob\": () => (/* binding */ dataURIToBlob),\n/* harmony export */   \"dataURItoBuffer\": () => (/* binding */ dataURItoBuffer)\n/* harmony export */ });\nfunction dataURItoBuffer(dataURI) {\n  var byteString = atob(dataURI.split(',')[1]);\n  var ab = new ArrayBuffer(byteString.length);\n  var ia = new Uint8Array(ab);\n\n  for (var i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  }\n\n  return ab;\n}\nfunction dataURIToBlob(dataURI) {\n  // convert base64 to raw binary data held in a string\n  // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n  var byteString = atob(dataURI.split(',')[1]); // separate out the mime component\n\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]; // write the bytes of the string to an ArrayBuffer\n\n  var ab = new ArrayBuffer(byteString.length); // create a view into the buffer\n\n  var ia = new Uint8Array(ab); // set the bytes of the buffer to the correct values\n\n  for (var i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  } // write the ArrayBuffer to a blob, and you're done\n\n\n  var blob = new Blob([ab], {\n    type: mimeString\n  });\n  return blob;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGF0YV9vcGVyYXRpb25zLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sU0FBU0EsZUFBVCxDQUF5QkMsT0FBekIsRUFBa0M7QUFDdkMsTUFBSUMsVUFBVSxHQUFHQyxJQUFJLENBQUNGLE9BQU8sQ0FBQ0csS0FBUixDQUFjLEdBQWQsRUFBbUIsQ0FBbkIsQ0FBRCxDQUFyQjtBQUNBLE1BQUlDLEVBQUUsR0FBRyxJQUFJQyxXQUFKLENBQWdCSixVQUFVLENBQUNLLE1BQTNCLENBQVQ7QUFDQSxNQUFJQyxFQUFFLEdBQUcsSUFBSUMsVUFBSixDQUFlSixFQUFmLENBQVQ7O0FBQ0EsT0FBSyxJQUFJSyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHUixVQUFVLENBQUNLLE1BQS9CLEVBQXVDRyxDQUFDLEVBQXhDLEVBQTRDO0FBQzFDRixJQUFBQSxFQUFFLENBQUNFLENBQUQsQ0FBRixHQUFRUixVQUFVLENBQUNTLFVBQVgsQ0FBc0JELENBQXRCLENBQVI7QUFDRDs7QUFFRCxTQUFPTCxFQUFQO0FBQ0Q7QUFFTSxTQUFTTyxhQUFULENBQXVCWCxPQUF2QixFQUFnQztBQUNyQztBQUNBO0FBQ0EsTUFBSUMsVUFBVSxHQUFHQyxJQUFJLENBQUNGLE9BQU8sQ0FBQ0csS0FBUixDQUFjLEdBQWQsRUFBbUIsQ0FBbkIsQ0FBRCxDQUFyQixDQUhxQyxDQUtyQzs7QUFDQSxNQUFJUyxVQUFVLEdBQUdaLE9BQU8sQ0FDckJHLEtBRGMsQ0FDUixHQURRLEVBQ0gsQ0FERyxFQUVkQSxLQUZjLENBRVIsR0FGUSxFQUVILENBRkcsRUFHZEEsS0FIYyxDQUdSLEdBSFEsRUFHSCxDQUhHLENBQWpCLENBTnFDLENBV3JDOztBQUNBLE1BQUlDLEVBQUUsR0FBRyxJQUFJQyxXQUFKLENBQWdCSixVQUFVLENBQUNLLE1BQTNCLENBQVQsQ0FacUMsQ0FjckM7O0FBQ0EsTUFBSUMsRUFBRSxHQUFHLElBQUlDLFVBQUosQ0FBZUosRUFBZixDQUFULENBZnFDLENBaUJyQzs7QUFDQSxPQUFLLElBQUlLLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdSLFVBQVUsQ0FBQ0ssTUFBL0IsRUFBdUNHLENBQUMsRUFBeEMsRUFBNEM7QUFDMUNGLElBQUFBLEVBQUUsQ0FBQ0UsQ0FBRCxDQUFGLEdBQVFSLFVBQVUsQ0FBQ1MsVUFBWCxDQUFzQkQsQ0FBdEIsQ0FBUjtBQUNELEdBcEJvQyxDQXNCckM7OztBQUNBLE1BQUlJLElBQUksR0FBRyxJQUFJQyxJQUFKLENBQVMsQ0FBQ1YsRUFBRCxDQUFULEVBQWU7QUFBRVcsSUFBQUEsSUFBSSxFQUFFSDtBQUFSLEdBQWYsQ0FBWDtBQUNBLFNBQU9DLElBQVA7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL0Jyb3dzZXJJbWFnZVJlc2l6ZXIvLi9zcmMvZGF0YV9vcGVyYXRpb25zLmpzPzc4YjYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGRhdGFVUkl0b0J1ZmZlcihkYXRhVVJJKSB7XG4gIGxldCBieXRlU3RyaW5nID0gYXRvYihkYXRhVVJJLnNwbGl0KCcsJylbMV0pO1xuICBsZXQgYWIgPSBuZXcgQXJyYXlCdWZmZXIoYnl0ZVN0cmluZy5sZW5ndGgpO1xuICBsZXQgaWEgPSBuZXcgVWludDhBcnJheShhYik7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYnl0ZVN0cmluZy5sZW5ndGg7IGkrKykge1xuICAgIGlhW2ldID0gYnl0ZVN0cmluZy5jaGFyQ29kZUF0KGkpO1xuICB9XG5cbiAgcmV0dXJuIGFiO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGF0YVVSSVRvQmxvYihkYXRhVVJJKSB7XG4gIC8vIGNvbnZlcnQgYmFzZTY0IHRvIHJhdyBiaW5hcnkgZGF0YSBoZWxkIGluIGEgc3RyaW5nXG4gIC8vIGRvZXNuJ3QgaGFuZGxlIFVSTEVuY29kZWQgRGF0YVVSSXMgLSBzZWUgU08gYW5zd2VyICM2ODUwMjc2IGZvciBjb2RlIHRoYXQgZG9lcyB0aGlzXG4gIGxldCBieXRlU3RyaW5nID0gYXRvYihkYXRhVVJJLnNwbGl0KCcsJylbMV0pO1xuXG4gIC8vIHNlcGFyYXRlIG91dCB0aGUgbWltZSBjb21wb25lbnRcbiAgbGV0IG1pbWVTdHJpbmcgPSBkYXRhVVJJXG4gICAgLnNwbGl0KCcsJylbMF1cbiAgICAuc3BsaXQoJzonKVsxXVxuICAgIC5zcGxpdCgnOycpWzBdO1xuXG4gIC8vIHdyaXRlIHRoZSBieXRlcyBvZiB0aGUgc3RyaW5nIHRvIGFuIEFycmF5QnVmZmVyXG4gIGxldCBhYiA9IG5ldyBBcnJheUJ1ZmZlcihieXRlU3RyaW5nLmxlbmd0aCk7XG5cbiAgLy8gY3JlYXRlIGEgdmlldyBpbnRvIHRoZSBidWZmZXJcbiAgbGV0IGlhID0gbmV3IFVpbnQ4QXJyYXkoYWIpO1xuXG4gIC8vIHNldCB0aGUgYnl0ZXMgb2YgdGhlIGJ1ZmZlciB0byB0aGUgY29ycmVjdCB2YWx1ZXNcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBieXRlU3RyaW5nLmxlbmd0aDsgaSsrKSB7XG4gICAgaWFbaV0gPSBieXRlU3RyaW5nLmNoYXJDb2RlQXQoaSk7XG4gIH1cblxuICAvLyB3cml0ZSB0aGUgQXJyYXlCdWZmZXIgdG8gYSBibG9iLCBhbmQgeW91J3JlIGRvbmVcbiAgbGV0IGJsb2IgPSBuZXcgQmxvYihbYWJdLCB7IHR5cGU6IG1pbWVTdHJpbmcgfSk7XG4gIHJldHVybiBibG9iO1xufSJdLCJuYW1lcyI6WyJkYXRhVVJJdG9CdWZmZXIiLCJkYXRhVVJJIiwiYnl0ZVN0cmluZyIsImF0b2IiLCJzcGxpdCIsImFiIiwiQXJyYXlCdWZmZXIiLCJsZW5ndGgiLCJpYSIsIlVpbnQ4QXJyYXkiLCJpIiwiY2hhckNvZGVBdCIsImRhdGFVUklUb0Jsb2IiLCJtaW1lU3RyaW5nIiwiYmxvYiIsIkJsb2IiLCJ0eXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/data_operations.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"readAndCompressImage\": () => (/* binding */ readAndCompressImage)\n/* harmony export */ });\n/* harmony import */ var exifreader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! exifreader */ \"./node_modules/exifreader/src/exif-reader.js\");\n/* harmony import */ var _browser_operations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./browser_operations */ \"./src/browser_operations.js\");\n/* harmony import */ var _scaling_operations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scaling_operations */ \"./src/scaling_operations.js\");\n\n\n\nvar DEFAULT_CONFIG = {\n  quality: 0.5,\n  maxWidth: 800,\n  maxHeight: 600,\n  autoRotate: true,\n  debug: false,\n  mimeType: 'image/jpeg'\n};\nfunction readAndCompressImage(file, userConfig) {\n  return new Promise(function (resolve, reject) {\n    var img = (0,_browser_operations__WEBPACK_IMPORTED_MODULE_0__.initializeOrGetImg)();\n    var reader = new FileReader();\n    var config = Object.assign({}, DEFAULT_CONFIG, userConfig);\n\n    reader.onload = function (e) {\n      img.onerror = function () {\n        reject(\"cannot load image.\");\n      };\n\n      img.onload = function () {\n        var scaleImageOptions = {\n          img: img,\n          config: config\n        };\n\n        if (config.autoRotate) {\n          if (config.debug) console.log('browser-image-resizer: detecting image orientation...');\n          var Orientation = {};\n\n          try {\n            var Result = exifreader__WEBPACK_IMPORTED_MODULE_2__[\"default\"].load(file);\n            Orientation = Result.Orientation || {};\n          } catch (err) {\n            console.error('browser-image-resizer: Error getting orientation');\n            console.error(err);\n          }\n\n          if (config.debug) {\n            console.log('browser-image-resizer: image orientation from EXIF tag = ' + Orientation);\n          }\n\n          scaleImageOptions.orientation = Orientation.value;\n        } else if (config.debug) {\n          console.log('browser-image-resizer: ignoring EXIF orientation tag because autoRotate is false...');\n        }\n\n        try {\n          var blob = (0,_scaling_operations__WEBPACK_IMPORTED_MODULE_1__.scaleImage)(scaleImageOptions);\n          resolve(blob);\n        } catch (err) {\n          reject(err);\n        }\n      };\n\n      img.src = e.target.result;\n    };\n\n    try {\n      reader.onerror = function () {\n        reject(\"cannot read image file.\");\n      };\n\n      reader.readAsDataURL(file);\n    } catch (err) {\n      reject(err);\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUEsTUFBTSxDQUFDZ0IsR0FBRCxDQUFOO0FBQ0Q7QUFDRixHQXRETSxDQUFQO0FBdUREIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQnJvd3NlckltYWdlUmVzaXplci8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeGlmUmVhZGVyIGZyb20gJ2V4aWZyZWFkZXInO1xuaW1wb3J0IHsgaW5pdGlhbGl6ZU9yR2V0SW1nIH0gZnJvbSAnLi9icm93c2VyX29wZXJhdGlvbnMnO1xuaW1wb3J0IHsgc2NhbGVJbWFnZSB9IGZyb20gJy4vc2NhbGluZ19vcGVyYXRpb25zJztcblxuY29uc3QgREVGQVVMVF9DT05GSUcgPSB7XG4gIHF1YWxpdHk6IDAuNSxcbiAgbWF4V2lkdGg6IDgwMCxcbiAgbWF4SGVpZ2h0OiA2MDAsXG4gIGF1dG9Sb3RhdGU6IHRydWUsXG4gIGRlYnVnOiBmYWxzZSxcbiAgbWltZVR5cGU6ICdpbWFnZS9qcGVnJ1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRBbmRDb21wcmVzc0ltYWdlKGZpbGUsIHVzZXJDb25maWcpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBsZXQgaW1nID0gaW5pdGlhbGl6ZU9yR2V0SW1nKCk7XG4gICAgbGV0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgbGV0IGNvbmZpZyA9IE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRfQ09ORklHLCB1c2VyQ29uZmlnKTtcblxuICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbihlKSB7XG4gICAgICBpbWcub25lcnJvciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZWplY3QoXCJjYW5ub3QgbG9hZCBpbWFnZS5cIik7XG4gICAgICB9XG4gICAgICBpbWcub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGxldCBzY2FsZUltYWdlT3B0aW9ucyA9IHsgaW1nLCBjb25maWcgfVxuICAgICAgICBpZiAoY29uZmlnLmF1dG9Sb3RhdGUpIHtcbiAgICAgICAgICBpZiAoY29uZmlnLmRlYnVnKVxuICAgICAgICAgICAgY29uc29sZS5sb2coXG4gICAgICAgICAgICAgICdicm93c2VyLWltYWdlLXJlc2l6ZXI6IGRldGVjdGluZyBpbWFnZSBvcmllbnRhdGlvbi4uLidcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgbGV0IE9yaWVudGF0aW9uID0ge307XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IFJlc3VsdCA9IEV4aWZSZWFkZXIubG9hZChmaWxlKTtcbiAgICAgICAgICAgIE9yaWVudGF0aW9uID0gUmVzdWx0Lk9yaWVudGF0aW9uIHx8IHt9O1xuICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignYnJvd3Nlci1pbWFnZS1yZXNpemVyOiBFcnJvciBnZXR0aW5nIG9yaWVudGF0aW9uJylcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoY29uZmlnLmRlYnVnKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcbiAgICAgICAgICAgICAgJ2Jyb3dzZXItaW1hZ2UtcmVzaXplcjogaW1hZ2Ugb3JpZW50YXRpb24gZnJvbSBFWElGIHRhZyA9ICcgK1xuICAgICAgICAgICAgICAgIE9yaWVudGF0aW9uXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzY2FsZUltYWdlT3B0aW9ucy5vcmllbnRhdGlvbiA9IE9yaWVudGF0aW9uLnZhbHVlXG4gICAgICAgIH0gZWxzZSBpZiAoY29uZmlnLmRlYnVnKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcbiAgICAgICAgICAgICAgJ2Jyb3dzZXItaW1hZ2UtcmVzaXplcjogaWdub3JpbmcgRVhJRiBvcmllbnRhdGlvbiB0YWcgYmVjYXVzZSBhdXRvUm90YXRlIGlzIGZhbHNlLi4uJ1xuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgIGxldCBibG9iID0gc2NhbGVJbWFnZShzY2FsZUltYWdlT3B0aW9ucyk7XG4gICAgICAgICAgcmVzb2x2ZShibG9iKVxuICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICByZWplY3QoZXJyKSBcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIGltZy5zcmMgPSBlLnRhcmdldC5yZXN1bHQ7XG4gICAgfTtcblxuICAgIHRyeSB7XG4gICAgICByZWFkZXIub25lcnJvciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZWplY3QoXCJjYW5ub3QgcmVhZCBpbWFnZSBmaWxlLlwiKTtcbiAgICAgIH1cbiAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmVqZWN0KGVycilcbiAgICB9XG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbIkV4aWZSZWFkZXIiLCJpbml0aWFsaXplT3JHZXRJbWciLCJzY2FsZUltYWdlIiwiREVGQVVMVF9DT05GSUciLCJxdWFsaXR5IiwibWF4V2lkdGgiLCJtYXhIZWlnaHQiLCJhdXRvUm90YXRlIiwiZGVidWciLCJtaW1lVHlwZSIsInJlYWRBbmRDb21wcmVzc0ltYWdlIiwiZmlsZSIsInVzZXJDb25maWciLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImltZyIsInJlYWRlciIsIkZpbGVSZWFkZXIiLCJjb25maWciLCJPYmplY3QiLCJhc3NpZ24iLCJvbmxvYWQiLCJlIiwib25lcnJvciIsInNjYWxlSW1hZ2VPcHRpb25zIiwiY29uc29sZSIsImxvZyIsIk9yaWVudGF0aW9uIiwiUmVzdWx0IiwibG9hZCIsImVyciIsImVycm9yIiwib3JpZW50YXRpb24iLCJ2YWx1ZSIsImJsb2IiLCJzcmMiLCJ0YXJnZXQiLCJyZXN1bHQiLCJyZWFkQXNEYXRhVVJMIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scaling_operations.js":
/*!***********************************!*\
  !*** ./src/scaling_operations.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"scaleImage\": () => (/* binding */ scaleImage)\n/* harmony export */ });\n/* harmony import */ var _data_operations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data_operations */ \"./src/data_operations.js\");\n/* harmony import */ var _browser_operations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./browser_operations */ \"./src/browser_operations.js\");\n\n\n\nfunction findMaxWidth(config, canvas) {\n  //Let's find the max available width for scaled image\n  var ratio = canvas.width / canvas.height;\n  var mWidth = Math.min(canvas.width, config.maxWidth, ratio * config.maxHeight);\n  if (config.maxSize > 0 && config.maxSize < canvas.width * canvas.height / 1000) mWidth = Math.min(mWidth, Math.floor(config.maxSize * 1000 / canvas.height));\n  if (!!config.scaleRatio) mWidth = Math.min(mWidth, Math.floor(config.scaleRatio * canvas.width));\n\n  if (config.debug) {\n    console.log('browser-image-resizer: original image size = ' + canvas.width + ' px (width) X ' + canvas.height + ' px (height)');\n    console.log('browser-image-resizer: scaled image size = ' + mWidth + ' px (width) X ' + Math.floor(mWidth / ratio) + ' px (height)');\n  }\n\n  if (mWidth <= 0) {\n    mWidth = 1;\n    console.warn(\"browser-image-resizer: image size is too small\");\n  }\n\n  return mWidth;\n}\n\nfunction exifApplied(canvas, ctx, orientation, img) {\n  var width = canvas.width;\n  var styleWidth = canvas.style.width;\n  var height = canvas.height;\n  var styleHeight = canvas.style.height;\n\n  if (orientation > 4) {\n    canvas.width = height;\n    canvas.style.width = styleHeight;\n    canvas.height = width;\n    canvas.style.height = styleWidth;\n  }\n\n  switch (orientation) {\n    case 2:\n      ctx.translate(width, 0);\n      ctx.scale(-1, 1);\n      break;\n\n    case 3:\n      ctx.translate(width, height);\n      ctx.rotate(Math.PI);\n      break;\n\n    case 4:\n      ctx.translate(0, height);\n      ctx.scale(1, -1);\n      break;\n\n    case 5:\n      ctx.rotate(0.5 * Math.PI);\n      ctx.scale(1, -1);\n      break;\n\n    case 6:\n      ctx.rotate(0.5 * Math.PI);\n      ctx.translate(0, -height);\n      break;\n\n    case 7:\n      ctx.rotate(0.5 * Math.PI);\n      ctx.translate(width, -height);\n      ctx.scale(-1, 1);\n      break;\n\n    case 8:\n      ctx.rotate(-0.5 * Math.PI);\n      ctx.translate(-width, 0);\n      break;\n  }\n\n  ctx.drawImage(img, 0, 0);\n  ctx.restore();\n}\n\nfunction scaleCanvasWithAlgorithm(canvas, config) {\n  var scaledCanvas = document.createElement('canvas');\n  var scale = config.outputWidth / canvas.width;\n  scaledCanvas.width = canvas.width * scale;\n  scaledCanvas.height = canvas.height * scale;\n  var srcImgData = canvas.getContext('2d').getImageData(0, 0, canvas.width, canvas.height);\n  var destImgData = scaledCanvas.getContext('2d').createImageData(scaledCanvas.width, scaledCanvas.height);\n  applyBilinearInterpolation(srcImgData, destImgData, scale);\n  scaledCanvas.getContext('2d').putImageData(destImgData, 0, 0);\n  return scaledCanvas;\n}\n\nfunction getHalfScaleCanvas(canvas) {\n  var halfCanvas = document.createElement('canvas');\n  halfCanvas.width = canvas.width / 2;\n  halfCanvas.height = canvas.height / 2;\n  halfCanvas.getContext('2d').drawImage(canvas, 0, 0, halfCanvas.width, halfCanvas.height);\n  return halfCanvas;\n}\n\nfunction applyBilinearInterpolation(srcCanvasData, destCanvasData, scale) {\n  function inner(f00, f10, f01, f11, x, y) {\n    var un_x = 1.0 - x;\n    var un_y = 1.0 - y;\n    return f00 * un_x * un_y + f10 * x * un_y + f01 * un_x * y + f11 * x * y;\n  }\n\n  var i, j;\n  var iyv, iy0, iy1, ixv, ix0, ix1;\n  var idxD, idxS00, idxS10, idxS01, idxS11;\n  var dx, dy;\n  var r, g, b, a;\n\n  for (i = 0; i < destCanvasData.height; ++i) {\n    iyv = i / scale;\n    iy0 = Math.floor(iyv); // Math.ceil can go over bounds\n\n    iy1 = Math.ceil(iyv) > srcCanvasData.height - 1 ? srcCanvasData.height - 1 : Math.ceil(iyv);\n\n    for (j = 0; j < destCanvasData.width; ++j) {\n      ixv = j / scale;\n      ix0 = Math.floor(ixv); // Math.ceil can go over bounds\n\n      ix1 = Math.ceil(ixv) > srcCanvasData.width - 1 ? srcCanvasData.width - 1 : Math.ceil(ixv);\n      idxD = (j + destCanvasData.width * i) * 4; // matrix to vector indices\n\n      idxS00 = (ix0 + srcCanvasData.width * iy0) * 4;\n      idxS10 = (ix1 + srcCanvasData.width * iy0) * 4;\n      idxS01 = (ix0 + srcCanvasData.width * iy1) * 4;\n      idxS11 = (ix1 + srcCanvasData.width * iy1) * 4; // overall coordinates to unit square\n\n      dx = ixv - ix0;\n      dy = iyv - iy0; // I let the r, g, b, a on purpose for debugging\n\n      r = inner(srcCanvasData.data[idxS00], srcCanvasData.data[idxS10], srcCanvasData.data[idxS01], srcCanvasData.data[idxS11], dx, dy);\n      destCanvasData.data[idxD] = r;\n      g = inner(srcCanvasData.data[idxS00 + 1], srcCanvasData.data[idxS10 + 1], srcCanvasData.data[idxS01 + 1], srcCanvasData.data[idxS11 + 1], dx, dy);\n      destCanvasData.data[idxD + 1] = g;\n      b = inner(srcCanvasData.data[idxS00 + 2], srcCanvasData.data[idxS10 + 2], srcCanvasData.data[idxS01 + 2], srcCanvasData.data[idxS11 + 2], dx, dy);\n      destCanvasData.data[idxD + 2] = b;\n      a = inner(srcCanvasData.data[idxS00 + 3], srcCanvasData.data[idxS10 + 3], srcCanvasData.data[idxS01 + 3], srcCanvasData.data[idxS11 + 3], dx, dy);\n      destCanvasData.data[idxD + 3] = a;\n    }\n  }\n}\n\nfunction scaleImage() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      img = _ref.img,\n      config = _ref.config,\n      _ref$orientation = _ref.orientation,\n      orientation = _ref$orientation === void 0 ? 1 : _ref$orientation;\n\n  var canvas = (0,_browser_operations__WEBPACK_IMPORTED_MODULE_1__.initializeOrGetCanvas)();\n  canvas.width = img.width;\n  canvas.height = img.height;\n  var ctx = canvas.getContext('2d');\n\n  if (config.mimeType === 'image/jpeg') {\n    // Only apply to JPEGs, white background default, see #42 and #66\n    ctx.fillStyle = '#ffffff';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.save();\n  } // EXIF\n\n\n  exifApplied(canvas, ctx, orientation, img);\n  var maxWidth = findMaxWidth(config, canvas);\n\n  while (canvas.width >= 2 * maxWidth) {\n    canvas = getHalfScaleCanvas(canvas);\n  }\n\n  if (canvas.width > maxWidth) {\n    canvas = scaleCanvasWithAlgorithm(canvas, Object.assign(config, {\n      outputWidth: maxWidth\n    }));\n  }\n\n  var imageData = canvas.toDataURL(config.mimeType, config.quality);\n  if (typeof config.onScale === 'function') config.onScale(imageData);\n  return (0,_data_operations__WEBPACK_IMPORTED_MODULE_0__.dataURIToBlob)(imageData);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scaling_operations.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});